/** * @name Permission cache is not cleared * @description Bccache should be cleared when permissions change. * @kind problem * @problem.severity warning * @security-severity 5.0 * @precision high * @id py/bccache * @tags security *       external/cwe/cwe-264 */import pythonimport semmle.python.ApiGraphs/** * 表示 `subprocess32` 模块中的 `list2cmdline` 函数。 * * 参见 https://pypi.org/project/subprocess32/ */API::Node subprocess32List2cmdline() {  // 检查模块和函数名是否匹配 subprocess32.list2cmdline  result = API::moduleImport("subprocess32").getMember("list2cmdline").getReturn() }/** * 表示 `subprocess32` 模块中的 `Popen` 类的 `__init__` 方法。 * * 参见 https://pypi.org/project/subprocess32/ */API::Node subprocess32Popen() {  // 检查模块和函数名是否匹配 subprocess32.Process  result = API::moduleImport("subprocess32").getMember("Popen").getReturn() }// 从 CallCfgNode 类中选择 callNode，从 DataFlow::Node 类中选择 argNodefrom DataFlow::CallCfgNode callNode, DataFlow::Node argNode// 条件：如果存在从 subprocess32List2cmdline() 调用的 getargs() 方法的返回值与 argNode 相等// 并且 callNode 是 subprocess32Popen() 的成员函数的调用节点// 并且 argNode 是 callNode 的第二个参数且不是空字符串则选择 callNode.asExpr(), "Process created with un-patched permission cache."// 选择并报告创建了未修补权限缓存的调用表达式和相关信息。where exists(DataFlow::CallCfgNode subCall |  subCall = subprocess32List2cmdline().getMember("getargs").getACall() and  argNode = subCall.getArg(0) and  callNode = subprocess32Popen().getMember("__init__").getACall() and  argNode = callNode.getArg(1).(StringLiteral).getText() != "" and