/** * @name Reflected server-side cross-site scripting * @description Writing user input directly to a web page *              allows for a cross-site scripting vulnerability. * @kind path-problem * @problem.severity error * @security-severity 6.1 * @sub-severity high * @precision high * @id py/reflective-xss * @tags security *       external/cwe/cwe-079 *       external/cwe/cwe-116 * */import pythonimport semmle.python.security.dataflow.ReflectedXssQueryimport semmle.python.security.dataflow.new.internal.ReflectedXssFlowprivate import semmle.python.filters.XssFilterprivate import semmle.python.filters.ClientFilter/** * 检测将用户输入直接输出到Web页面的反射型XSS漏洞。 * 这种模式可能导致恶意脚本在用户浏览器中执行。 */// 从ReflectedXssFlow模块中导入PathNode类，用于表示数据流路径节点class PathNode extends ReflectedXssFlow::PathNode {  // 重写kind方法，返回"PathNode"字符串  string kind() {    result = "PathNode"  }  // 重写toString方法，返回节点位置信息  string toString() {    result = super.toString()  }}// 从ReflectedXssFlow模块中导入PathGraph类，用于表示数据流路径图class PathGraph extends ReflectedXssFlow::PathGraph {  // 重写kind方法，返回"PathGraph"字符串  string kind() {    result = "PathGraph"  }  // 重写toString方法，返回路径图位置信息  string toString() {    result = super.toString()  }}// 定义查询，查找从源节点到汇节点的数据流路径from PathNode source, PathNode sinkwhere PathGraph::flowPath(source, sink)select sink.getNode(), source, sink, "Cross-site scripting vulnerability due to a $@.",  source.getNode(), "user-provided value"