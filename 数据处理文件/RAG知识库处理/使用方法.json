{
  "import semmle.python.ApiGraphs": {
    "Predicates": [
      "builtin",
      "moduleImport",
      "moduleImportExists",
      "root",
      "getAParameter",
      "getKeywordParameter",
      "getNumArgument",
      "getParameter",
      "getReturn",
      "getSelfParameter",
      "toString",
      "getANode",
      "getASink",
      "getASource",
      "annotation",
      "await",
      "entryPoint",
      "index",
      "keywordParameter",
      "member",
      "memberFromRef",
      "mod",
      "parameter",
      "return",
      "selfParameter",
      "subclass",
      "subscript",
      "unknownMember",
      "asSink",
      "asSource",
      "getACall",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getLocation",
      "getMember",
      "getNumParameter",
      "getPath",
      "getSubscript",
      "getSubscriptAt",
      "getUnknownMember",
      "hasLocationInfo"
    ],
    "Classes": [
      "CallNode",
      "Def",
      "EntryPoint",
      "Node",
      "Root",
      "Use",
      "ApiLabel"
    ],
    "Modules": [
      "Label",
      "API"
    ],
    "Imports": [
      "DataFlow"
    ],
    "Fields": [
      "callee"
    ],
    "Inherited fields": [
      "node"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getNode",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "asSink",
      "asSource",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscriptAt",
      "getUnknownMember",
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "CallNode",
      "EntryPoint"
    ]
  },
  "import semmle.python.objects.Modules": {
    "Predicates": [
      "attribute",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getIterNext",
      "getName",
      "getOrigin",
      "intValue",
      "introducedAt",
      "isClass",
      "isDescriptor",
      "isNotSubscriptedType",
      "length",
      "notTestableForEquality",
      "strValue",
      "subscriptUnknown",
      "toString",
      "useOriginAsLegacyObject",
      "getSourceModule",
      "hasCompleteExportInfo",
      "exports",
      "isInitModule",
      "getFolder",
      "getInitModule",
      "hasAttribute",
      "hasNoInitModule",
      "submodule"
    ],
    "Inherited predicates": [
      "functionAndOffset",
      "getSource",
      "hasAttribute",
      "isBuiltin",
      "binds",
      "booleanValue",
      "callResult",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "exports",
      "getClass",
      "getIterNext",
      "isClass",
      "isDescriptor",
      "isInitModule",
      "isNotSubscriptedType",
      "length",
      "notTestableForEquality",
      "subscriptUnknown",
      "useOriginAsLegacyObject",
      "attribute",
      "attributesUnknown",
      "calleeAndOffset",
      "getBuiltin",
      "getClassDeclaration",
      "getName",
      "getOrigin",
      "intValue",
      "introducedAt",
      "strValue",
      "toString"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "AbsentModuleAttributeObjectInternal",
      "AbsentModuleObjectInternal",
      "BuiltinModuleObjectInternal",
      "ModuleObjectInternal",
      "PackageObjectInternal",
      "PythonModuleObjectInternal"
    ]
  },
  "import semmle.python.Concepts": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSourceType",
      "getThreatModel",
      "hasLocationInfo",
      "toString",
      "getKeySizeArg",
      "getKeySizeWithOrigin",
      "getAPathArgument",
      "getAnInput",
      "getKind",
      "getOutput",
      "getBody",
      "getMimetype",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "contains",
      "containsInScope",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getANormalExit",
      "getAReturnValueFlowNode",
      "getAStmt",
      "getATypeParameter",
      "getAnArg",
      "getAnExitNode",
      "getArg",
      "getArgByName",
      "getArgName",
      "getArgs",
      "getDefinition",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getLastStatement",
      "getMaxPositionalArguments",
      "getMetrics",
      "getMinPositionalArguments",
      "getName",
      "getParent",
      "getParentNode",
      "getPositionalParameterCount",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "getTypeParameter",
      "getTypeParameters",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "inSource",
      "isArtificial",
      "isAsync",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isProcedure",
      "isPublic",
      "isSpecialMethod",
      "isTopLevel",
      "precedes",
      "controlsBlock",
      "dominates",
      "getAChild",
      "getAFalseSuccessor",
      "getANormalSuccessor",
      "getAPredecessor",
      "getASuccessor",
      "getATrueSuccessor",
      "getAnExceptionalSuccessor",
      "getBasicBlock",
      "getImmediateDominator",
      "getNode",
      "hasCompletePointsToSet",
      "inferredValue",
      "isAttribute",
      "isAugLoad",
      "isAugStore",
      "isBranch",
      "isCall",
      "isClass",
      "isDelete",
      "isEntryNode",
      "isExceptionalExit",
      "isFunction",
      "isIfExp",
      "isImport",
      "isImportMember",
      "isLiteral",
      "isLoad",
      "isModuleEntry",
      "isNormalExit",
      "isParameter",
      "isStore",
      "isSubscript",
      "pointsTo",
      "refersTo",
      "strictlyDominates",
      "strictlyReaches",
      "unlikelyReachable",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getFunction",
      "getHeaderArg",
      "getKwargs",
      "getNameArg",
      "getStarArg",
      "getSubscript",
      "getValueArg",
      "track",
      "getFormat",
      "mayExecuteInput",
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "ActiveThreatModelSource",
      "Escaping",
      "HtmlEscaping",
      "LdapDnEscaping",
      "LdapFilterEscaping",
      "RegexEscaping",
      "SafeAccessCheck",
      "XmlEscaping",
      "XmlParsingVulnerabilityKind"
    ],
    "Predicates": [
      "getCode",
      "getHeaderArg",
      "getNameArg",
      "getValueArg",
      "hasHttpOnlyFlag",
      "hasSameSiteAttribute",
      "hasSecureFlag",
      "getCredentialsAllowed",
      "getMiddlewareName",
      "getOrigins",
      "csrfEnabled",
      "getRequestHandler",
      "getVerificationSetting",
      "getAnInput",
      "getFormat",
      "getOutput",
      "mayExecuteInput",
      "getName",
      "minimumSecureKeySize",
      "getKind",
      "getHtmlKind",
      "getLdapDnKind",
      "getLdapFilterKind",
      "getRegexKind",
      "getXmlKind",
      "getADataNode",
      "httpVerb",
      "httpVerbLower",
      "getRedirectLocation",
      "getBody",
      "getMimetype",
      "getKeySizeArg",
      "getKeySizeWithOrigin",
      "keysizeBacktracker",
      "getBaseDn",
      "getFilter",
      "getQuery",
      "interpretsDict",
      "vulnerableToStrings",
      "getPathArg",
      "getAPathArgument",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "getARoutedParameter",
      "getFramework",
      "getBulkArg",
      "nameAllowsNewline",
      "valueAllowsNewline",
      "getARequestHandler",
      "getUrlPattern",
      "getUrlPatternArg",
      "checks",
      "getRegex",
      "getString",
      "getSql",
      "getCommand",
      "isShellInterpreted",
      "getSourceArg",
      "getSourceType",
      "getThreatModel",
      "getXPath",
      "toString",
      "vulnerableTo",
      "isDtdRetrieval",
      "isXmlBomb",
      "isXxe"
    ],
    "Classes": [
      "Range",
      "ActiveThreatModelSource",
      "CodeExecution",
      "Decoding",
      "Encoding",
      "Escaping",
      "FileSystemAccess",
      "FileSystemWriteAccess",
      "HtmlEscaping",
      "LdapDnEscaping",
      "LdapFilterEscaping",
      "Logging",
      "NoSqlExecution",
      "NoSqlSanitizer",
      "RegExpInterpretation",
      "RegexEscaping",
      "RegexExecution",
      "SqlConstruction",
      "SqlExecution",
      "SystemCommandExecution",
      "TemplateConstruction",
      "ThreatModelSource",
      "XmlEscaping",
      "SameSiteLax",
      "SameSiteNone",
      "SameSiteStrict",
      "SameSiteValue",
      "DsaRange",
      "EccRange",
      "RsaRange",
      "LdapExecution",
      "PathNormalization",
      "SafeAccessCheck",
      "KeyGeneration",
      "CookieWrite",
      "CorsMiddleware",
      "CsrfLocalProtectionSetting",
      "CsrfProtectionSetting",
      "HttpRedirectResponse",
      "HttpResponse",
      "RequestHandler",
      "ResponseHeaderBulkWrite",
      "ResponseHeaderWrite",
      "RouteSetup",
      "SetCookieCall",
      "XPathConstruction",
      "XPathExecution",
      "XmlParsing",
      "XmlParsingVulnerabilityKind"
    ],
    "Modules": [
      "CodeExecution",
      "Cryptography",
      "Decoding",
      "Encoding",
      "Escaping",
      "FileSystemAccess",
      "FileSystemWriteAccess",
      "Http",
      "Ldap",
      "Logging",
      "NoSqlExecution",
      "NoSqlSanitizer",
      "Path",
      "RegExpInterpretation",
      "RegexExecution",
      "SqlConstruction",
      "SqlExecution",
      "SystemCommandExecution",
      "TemplateConstruction",
      "ThreatModelSource",
      "XML",
      "Server",
      "LdapExecution",
      "PathNormalization",
      "SafeAccessCheck",
      "KeyGeneration",
      "CookieWrite",
      "CorsMiddleware",
      "CsrfLocalProtectionSetting",
      "CsrfProtectionSetting",
      "HttpRedirectResponse",
      "HttpResponse",
      "RequestHandler",
      "ResponseHeaderBulkWrite",
      "ResponseHeaderWrite",
      "RouteSetup",
      "XPathConstruction",
      "XPathExecution",
      "XmlParsing"
    ],
    "Aliases": [
      "Client"
    ],
    "Inherited fields": [
      "conditionBlock",
      "flipped",
      "node"
    ]
  },
  "import codeql.util.test.InlineExpectationsTest": {
    "Fields": [
      "element",
      "location",
      "optional",
      "tag",
      "value",
      "expectation"
    ],
    "Predicates": [
      "getLocation",
      "getTag",
      "getValue",
      "isOptional",
      "toString",
      "getExpectationText",
      "getExpectation",
      "hasExpectationWithValue",
      "getAMatchingExpectation",
      "testFailures",
      "getARelevantTag",
      "hasActualResult",
      "hasOptionalResult"
    ],
    "Inherited predicates": [
      "getExpectationText",
      "getContents",
      "toString",
      "getKnownFailure",
      "getLocation",
      "getTag",
      "getValue",
      "isOptional",
      "matchesActualResult"
    ],
    "Charpred": [
      "ActualTestResult",
      "FalseNegativeTestExpectation",
      "FalsePositiveTestExpectation",
      "GoodTestExpectation",
      "InvalidTestExpectation"
    ],
    "Inherited fields": [
      "comment",
      "knownFailure",
      "tag",
      "value"
    ],
    "Modules": [
      "Make",
      "TestPostProcessing",
      "MakeTest",
      "MergeTests",
      "MergeTests3",
      "MergeTests4",
      "MergeTests5"
    ],
    "Module signatures": [
      "InlineExpectationsTestSig",
      "TestSig",
      "InputSig"
    ],
    "Parameters": [
      "Impl",
      "TestImpl",
      "TestImpl1",
      "TestImpl2",
      "TestImpl3",
      "TestImpl4",
      "TestImpl5"
    ],
    "Classes": [
      "ActualTestResult",
      "FailureLocatable",
      "FalseNegativeTestExpectation",
      "FalsePositiveTestExpectation",
      "GoodTestExpectation",
      "InvalidTestExpectation",
      "ExpectationComment"
    ],
    "Aliases": [
      "Location"
    ]
  },
  "import python": {
    "Predicates": [
      "getSpecialMethodName",
      "toString",
      "getAnItem",
      "getItem",
      "getParent",
      "getAsname",
      "getValue",
      "getASubExpression",
      "getASubStatement",
      "isStored",
      "getAnnotation",
      "getTarget",
      "getAnnotatedExpression",
      "getDefault",
      "getKwAnnotation",
      "getKwDefault",
      "getADefault",
      "getAKwAnnotation",
      "getAKwDefault",
      "getAnAnnotation",
      "getAnnotations",
      "getDefaults",
      "getKwAnnotations",
      "getKwDefaults",
      "getKwargannotation",
      "getVarargannotation",
      "defines",
      "getAPrimaryQlClass",
      "getRepresentation",
      "getNode",
      "contains",
      "containsInScope",
      "getAChildNode",
      "getAFlowNode",
      "getLocation",
      "getParentNode",
      "getScope",
      "isArtificial",
      "getName",
      "getObject",
      "getAttr",
      "getCtx",
      "getOperation",
      "reaches_exit",
      "scope_entry_value_transfer_from_earlier",
      "alwaysReaches",
      "dominanceFrontier",
      "dominates",
      "getAFalseSuccessor",
      "getAPredecessor",
      "getASuccessor",
      "getATrueSuccessor",
      "getAnExceptionalSuccessor",
      "getAnUnconditionalSuccessor",
      "getImmediateDominator",
      "getImmediatelyControllingBlock",
      "getLastNode",
      "hasLocationInfo",
      "likelyReachable",
      "reaches",
      "reachesExit",
      "strictlyDominates",
      "strictlyReaches",
      "unlikelySuccessor",
      "getAnOperand",
      "getLeft",
      "getOp",
      "getRight",
      "operands",
      "getOperator",
      "impliesValue",
      "getAValue",
      "getValues",
      "getAReturnType",
      "getArgumentForCall",
      "getQualifiedName",
      "isProcedure",
      "descriptiveString",
      "getARaisedType",
      "maxParameters",
      "minParameters",
      "raisesUnknownType",
      "getAnInferredReturnType",
      "getAttribute",
      "hasAttribute",
      "getDeleter",
      "getGetter",
      "getInferredPropertyType",
      "getSetter",
      "getAnImplicitUse",
      "getScopeEntryDefinition",
      "redefinedAtCallSite",
      "getLiteralObject",
      "getAnImplicitlyConcatenatedPart",
      "getImplicitlyConcatenatedPart",
      "getImplicitlyConcatenatedParts",
      "getPrefix",
      "getS",
      "getAKeyword",
      "getANamedArgumentName",
      "getAnArg",
      "getArg",
      "getKeyword",
      "getKwargs",
      "getPositionalArgumentCount",
      "getStarArg",
      "getStarargs",
      "hasSideEffects",
      "getArgByName",
      "getFunction",
      "isClassDecoratorCall",
      "isDecoratorCall",
      "isFunctionDecoratorCall",
      "getANamedArg",
      "getAPositionalArg",
      "getFunc",
      "getNamedArg",
      "getNamedArgs",
      "getPositionalArg",
      "getPositionalArgs",
      "getArgs",
      "getInnerScope",
      "getNamedArgumentForCall",
      "getParameter",
      "getParameterByName",
      "neverReturns",
      "getCall",
      "getASubPattern",
      "getAStmt",
      "getBody",
      "getGuard",
      "getPattern",
      "getStmt",
      "getABase",
      "getADecorator",
      "getAMethod",
      "getBase",
      "getClassObject",
      "getEnclosingScope",
      "getInitMethod",
      "getMetaClass",
      "getMetrics",
      "isProbableMixin",
      "getDefinedClass",
      "getLastStatement",
      "getADecoratorCall",
      "getATypeParameter",
      "getBases",
      "getKeywords",
      "getTypeParameter",
      "getTypeParameters",
      "getACall",
      "getAfferentCoupling",
      "getEfferentCoupling",
      "getInheritanceDepth",
      "getLackOfCohesionCK",
      "getLackOfCohesionHM",
      "getNumberOfLines",
      "getNumberOfLinesOfCode",
      "getNumberOfLinesOfComments",
      "getNumberOfLinesOfDocStrings",
      "ignoreLackOfCohesion",
      "unionSubgraph",
      "assignedInInit",
      "attributeRefersTo",
      "booleanValue",
      "declaredAttribute",
      "declaredMetaClass",
      "declaresAttribute",
      "failedInference",
      "getABaseType",
      "getAMethodCalledFromInit",
      "getASuperType",
      "getAnImproperSuperType",
      "getBaseType",
      "getImportTimeScope",
      "getMro",
      "getMroItem",
      "getProbableSingletonInstance",
      "getPyClass",
      "hasABase",
      "hasDuplicateBases",
      "isAbstract",
      "isCallable",
      "isCollection",
      "isContainer",
      "isContextManager",
      "isDescriptorType",
      "isIterable",
      "isIterator",
      "isLegalExceptionType",
      "isMapping",
      "isNewStyle",
      "isOldStyle",
      "isOverridingDescriptorType",
      "isSequence",
      "isSubclassOf",
      "lookupAttribute",
      "lookupMro",
      "nextInMro",
      "notClass",
      "unhashable",
      "unknowableAttributes",
      "lookup",
      "attributeError",
      "baseException",
      "bool",
      "builtinFunction",
      "bytes",
      "classType",
      "classmethod",
      "complex",
      "dict",
      "exception",
      "float_",
      "functionType",
      "generator",
      "getSetDescriptorType",
      "importError",
      "indexError",
      "instanceType",
      "int_",
      "ioError",
      "keyError",
      "list",
      "long",
      "lookupError",
      "methodDescriptorType",
      "methodType",
      "module_",
      "nameError",
      "nonetype",
      "notImplementedError",
      "object",
      "property",
      "range",
      "set",
      "staticmethod",
      "stopIteration",
      "str",
      "super_",
      "systemExit",
      "tuple",
      "type",
      "typeError",
      "unicode",
      "unicodeDecodeError",
      "unicodeEncodeError",
      "getSymbol",
      "getContents",
      "getFollowing",
      "getText",
      "length",
      "getAnIterationVariable",
      "getElt",
      "getEvaluatingScope",
      "getIterable",
      "getIterationVariable",
      "getNthInnerLoop",
      "compares",
      "getAComparator",
      "getAnOp",
      "getComparator",
      "getComparators",
      "getOps",
      "getAnIf",
      "getIf",
      "getIfs",
      "getIter",
      "controls",
      "controlsEdge",
      "getChildContainer",
      "getImportRoot",
      "getParentContainer",
      "inStdlib",
      "isImportRoot",
      "isStdLibRoot",
      "getAChild",
      "getANormalSuccessor",
      "getBasicBlock",
      "getEnclosingModule",
      "hasCompletePointsToSet",
      "inferredValue",
      "isAttribute",
      "isAugLoad",
      "isAugStore",
      "isBranch",
      "isCall",
      "isClass",
      "isDelete",
      "isEntryNode",
      "isExceptionalExit",
      "isFunction",
      "isIfExp",
      "isImport",
      "isImportMember",
      "isLiteral",
      "isLoad",
      "isModuleEntry",
      "isNormalExit",
      "isParameter",
      "isStore",
      "isSubscript",
      "pointsTo",
      "refersTo",
      "unlikelyReachable",
      "getATarget",
      "getTargets",
      "getAKey",
      "getItems",
      "scope_as_global_variable",
      "getAUse",
      "getSourceVariable",
      "getVariable",
      "reachesEndOfBlock",
      "getInput",
      "getPredecessor",
      "getSense",
      "getSuccessor",
      "definedBy",
      "getDefiningNode",
      "getASourceUse",
      "getDefinition",
      "isMetaVariable",
      "getType",
      "handledException",
      "handledException_objectapi",
      "handles",
      "handles_objectapi",
      "getTry",
      "getGlobals",
      "getLocals",
      "isConstant",
      "isParenthesized",
      "isParenthesised",
      "emptyLine",
      "fromSource",
      "getShortName",
      "getSpecifiedEncoding",
      "isPossibleEntryPoint",
      "getFilter",
      "getSequence",
      "iterates",
      "getAnOrelse",
      "getOrelse",
      "isAsync",
      "getConversion",
      "getFormatSpec",
      "getAKeywordOnlyArg",
      "getAReturnValueFlowNode",
      "getArgName",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getMaxPositionalArguments",
      "getMinPositionalArguments",
      "getPositionalParameterCount",
      "hasKwArg",
      "hasVarArg",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isSpecialMethod",
      "getDefinedFunction",
      "getReturns",
      "getACallee",
      "getCallee",
      "getCaller",
      "getContext",
      "runtime",
      "getADependency",
      "getCyclomaticComplexity",
      "getNumberOfCalls",
      "getNumberOfParametersWithoutDefault",
      "getStatementNestingDepth",
      "getAFunctionCall",
      "getAMethodCall",
      "isLegalArgumentName",
      "isNormalMethod",
      "isOverriddenMethod",
      "isOverridingMethod",
      "theCallable",
      "getAKwonlyarg",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getVararg",
      "getId",
      "getAName",
      "getNames",
      "getTest",
      "getElif",
      "isElif",
      "isNameEqMain",
      "getLiteralValue",
      "getAnImportedModuleName",
      "isFromImport",
      "bottomModuleName",
      "getImportedModuleName",
      "getLevel",
      "isRelative",
      "topModuleName",
      "isTop",
      "getModule",
      "getModuleExpr",
      "definesName",
      "entryEdge",
      "getOuterVariable",
      "getAnElement",
      "getKey",
      "getExpression",
      "getLength",
      "getLineNumber",
      "getAGenerator",
      "getGenerator",
      "getGenerators",
      "getElement",
      "getAnElt",
      "getElts",
      "isSelf",
      "getEndColumn",
      "getEndLine",
      "getFile",
      "getStartColumn",
      "getStartLine",
      "declares",
      "startingAt",
      "getAlias",
      "getAPositional",
      "getClass",
      "getClassName",
      "getPositional",
      "getLiteral",
      "getAMapping",
      "getMapping",
      "getMappings",
      "getAPattern",
      "getPatterns",
      "getACase",
      "getCase",
      "getCases",
      "getSubject",
      "declaredInAll",
      "getAnExport",
      "getInitModule",
      "getKind",
      "getLoadPath",
      "getPackage",
      "getPackageName",
      "getPath",
      "getSubModule",
      "hasFromFuture",
      "inStdLib",
      "isPackage",
      "isPackageInit",
      "builtinModule",
      "named",
      "attr",
      "exports",
      "getAnImportedModule",
      "getSourceModule",
      "importedAs",
      "theModule",
      "hasCompleteExportInfo",
      "isUsedAsModule",
      "isUsedAsScript",
      "global_variable_callnode",
      "global_variable_import",
      "getHash",
      "indexOf",
      "deletes",
      "isDefinition",
      "isDeletion",
      "isUse",
      "uses",
      "isGlobal",
      "isLocal",
      "isNonLocal",
      "scope_as_local_variable",
      "getAVariable",
      "getN",
      "floatValue",
      "intValue",
      "repr",
      "getFloatValue",
      "getIntValue",
      "asBuiltin",
      "getAnInferredType",
      "getOrigin",
      "hasLongName",
      "isBuiltin",
      "isC",
      "maybe",
      "overrides",
      "simpleClass",
      "builtin",
      "notImplemented",
      "quitter",
      "hasNoInitModule",
      "submodule",
      "asName",
      "asTuple",
      "getPosition",
      "isKwargs",
      "isVarargs",
      "getAnInput",
      "getShortCircuitInput",
      "isComplete",
      "getDest",
      "isNl",
      "isReadOnly",
      "getAReturnedNode",
      "unconditionallyReturnsParameter",
      "attribute_assigned_in_method",
      "class_declares_attribute",
      "globallyDefinedName",
      "import_from_dot_in_init",
      "isPreferredModuleForName",
      "legalShortName",
      "major_version",
      "micro_version",
      "minor_version",
      "moduleNameFromFile",
      "nested_sequence_assign",
      "non_coupling_method",
      "object_for_string",
      "scope_raises",
      "scope_raises_objectapi",
      "scope_raises_unknown",
      "test_contains",
      "theAbcMetaClassObject",
      "theAttributeErrorType",
      "theBaseExceptionType",
      "theBoolType",
      "theBoundMethodType",
      "theBuiltinFunctionType",
      "theBuiltinModuleObject",
      "theBuiltinPropertyType",
      "theBytesType",
      "theClassMethodType",
      "theClassType",
      "theComplexType",
      "theDictType",
      "theExceptionType",
      "theFalseObject",
      "theFloatType",
      "theGeneratorType",
      "theGetSetDescriptorType",
      "theIOErrorType",
      "theIndexErrorType",
      "theInstanceType",
      "theIntType",
      "theKeyErrorType",
      "theListType",
      "theLongType",
      "theLookupErrorType",
      "theMethodDescriptorType",
      "theModuleType",
      "theNameErrorType",
      "theNoneObject",
      "theNoneType",
      "theNotImplementedErrorType",
      "theObjectType",
      "thePropertyType",
      "thePyFunctionType",
      "theRangeType",
      "theSetType",
      "theStandardErrorType",
      "theStaticMethodType",
      "theStopIterationType",
      "theStrType",
      "theSuperType",
      "theSysModuleObject",
      "theTrueObject",
      "theTupleType",
      "theTypeErrorType",
      "theTypeType",
      "theUnicodeType",
      "theUnknownType",
      "undefinedVariable",
      "unique_root_method",
      "unknownValue",
      "getException",
      "getRaised",
      "getARaisedType_objectapi",
      "getExceptionNode",
      "innateException",
      "innateException_objectapi",
      "viableExceptionEdge",
      "viableExceptionEdge_objectapi",
      "viableExceptionalExit",
      "viableExceptionalExit_objectapi",
      "getANormalExit",
      "getAnExitNode",
      "getDocString",
      "getEntryNode",
      "getFallthroughNode",
      "getReturnNode",
      "inSource",
      "isPublic",
      "isTopLevel",
      "precedes",
      "guardedByHasattr",
      "locallyDefined",
      "getAssignedValue",
      "getBuiltinElement",
      "getInferredElement",
      "getSourceElement",
      "useAndTest",
      "getStart",
      "getStep",
      "getStop",
      "getAnArgument",
      "getArgument",
      "getArguments",
      "argument_refinement",
      "assignment_definition",
      "attribute_assignment_refinement",
      "attribute_deletion_refinement",
      "deletion_definition",
      "exception_capture",
      "exception_group_capture",
      "import_star_refinement",
      "init_module_submodule_defn",
      "method_call_refinement",
      "multi_assignment_definition",
      "parameter_definition",
      "pattern_alias_definition",
      "pattern_capture_definition",
      "test_refinement",
      "with_definition",
      "hasDefiningNode",
      "hasRefinement",
      "hasRefinementEdge",
      "getAPhiInput",
      "getAPrunedPhiInput",
      "getAnUltimateDefinition",
      "getFallbackGlobal",
      "getPredecessorBlockForPhiArgument",
      "maybeUndefined",
      "reachableWithoutDefinition",
      "getAnEntryNode",
      "isUnreachable",
      "getLastItem",
      "isDocString",
      "isUnicode",
      "isAscii",
      "contextSize",
      "getContentLength",
      "getIndex",
      "getMessage",
      "getAGroupHandler",
      "getAHandler",
      "getANormalHandler",
      "getHandler",
      "getAFinalstmt",
      "getFinalbody",
      "getFinalstmt",
      "getHandlers",
      "empty",
      "getBound",
      "getOperand",
      "quotedString",
      "getABooleanValue",
      "getAReference",
      "getDefiniteBooleanValue",
      "isAbsent",
      "forBool",
      "forBytes",
      "forInt",
      "forString",
      "forUnicode",
      "none_",
      "siteQuitter",
      "escapes",
      "getALoad",
      "getAStore",
      "getAnAccess",
      "includes",
      "getContextExpr",
      "getOptionalVars"
    ],
    "Inherited predicates": [
      "getParent",
      "toString",
      "getSpecialMethodName",
      "getAnItem",
      "getItem",
      "contains",
      "containsInScope",
      "getAChildNode",
      "getAFlowNode",
      "getASubPattern",
      "getAnEntryNode",
      "getAnnotation",
      "getEnclosingModule",
      "getLastStatement",
      "getLocation",
      "getParentNode",
      "getScope",
      "getTarget",
      "getValue",
      "isArtificial",
      "isUnreachable",
      "getASubExpression",
      "getASubStatement",
      "defines",
      "hasSideEffects",
      "isConstant",
      "isParenthesised",
      "isParenthesized",
      "pointsTo",
      "refersTo",
      "getADefault",
      "getAKwAnnotation",
      "getAKwDefault",
      "getAnAnnotation",
      "getAnnotations",
      "getDefaults",
      "getKwAnnotations",
      "getKwDefaults",
      "getKwargannotation",
      "getVarargannotation",
      "getMsg",
      "getTest",
      "getATarget",
      "getTargets",
      "definedBy",
      "getAUse",
      "getBasicBlock",
      "getDefiningNode",
      "getSourceVariable",
      "getVariable",
      "reachesEndOfBlock",
      "dominates",
      "getAChild",
      "getAFalseSuccessor",
      "getANormalSuccessor",
      "getAPredecessor",
      "getASuccessor",
      "getATrueSuccessor",
      "getAnExceptionalSuccessor",
      "getImmediateDominator",
      "hasCompletePointsToSet",
      "inferredValue",
      "isAttribute",
      "isAugLoad",
      "isAugStore",
      "isBranch",
      "isCall",
      "isClass",
      "isDelete",
      "isEntryNode",
      "isExceptionalExit",
      "isFunction",
      "isIfExp",
      "isImport",
      "isImportMember",
      "isLiteral",
      "isLoad",
      "isModuleEntry",
      "isNormalExit",
      "isParameter",
      "isStore",
      "isSubscript",
      "strictlyDominates",
      "strictlyReaches",
      "unlikelyReachable",
      "getAStmt",
      "getAnOrelse",
      "getBody",
      "getIter",
      "getOrelse",
      "getStmt",
      "isAsync",
      "getContextExpr",
      "getOptionalVars",
      "getAttr",
      "getCtx",
      "getInput",
      "getOperation",
      "getLeft",
      "getOp",
      "getRight",
      "getAValue",
      "getValues",
      "asBuiltin",
      "booleanValue",
      "descriptiveString",
      "getACall",
      "getACallee",
      "getAFunctionCall",
      "getAMethodCall",
      "getARaisedType",
      "getAnInferredReturnType",
      "getAnInferredType",
      "getFunction",
      "getName",
      "getNamedArgumentForCall",
      "getOrigin",
      "hasLocationInfo",
      "hasLongName",
      "isAbstract",
      "isBuiltin",
      "isC",
      "isLegalArgumentName",
      "isNormalMethod",
      "isOverriddenMethod",
      "isOverridingMethod",
      "maxParameters",
      "maybe",
      "minParameters",
      "neverReturns",
      "notClass",
      "overrides",
      "raisesUnknownType",
      "simpleClass",
      "theCallable",
      "getArgumentForCall",
      "isProcedure",
      "attr",
      "getABooleanValue",
      "getAReference",
      "getClass",
      "getDefiniteBooleanValue",
      "getParameter",
      "getParameterByName",
      "hasAttribute",
      "isAbsent",
      "isLambda",
      "attributeRefersTo",
      "exports",
      "getAnImportedModule",
      "getKind",
      "getModule",
      "getPackage",
      "getPath",
      "getShortName",
      "getSourceModule",
      "importedAs",
      "theModule",
      "isReadOnly",
      "getASourceUse",
      "hasDefiningNode",
      "hasRefinement",
      "hasRefinementEdge",
      "getAnImplicitlyConcatenatedPart",
      "getImplicitlyConcatenatedPart",
      "getImplicitlyConcatenatedParts",
      "getLiteralValue",
      "getPrefix",
      "getS",
      "getText",
      "isDocString",
      "isUnicode",
      "getANamedArg",
      "getAPositionalArg",
      "getFunc",
      "getNamedArg",
      "getNamedArgs",
      "getPositionalArg",
      "getPositionalArgs",
      "getRepresentation",
      "getGuard",
      "getPattern",
      "getANormalExit",
      "getAnExitNode",
      "getDocString",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getReturnNode",
      "inSource",
      "isPublic",
      "isTopLevel",
      "precedes",
      "getABase",
      "getATypeParameter",
      "getBase",
      "getBases",
      "getInnerScope",
      "getKeywords",
      "getTypeParameter",
      "getTypeParameters",
      "getADecorator",
      "getAMethod",
      "getClassObject",
      "getEnclosingScope",
      "getInitMethod",
      "getMetaClass",
      "getMetrics",
      "getQualifiedName",
      "isProbableMixin",
      "getAComparator",
      "getAnOp",
      "getComparator",
      "getComparators",
      "getOps",
      "getAnIf",
      "getIf",
      "getIfs",
      "alwaysReaches",
      "dominanceFrontier",
      "getAnUnconditionalSuccessor",
      "getImmediatelyControllingBlock",
      "getLastNode",
      "getNode",
      "likelyReachable",
      "reaches",
      "reachesExit",
      "unlikelySuccessor",
      "getAChildContainer",
      "getAFile",
      "getAFolder",
      "getAbsolutePath",
      "getBaseName",
      "getExtension",
      "getFile",
      "getFolder",
      "getRelativePath",
      "getStem",
      "getURL",
      "getItems",
      "getAnIterationVariable",
      "getElt",
      "getIterationVariable",
      "getNthInnerLoop",
      "getEndColumn",
      "getEndLine",
      "getMessage",
      "getStartColumn",
      "getStartLine",
      "getSymbol",
      "getAnImplicitUse",
      "getScopeEntryDefinition",
      "global_variable_callnode",
      "global_variable_import",
      "redefinedAtCallSite",
      "scope_as_global_variable",
      "getTry",
      "getGlobals",
      "getLocals",
      "deletes",
      "getId",
      "isDefinition",
      "isDeletion",
      "isUse",
      "uses",
      "escapes",
      "getALoad",
      "getAStore",
      "getAnAccess",
      "isSelf",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getAReturnValueFlowNode",
      "getAnArg",
      "getArg",
      "getArgByName",
      "getArgName",
      "getArgs",
      "getDefinition",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getMaxPositionalArguments",
      "getMinPositionalArguments",
      "getPositionalParameterCount",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "isGenerator",
      "isInitMethod",
      "isMethod",
      "isSpecialMethod",
      "getChildContainer",
      "getImportRoot",
      "getParentContainer",
      "inStdlib",
      "isImportRoot",
      "isStdLibRoot",
      "getFilter",
      "getN",
      "getConversion",
      "getFormatSpec",
      "getReturns",
      "getAName",
      "getNames",
      "isMetaVariable",
      "isTop",
      "getKey",
      "getAnElt",
      "getElts",
      "getAGenerator",
      "getGenerator",
      "getGenerators",
      "getAnElement",
      "getBuiltinElement",
      "getInferredElement",
      "getLength",
      "getSourceElement",
      "getCase",
      "getAKeyword",
      "getAPositional",
      "getClassName",
      "getKeyword",
      "getPositional",
      "getLiteral",
      "getAMapping",
      "getMapping",
      "getMappings",
      "getAPattern",
      "getPatterns",
      "getACase",
      "getCases",
      "getSubject",
      "getHash",
      "declaredInAll",
      "getAnExport",
      "getAnImportedModuleName",
      "getInitModule",
      "getLoadPath",
      "getPackageName",
      "getSubModule",
      "hasFromFuture",
      "inStdLib",
      "isPackage",
      "isPackageInit",
      "getLiteralObject",
      "isGlobal",
      "isLocal",
      "isNonLocal",
      "getOperand",
      "getDefault",
      "getDest",
      "isNl",
      "getPredecessor",
      "getSense",
      "getSuccessor",
      "getAttribute",
      "getCause",
      "getExc",
      "getInst",
      "getTback",
      "getType",
      "getExceptionNode",
      "innateException",
      "innateException_objectapi",
      "viableExceptionEdge",
      "viableExceptionEdge_objectapi",
      "viableExceptionalExit",
      "viableExceptionalExit_objectapi",
      "getObject",
      "getCall",
      "getStart",
      "getStep",
      "getStop",
      "getIndex",
      "getAFinalstmt",
      "getFinalbody",
      "getFinalstmt",
      "getHandlers",
      "length",
      "getContents",
      "getFollowing",
      "getBound",
      "abs",
      "acos",
      "asin",
      "atan",
      "bitAnd",
      "bitNot",
      "bitOr",
      "bitShiftLeft",
      "bitShiftRight",
      "bitShiftRightSigned",
      "bitXor",
      "ceil",
      "copySign",
      "cos",
      "cosh",
      "exp",
      "floor",
      "gcd",
      "log",
      "log10",
      "log2",
      "maximum",
      "minimum",
      "nextAfter",
      "nextDown",
      "nextUp",
      "pow",
      "signum",
      "sin",
      "sinh",
      "sqrt",
      "tan",
      "tanh",
      "toBigInt",
      "toUnicode",
      "ulp"
    ],
    "Charpred": [
      "Annotation",
      "AssignStmt",
      "AssignmentDefinition",
      "AssignmentExprNode",
      "AsyncFor",
      "AsyncWith",
      "AttrNode",
      "AttributeAssignment",
      "BasicBlock",
      "BinaryExprNode",
      "BoolExprNode",
      "BuiltinFunctionObject",
      "BuiltinFunctionValue",
      "BuiltinMethodObject",
      "BuiltinMethodValue",
      "BuiltinModuleObject",
      "BuiltinPropertyObject",
      "BuiltinVariable",
      "Bytes",
      "CallNode",
      "CallableValue",
      "CallsiteRefinement",
      "ClassDef",
      "ClassLocalVariable",
      "ClassMethodObject",
      "ClassObject",
      "ClassValue",
      "CommentBlock",
      "CompareNode",
      "ConditionBlock",
      "DefinitionNode",
      "DeletionDefinition",
      "DeletionNode",
      "DictNode",
      "EncodingError",
      "EscapingAssignmentGlobalVariable",
      "EscapingGlobalVariable",
      "EssaAttributeDeletion",
      "ExceptFlowNode",
      "ExceptGroupFlowNode",
      "ExceptionCapture",
      "ExceptionGroupCapture",
      "ExceptionHandler",
      "False",
      "FastLocalVariable",
      "FastLocalsFunction",
      "FloatLiteral",
      "ForNode",
      "FunctionDef",
      "FunctionLocalVariable",
      "GlobalSsaVariable",
      "GlobalVariable",
      "IfExprNode",
      "ImaginaryLiteral",
      "ImplicitSubModuleDefinition",
      "ImportExprNode",
      "ImportMemberNode",
      "ImportStarNode",
      "ImportStarRefinement",
      "ImportTimeScope",
      "ImportingStmt",
      "IntegerLiteral",
      "IterableNode",
      "ListNode",
      "ListObject",
      "LocalVariable",
      "MethodCallsiteRefinement",
      "ModuleVariable",
      "MultiAssignmentDefinition",
      "NameConstant",
      "NameConstantNode",
      "NameLocalVariable",
      "NameNode",
      "NegativeIntegerLiteral",
      "NonEmptyTupleObject",
      "NonEscapingGlobalVariable",
      "NonLocalVariable",
      "NumericObject",
      "NumericValue",
      "Object",
      "PackageObject",
      "Parameter",
      "ParameterDefinition",
      "PatternAliasDefinition",
      "PatternCaptureDefinition",
      "PropertyObject",
      "PyFunctionObject",
      "PythonModuleObject",
      "PythonPropertyObject",
      "RaiseStmtNode",
      "RaisingNode",
      "ReraisingNode",
      "ScopeEntryDefinition",
      "SelfAttribute",
      "SelfAttributeRead",
      "SelfAttributeStore",
      "SelfCallsiteRefinement",
      "SequenceNode",
      "SetNode",
      "SingleSuccessorGuard",
      "SpecialSsaSourceVariable",
      "SsaSourceVariable",
      "SsaVariable",
      "StarredNode",
      "StaticMethodObject",
      "StringObject",
      "StringValue",
      "SubscriptNode",
      "SuperBoundMethod",
      "SyntaxError",
      "True",
      "TupleNode",
      "TupleObject",
      "TupleValue",
      "TypeHintComment",
      "UnaryExprNode",
      "Unicode",
      "Value",
      "Variable",
      "Version",
      "WithDefinition"
    ],
    "Fields": [
      "value",
      "f",
      "name"
    ],
    "Classes": [
      "Add",
      "Add_",
      "Alias",
      "AliasList",
      "AliasList_",
      "Alias_",
      "And",
      "And_",
      "AnnAssign",
      "AnnAssign_",
      "Annotation",
      "ArgumentRefinement",
      "Arguments",
      "ArgumentsParent",
      "ArgumentsParent_",
      "Arguments_",
      "Assert",
      "Assert_",
      "Assign",
      "AssignExpr",
      "AssignExpr_",
      "AssignStmt",
      "Assign_",
      "AssignmentDefinition",
      "AssignmentExprNode",
      "AstNode",
      "AstNode_",
      "AsyncFor",
      "AsyncWith",
      "AttrNode",
      "Attribute",
      "AttributeAssignment",
      "Attribute_",
      "AugAssign",
      "AugAssign_",
      "AugLoad",
      "AugLoad_",
      "AugStore",
      "AugStore_",
      "Await",
      "Await_",
      "BasicBlock",
      "BinaryExpr",
      "BinaryExprNode",
      "BinaryExpr_",
      "BitAnd",
      "BitAnd_",
      "BitOr",
      "BitOr_",
      "BitXor",
      "BitXor_",
      "BoolExpr",
      "BoolExprNode",
      "BoolExpr_",
      "BoolParent_",
      "BooleanLiteral",
      "Boolop",
      "Boolop_",
      "BoundMethodValue",
      "Break",
      "Break_",
      "BuiltinCallable",
      "BuiltinFunctionObject",
      "BuiltinFunctionValue",
      "BuiltinMethodObject",
      "BuiltinMethodValue",
      "BuiltinModuleObject",
      "BuiltinPropertyObject",
      "BuiltinVariable",
      "Bytes",
      "BytesOrStr",
      "BytesOrStr_",
      "Bytes_",
      "Call",
      "CallNode",
      "Call_",
      "CallableExpr",
      "CallableValue",
      "CallsiteRefinement",
      "Case",
      "Case_",
      "Class",
      "ClassDef",
      "ClassExpr",
      "ClassExpr_",
      "ClassLocalVariable",
      "ClassMethodObject",
      "ClassMetrics",
      "ClassObject",
      "ClassValue",
      "Class_",
      "Cmpop",
      "CmpopList",
      "CmpopList_",
      "Cmpop_",
      "Comment",
      "CommentBlock",
      "Comp",
      "Compare",
      "CompareNode",
      "Compare_",
      "Comprehension",
      "ComprehensionList",
      "ComprehensionList_",
      "Comprehension_",
      "ConditionBlock",
      "Container",
      "Continue",
      "Continue_",
      "ControlFlowNode",
      "DefinitionNode",
      "Del",
      "Del_",
      "Delete",
      "Delete_",
      "DeletionDefinition",
      "DeletionNode",
      "Dict",
      "DictComp",
      "DictComp_",
      "DictDisplayItem",
      "DictItem",
      "DictItemList",
      "DictItemListParent",
      "DictItemListParent_",
      "DictItemList_",
      "DictItem_",
      "DictNode",
      "DictUnpacking",
      "DictUnpackingOrKeyword",
      "DictUnpacking_",
      "Dict_",
      "Div",
      "Div_",
      "Ellipsis",
      "Ellipsis_",
      "EncodingError",
      "Eq",
      "Eq_",
      "EscapingAssignmentGlobalVariable",
      "EscapingGlobalVariable",
      "EssaAttributeDeletion",
      "EssaDefinition",
      "EssaEdgeRefinement",
      "EssaNodeDefinition",
      "EssaNodeRefinement",
      "EssaVariable",
      "ExceptFlowNode",
      "ExceptGroupFlowNode",
      "ExceptGroupStmt",
      "ExceptGroupStmt_",
      "ExceptStmt",
      "ExceptStmt_",
      "ExceptionCapture",
      "ExceptionGroupCapture",
      "ExceptionHandler",
      "Exec",
      "Exec_",
      "Expr",
      "ExprContext",
      "ExprContextParent",
      "ExprContextParent_",
      "ExprContext_",
      "ExprList",
      "ExprListParent",
      "ExprListParent_",
      "ExprList_",
      "ExprOrStmt_",
      "ExprParent",
      "ExprParent_",
      "ExprStmt",
      "ExprStmt_",
      "Expr_",
      "False",
      "FastLocalVariable",
      "FastLocalsFunction",
      "File",
      "Filter",
      "Filter_",
      "FloatLiteral",
      "FloorDiv",
      "FloorDiv_",
      "Folder",
      "For",
      "ForNode",
      "For_",
      "FormattedValue",
      "FormattedValue_",
      "Fstring",
      "Fstring_",
      "Function",
      "FunctionDef",
      "FunctionExpr",
      "FunctionExpr_",
      "FunctionInvocation",
      "FunctionLocalVariable",
      "FunctionMetrics",
      "FunctionObject",
      "FunctionParent",
      "FunctionParent_",
      "FunctionValue",
      "Function_",
      "GeneratorExp",
      "GeneratorExp_",
      "Global",
      "GlobalSsaVariable",
      "GlobalVariable",
      "Global_",
      "Gt",
      "GtE",
      "GtE_",
      "Gt_",
      "Guard",
      "Guard_",
      "If",
      "IfExp",
      "IfExp_",
      "IfExprNode",
      "If_",
      "ImaginaryLiteral",
      "ImmutableLiteral",
      "ImplicitSubModuleDefinition",
      "Import",
      "ImportExpr",
      "ImportExprNode",
      "ImportExpr_",
      "ImportMember",
      "ImportMemberNode",
      "ImportMember_",
      "ImportStar",
      "ImportStarNode",
      "ImportStarRefinement",
      "ImportStar_",
      "ImportTimeScope",
      "Import_",
      "ImportingStmt",
      "In",
      "In_",
      "IntegerLiteral",
      "Invert",
      "Invert_",
      "Is",
      "IsNot",
      "IsNot_",
      "Is_",
      "IterableNode",
      "KeyValuePair",
      "KeyValuePair_",
      "Keyword",
      "Keyword_",
      "LShift",
      "LShift_",
      "Lambda",
      "Lambda_",
      "Line",
      "List",
      "ListComp",
      "ListComp_",
      "ListNode",
      "ListObject",
      "List_",
      "Load",
      "Load_",
      "LocalVariable",
      "Location",
      "LocationParent_",
      "Lt",
      "LtE",
      "LtE_",
      "Lt_",
      "MRO",
      "MatMult",
      "MatMult_",
      "MatchAsPattern",
      "MatchAsPattern_",
      "MatchCapturePattern",
      "MatchCapturePattern_",
      "MatchClassPattern",
      "MatchClassPattern_",
      "MatchDoubleStarPattern",
      "MatchDoubleStarPattern_",
      "MatchKeyValuePattern",
      "MatchKeyValuePattern_",
      "MatchKeywordPattern",
      "MatchKeywordPattern_",
      "MatchLiteralPattern",
      "MatchLiteralPattern_",
      "MatchMappingPattern",
      "MatchMappingPattern_",
      "MatchOrPattern",
      "MatchOrPattern_",
      "MatchSequencePattern",
      "MatchSequencePattern_",
      "MatchStarPattern",
      "MatchStarPattern_",
      "MatchStmt",
      "MatchStmt_",
      "MatchValuePattern",
      "MatchValuePattern_",
      "MatchWildcardPattern",
      "MatchWildcardPattern_",
      "MethodCallsiteRefinement",
      "Mod",
      "Mod_",
      "Module",
      "ModuleMetrics",
      "ModuleObject",
      "ModuleValue",
      "ModuleVariable",
      "Module_",
      "Mult",
      "Mult_",
      "MultiAssignmentDefinition",
      "Name",
      "NameConstant",
      "NameConstantNode",
      "NameLocalVariable",
      "NameNode",
      "Name_",
      "NegativeIntegerLiteral",
      "NonEmptyTupleObject",
      "NonEscapingGlobalVariable",
      "NonLocalVariable",
      "Nonlocal",
      "Nonlocal_",
      "Not",
      "NotEq",
      "NotEq_",
      "NotIn",
      "NotIn_",
      "Not_",
      "Num",
      "Num_",
      "NumericObject",
      "NumericValue",
      "Object",
      "Operator",
      "Operator_",
      "Or",
      "Or_",
      "PackageObject",
      "Param",
      "ParamSpec",
      "ParamSpec_",
      "Param_",
      "Parameter",
      "ParameterDefinition",
      "ParameterList",
      "Parameter_",
      "Pass",
      "Pass_",
      "Pattern",
      "PatternAliasDefinition",
      "PatternCaptureDefinition",
      "PatternList",
      "PatternListParent",
      "PatternListParent_",
      "PatternList_",
      "PatternParent",
      "PatternParent_",
      "Pattern_",
      "PhiFunction",
      "PlaceHolder",
      "PlaceHolder_",
      "Pow",
      "Pow_",
      "Print",
      "Print_",
      "PropertyObject",
      "PropertyValue",
      "PyEdgeRefinement",
      "PyFunctionObject",
      "PythonFunctionValue",
      "PythonModuleObject",
      "PythonPropertyObject",
      "RShift",
      "RShift_",
      "Raise",
      "RaiseStmtNode",
      "Raise_",
      "RaisingNode",
      "Repr",
      "Repr_",
      "ReraisingNode",
      "Return",
      "Return_",
      "Scope",
      "ScopeEntryDefinition",
      "Scope_",
      "SelfAttribute",
      "SelfAttributeRead",
      "SelfAttributeStore",
      "SelfCallsiteRefinement",
      "SequenceNode",
      "SequenceObject",
      "SequenceValue",
      "Set",
      "SetComp",
      "SetComp_",
      "SetNode",
      "Set_",
      "SingleSuccessorGuard",
      "Slice",
      "Slice_",
      "SpecialOperation_",
      "SpecialSsaSourceVariable",
      "SsaSourceVariable",
      "SsaVariable",
      "Starred",
      "StarredNode",
      "Starred_",
      "StaticMethodObject",
      "Stmt",
      "StmtList",
      "StmtListParent",
      "StmtListParent_",
      "StmtList_",
      "Stmt_",
      "Store",
      "Store_",
      "StrListParent",
      "StrListParent_",
      "StrParent_",
      "Str_",
      "StringList",
      "StringList_",
      "StringLiteral",
      "StringObject",
      "StringPart",
      "StringPartList",
      "StringPartList_",
      "StringPart_",
      "StringValue",
      "Sub",
      "Sub_",
      "Subscript",
      "SubscriptNode",
      "Subscript_",
      "SuperBoundMethod",
      "SyntaxError",
      "TemplateDottedNotation_",
      "TemplateWrite",
      "TemplateWrite_",
      "True",
      "Try",
      "Try_",
      "Tuple",
      "TupleNode",
      "TupleObject",
      "TupleValue",
      "Tuple_",
      "TypeAlias",
      "TypeAlias_",
      "TypeHintComment",
      "TypeParameter",
      "TypeParameterList",
      "TypeParameterListParent",
      "TypeParameterListParent_",
      "TypeParameterList_",
      "TypeParameter_",
      "TypeVar",
      "TypeVarTuple",
      "TypeVarTuple_",
      "TypeVar_",
      "UAdd",
      "UAdd_",
      "USub",
      "USub_",
      "UnaryExpr",
      "UnaryExprNode",
      "UnaryExpr_",
      "Unaryop",
      "Unaryop_",
      "Unicode",
      "Unit",
      "Value",
      "Variable",
      "VariableParent_",
      "Version",
      "While",
      "While_",
      "With",
      "WithDefinition",
      "With_",
      "Yield",
      "YieldFrom",
      "YieldFrom_",
      "Yield_"
    ],
    "Modules": [
      "BaseFlow",
      "ClassValue",
      "Module",
      "ModuleObject",
      "Object",
      "SsaSource",
      "TupleObject",
      "Value"
    ],
    "Aliases": [
      "ClassScope",
      "Context",
      "FunctionScope",
      "ModuleScope",
      "ObjectSource",
      "Str",
      "StrConst"
    ]
  },
  "import semmle.python.frameworks.FastApi": {
    "Inherited fields": [
      "node"
    ],
    "Predicates": [
      "getCredentialsAllowed",
      "getHeaders",
      "getMethods",
      "getMiddlewareName",
      "getOrigins",
      "cls",
      "instance",
      "getNameArg",
      "getValueArg",
      "nameAllowsNewline",
      "valueAllowsNewline"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getNode",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getParameter"
    ],
    "Modules": [
      "FastApi",
      "ApiRouter",
      "App",
      "Response"
    ],
    "Classes": [
      "AddCorsMiddlewareCall",
      "HeaderSubscriptWrite",
      "InstanceSource",
      "RequestHandlerParam"
    ],
    "Fields": [
      "index",
      "value"
    ],
    "Charpred": [
      "HeaderSubscriptWrite",
      "RequestHandlerParam"
    ]
  },
  "import semmle.python.frameworks.Starlette": {
    "Inherited fields": [
      "node",
      "callee"
    ],
    "Predicates": [
      "getCredentialsAllowed",
      "getHeaders",
      "getMethods",
      "getMiddlewareName",
      "getOrigins",
      "cls",
      "instance",
      "getAPathArgument",
      "classRef"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getNode",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getAParameter",
      "getKeywordParameter",
      "getNumArgument",
      "getParameter",
      "getReturn",
      "getSelfParameter"
    ],
    "Charpred": [
      "AddMiddlewareCall",
      "FileResponseCall"
    ],
    "Classes": [
      "InstanceSource",
      "AddCorsMiddlewareCall",
      "AddMiddlewareCall",
      "FileResponseCall"
    ],
    "Modules": [
      "Starlette",
      "App",
      "Middleware",
      "Request",
      "Url",
      "WebSocket"
    ]
  },
  "import semmle.python.frameworks.Pyramid": {
    "Inherited fields": [
      "method_lookup",
      "node"
    ],
    "Predicates": [
      "getViewArg",
      "classRef",
      "instance",
      "getRequestParameter"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "calls",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getMethodName",
      "getNode",
      "getObject",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getBody",
      "getMimetype",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "contains",
      "containsInScope",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getANormalExit",
      "getAReturnValueFlowNode",
      "getAStmt",
      "getATypeParameter",
      "getAnArg",
      "getAnExitNode",
      "getArgName",
      "getArgs",
      "getDefinition",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getLastStatement",
      "getMaxPositionalArguments",
      "getMetrics",
      "getMinPositionalArguments",
      "getName",
      "getParent",
      "getParentNode",
      "getPositionalParameterCount",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "getTypeParameter",
      "getTypeParameters",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "inSource",
      "isArtificial",
      "isAsync",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isProcedure",
      "isPublic",
      "isSpecialMethod",
      "isTopLevel",
      "precedes"
    ],
    "Charpred": [
      "AddViewCall",
      "ViewCallable"
    ],
    "Classes": [
      "AddViewCall",
      "PyramidRedirect",
      "InstanceSource",
      "ViewCallable"
    ],
    "Modules": [
      "Pyramid",
      "Configurator",
      "Redirect",
      "Request",
      "Response",
      "View"
    ]
  },
  "import semmle.python.security.dataflow.UrlRedirectCustomizations": {
    "Predicates": [
      "step",
      "sanitizes"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toUpperCase",
      "trim",
      "backtrack",
      "calls",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getMethodName",
      "getNode",
      "getObject",
      "getStarArg",
      "getSubscript",
      "track"
    ],
    "Charpred": [
      "FlowState",
      "MayContainBackslashes",
      "NoBackslashes",
      "RedirectLocationAsSink",
      "ReplaceBackslashesSanitizer",
      "StringConcatAsSanitizer"
    ],
    "Fields": [
      "receiver"
    ],
    "Inherited fields": [
      "method_lookup",
      "node"
    ],
    "Classes": [
      "AdditionalFlowStep",
      "ConstCompareAsSanitizerGuard",
      "FlowState",
      "MayContainBackslashes",
      "NoBackslashes",
      "RedirectLocationAsSink",
      "RemoteFlowSourceAsSource",
      "ReplaceBackslashesSanitizer",
      "Sanitizer",
      "Sink",
      "Source",
      "StringConcatAsSanitizer"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ]
  },
  "import semmle.python.dataflow.new.internal.TaintTrackingPublic": {
    "Predicates": [
      "hasStep",
      "step",
      "localExprTaint",
      "localTaint",
      "localTaintStep"
    ],
    "Inherited predicates": [
      "toString"
    ],
    "Classes": [
      "AdditionalTaintStep"
    ]
  },
  "import semmle.python.frameworks.Aioch": {
    "Modules": [
      "Aioch",
      "Client"
    ],
    "Classes": [
      "ClientExecuteCall"
    ],
    "Predicates": [
      "instance",
      "subclassRef",
      "getSql"
    ],
    "Inherited fields": [
      "node"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getNode",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Charpred": [
      "ClientExecuteCall"
    ]
  },
  "import semmle.python.frameworks.Aiohttp": {
    "Modules": [
      "AiohttpClientModel",
      "AiohttpWebModel",
      "ClientSession",
      "Request",
      "Response",
      "StreamReader",
      "View"
    ],
    "Fields": [
      "routeArgsStart",
      "index",
      "value",
      "apiNode"
    ],
    "Inherited fields": [
      "node",
      "apiNode",
      "callee"
    ],
    "Predicates": [
      "getHandlerArg",
      "getUrlPatternArg",
      "getARequestHandler",
      "getViewClass",
      "getRedirectLocation",
      "getSourceType",
      "getHeaderArg",
      "getNameArg",
      "getValueArg",
      "nameAllowsNewline",
      "valueAllowsNewline",
      "getARoutedParameter",
      "getFramework",
      "applicationInstance",
      "urlDispatcherInstance",
      "getApiNode",
      "getBody",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "classRef",
      "getAPathArgument",
      "instance",
      "subclassRef"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getARequestHandler",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getNode",
      "getScope",
      "getStarArg",
      "getSubscript",
      "getViewClass",
      "hasLocationInfo",
      "toString",
      "track",
      "getARoutedParameter",
      "getFramework",
      "getHandlerArg",
      "getUrlPattern",
      "getUrlPatternArg",
      "getAParameter",
      "getApiNode",
      "getBody",
      "getKeywordParameter",
      "getMimetype",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "getNumArgument",
      "getParameter",
      "getReturn",
      "getSelfParameter",
      "getThreatModel",
      "hasHttpOnlyFlag",
      "hasSameSiteAttribute",
      "hasSecureFlag",
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getASelfRef",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes"
    ],
    "Charpred": [
      "AiohttpAddRouteCall",
      "AiohttpCoroutineRouteSetup",
      "AiohttpDecoratorRouteSetup",
      "AiohttpRedirectExceptionInstantiation",
      "AiohttpRequestHandlerRequestParam",
      "AiohttpRequestMultiDictProxyInstances",
      "AiohttpRequestParamFromTypeAnnotation",
      "AiohttpRequestStreamReaderInstances",
      "AiohttpRequestYarlUrlInstances",
      "AiohttpResponseCookieSubscriptWrite",
      "AiohttpResponseDelCookieCall",
      "AiohttpResponseHeaderSubscriptWrite",
      "AiohttpResponseSetCookieCall",
      "AiohttpViewClassFromRouteSetup",
      "AiohttpViewClassFromSuperClass",
      "AiohttpViewClassRequestAttributeRead",
      "AiohttpViewRouteSetup",
      "AiohttpWebResponseInstantiation",
      "FileResponseCall",
      "StreamResponse"
    ],
    "Classes": [
      "AiohttpAddRouteCall",
      "AiohttpCoroutineRouteSetup",
      "AiohttpDecoratorRouteSetup",
      "AiohttpRedirectExceptionInstantiation",
      "AiohttpRequestHandlerRequestParam",
      "AiohttpRequestParamFromTypeAnnotation",
      "AiohttpResponseCookieSubscriptWrite",
      "AiohttpResponseDelCookieCall",
      "AiohttpResponseHeaderSubscriptWrite",
      "AiohttpResponseSetCookieCall",
      "AiohttpRouteSetup",
      "AiohttpViewClass",
      "AiohttpViewClassFromRouteSetup",
      "AiohttpViewClassFromSuperClass",
      "AiohttpViewClassRequestAttributeRead",
      "AiohttpViewRouteSetup",
      "AiohttpWebResponseInstantiation",
      "FileResponseCall",
      "StreamResponse",
      "AiohttpRequestMultiDictProxyInstances",
      "AiohttpRequestStreamReaderInstances",
      "AiohttpRequestYarlUrlInstances",
      "InstanceSource"
    ]
  },
  "import semmle.python.frameworks.Airspeed": {
    "Modules": [
      "Airspeed"
    ]
  },
  "import codeql.util.AlertFiltering": {
    "Predicates": [
      "restrictAlertsTo",
      "restrictAlertsToExactLocation",
      "filterByLocation"
    ],
    "Modules": [
      "AlertFilteringImpl"
    ],
    "Parameters": [
      "Location"
    ]
  },
  "import semmle.python.frameworks.RestFramework": {
    "Predicates": [
      "classRef",
      "instance",
      "getARequestHandler",
      "getARoutedParameter",
      "getFramework"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "asViewRef",
      "asViewResult",
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getARef",
      "getASelfRef",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getBody",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getAReturnValueFlowNode",
      "getATypeParameter",
      "getAnArg",
      "getArg",
      "getArgByName",
      "getArgName",
      "getArgs",
      "getDefinition",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getMaxPositionalArguments",
      "getMinPositionalArguments",
      "getPositionalParameterCount",
      "getTypeParameter",
      "getTypeParameters",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "isAsync",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isProcedure",
      "isSpecialMethod",
      "getFirstPossibleRoutedParamIndex",
      "getRequestParam",
      "getRequestParamIndex"
    ],
    "Classes": [
      "InstanceSource",
      "RestFrameworkApiViewClass",
      "RestFrameworkFunctionBasedView",
      "RestFrameworkFunctionBasedViewWithoutKnownRoute"
    ],
    "Modules": [
      "RestFramework",
      "ApiException",
      "Request",
      "Response"
    ],
    "Charpred": [
      "RestFrameworkApiViewClass",
      "RestFrameworkFunctionBasedView",
      "RestFrameworkFunctionBasedViewWithoutKnownRoute"
    ]
  },
  "import semmle.python.frameworks.Bottle": {
    "Predicates": [
      "app",
      "bottle",
      "getNameArg",
      "getValueArg",
      "nameAllowsNewline",
      "valueAllowsNewline",
      "getBody",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "headers",
      "request",
      "response",
      "routeMethods"
    ],
    "Modules": [
      "Bottle",
      "BottleModule",
      "App",
      "Headers",
      "Request",
      "Response",
      "Templates",
      "View"
    ],
    "Inherited fields": [
      "method_lookup",
      "node"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "calls",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getMethodName",
      "getNode",
      "getObject",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getMimetype",
      "contains",
      "containsInScope",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getANormalExit",
      "getAReturnValueFlowNode",
      "getAStmt",
      "getATypeParameter",
      "getAnArg",
      "getAnExitNode",
      "getArgName",
      "getArgs",
      "getBody",
      "getDefinition",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getLastStatement",
      "getMaxPositionalArguments",
      "getMetrics",
      "getMinPositionalArguments",
      "getName",
      "getParent",
      "getParentNode",
      "getPositionalParameterCount",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "getTypeParameter",
      "getTypeParameters",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "inSource",
      "isArtificial",
      "isAsync",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isProcedure",
      "isPublic",
      "isSpecialMethod",
      "isTopLevel",
      "precedes"
    ],
    "Charpred": [
      "BottleResponseHandlerSetHeaderCall",
      "BottleReturnResponse",
      "HeaderWriteSubscript",
      "ViewCallable"
    ],
    "Fields": [
      "name",
      "value"
    ],
    "Classes": [
      "HeaderWriteSubscript",
      "BottleResponseHandlerSetHeaderCall",
      "BottleReturnResponse",
      "ViewCallable"
    ]
  },
  "import codeql.util.FileSystem": {
    "Aliases": [
      "append"
    ],
    "Parameters": [
      "shouldAppend",
      "File",
      "Input",
      "Config"
    ],
    "Predicates": [
      "getAChildContainer",
      "getAFile",
      "getAFolder",
      "getAbsolutePath",
      "getBaseName",
      "getExtension",
      "getFile",
      "getFolder",
      "getParentContainer",
      "getRelativePath",
      "getStem",
      "getURL",
      "toString",
      "getFileBySourceArchiveName",
      "resolve"
    ],
    "Inherited predicates": [
      "getAChildContainer",
      "getAFile",
      "getAFolder",
      "getAbsolutePath",
      "getBaseName",
      "getExtension",
      "getFile",
      "getFolder",
      "getParentContainer",
      "getRelativePath",
      "getStem",
      "toString"
    ],
    "Modules": [
      "IdeContextual",
      "Make",
      "Append",
      "Resolve",
      "Folder"
    ],
    "Type signatures": [
      "FileSig"
    ],
    "Module signatures": [
      "InputSig",
      "ResolveSig"
    ],
    "Predicate signatures": [
      "shouldAppendSig"
    ],
    "Classes": [
      "Container",
      "File",
      "Folder"
    ]
  },
  "import semmle.python.frameworks.Tornado": {
    "Predicates": [
      "add_handlers",
      "classRef",
      "instance",
      "redirectMethod",
      "subclassRef",
      "writeMethod",
      "getARef",
      "getARequestHandler",
      "getSourceType",
      "routeSetupRuleList",
      "tornado",
      "httputil",
      "web",
      "getHeaderArg",
      "getNameArg",
      "getValueArg",
      "getFramework"
    ],
    "Classes": [
      "ClassInstantiation",
      "InstanceSource",
      "RequestHandlerClass",
      "SelfParam",
      "TornadoRequestHandlerSetCookieCall",
      "TornadoRouteSetup"
    ],
    "Inherited fields": [
      "node",
      "method_lookup"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getLocation",
      "getNode",
      "getScope",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getBody",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes",
      "getParameter",
      "getThreatModel",
      "calls",
      "getMethodName",
      "getObject",
      "hasHttpOnlyFlag",
      "hasSameSiteAttribute",
      "hasSecureFlag",
      "getARequestHandler",
      "getARoutedParameter",
      "getUrlPattern",
      "getUrlPatternArg"
    ],
    "Charpred": [
      "ClassInstantiation",
      "RequestHandlerClass",
      "SelfParam",
      "TornadoRequestHandlerSetCookieCall"
    ],
    "Modules": [
      "HttpServerRequest",
      "Tornado",
      "HttpHeaders",
      "TornadoModule",
      "HttpUtil",
      "Web",
      "Application",
      "RequestHandler"
    ]
  },
  "import semmle.python.dataflow.new.internal.DataFlowPublic": {
    "Predicates": [
      "argumentOf",
      "getCall",
      "getAttribute",
      "getMaDRepresentation",
      "toString",
      "getABarrierNode",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getStarArg",
      "getVariable",
      "asCfgNode",
      "getLocation",
      "getNode",
      "getScope",
      "getAReadContent",
      "getAStoreContent",
      "exprNode",
      "guardNode",
      "parameterNode",
      "getKey",
      "asExpr",
      "getParameter",
      "controlsBlock",
      "calls",
      "getMethodName",
      "getObject",
      "getADefiningWrite",
      "getARead",
      "getAWrite",
      "getEnclosingCallable",
      "getModule",
      "getALocalSource",
      "hasLocationInfo",
      "getPreUpdateNode",
      "getDefinition",
      "getIndex"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getNode",
      "getSubscript",
      "track",
      "getCall",
      "isParameterOf",
      "dominates",
      "getAChild",
      "getAFalseSuccessor",
      "getANormalSuccessor",
      "getAPredecessor",
      "getASuccessor",
      "getATrueSuccessor",
      "getAnExceptionalSuccessor",
      "getBasicBlock",
      "getEnclosingModule",
      "getImmediateDominator",
      "hasCompletePointsToSet",
      "inferredValue",
      "isAttribute",
      "isAugLoad",
      "isAugStore",
      "isBranch",
      "isCall",
      "isClass",
      "isDelete",
      "isEntryNode",
      "isExceptionalExit",
      "isFunction",
      "isIfExp",
      "isImport",
      "isImportMember",
      "isLiteral",
      "isLoad",
      "isModuleEntry",
      "isNormalExit",
      "isParameter",
      "isStore",
      "isSubscript",
      "pointsTo",
      "refersTo",
      "strictlyDominates",
      "strictlyReaches",
      "unlikelyReachable",
      "getParameter",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getStarArg"
    ],
    "Charpred": [
      "AttributeContent",
      "CapturedVariableContent",
      "CfgNode",
      "DictionaryElementContent",
      "ExprNode",
      "ExtractedArgumentNode",
      "ExtractedParameterNode",
      "GuardNode",
      "IterableElementNode",
      "IterableSequenceNode",
      "MethodCallNode",
      "ModuleVariableNode",
      "ScopeEntryDefinitionNode",
      "StarPatternElementNode",
      "TupleElementContent"
    ],
    "Parameters": [
      "guardChecks"
    ],
    "Fields": [
      "node",
      "key",
      "def",
      "conditionBlock",
      "flipped",
      "consumer",
      "method_lookup",
      "mod",
      "var",
      "index"
    ],
    "Imports": [
      "Attributes",
      "LocalSources",
      "TypeTracking"
    ],
    "Classes": [
      "ArgumentNode",
      "AttributeContent",
      "CallCfgNode",
      "CapturedVariableContent",
      "CfgNode",
      "Content",
      "ContentSet",
      "DictionaryElementAnyContent",
      "DictionaryElementContent",
      "ExprNode",
      "ExtractedArgumentNode",
      "ExtractedParameterNode",
      "GuardNode",
      "IterableElementNode",
      "IterableSequenceNode",
      "ListElementContent",
      "LocalSourceParameterNode",
      "MethodCallNode",
      "ModuleVariableNode",
      "Node",
      "ParameterNode",
      "PostUpdateNode",
      "ScopeEntryDefinitionNode",
      "SetElementContent",
      "StarPatternElementNode",
      "TupleElementContent"
    ],
    "Datatypes": [
      "TContent",
      "TNode"
    ],
    "Modules": [
      "BarrierGuard"
    ],
    "Predicate signatures": [
      "guardChecksSig"
    ],
    "Inherited fields": [
      "node",
      "def"
    ],
    "Branch types": [
      "TAttributeContent",
      "TCapturedVariableContent",
      "TDictionaryElementAnyContent",
      "TDictionaryElementContent",
      "TListElementContent",
      "TSetElementContent",
      "TTupleElementContent",
      "TCfgNode",
      "TFlowSummaryNode",
      "TForbiddenRecursionGuard",
      "TIterableElementNode",
      "TIterableSequenceNode",
      "TModuleVariableNode",
      "TScopeEntryDefinitionNode",
      "TStarPatternElementNode",
      "TSynthCaptureNode",
      "TSynthCapturedVariablesParameterNode",
      "TSynthCompCapturedVariablesArgumentNode",
      "TSynthCompCapturedVariablesArgumentPostUpdateNode",
      "TSynthDictSplatArgumentNode",
      "TSynthDictSplatParameterNode",
      "TSynthStarArgsElementParameterNode",
      "TSyntheticOrmModelNode",
      "TSyntheticPostUpdateNode",
      "TSyntheticPreUpdateNode"
    ],
    "Injectors": [
      "TAttributeContent",
      "TCapturedVariableContent",
      "TDictionaryElementAnyContent",
      "TDictionaryElementContent",
      "TListElementContent",
      "TSetElementContent",
      "TTupleElementContent",
      "TCfgNode",
      "TFlowSummaryNode",
      "TForbiddenRecursionGuard",
      "TIterableElementNode",
      "TIterableSequenceNode",
      "TModuleVariableNode",
      "TScopeEntryDefinitionNode",
      "TStarPatternElementNode",
      "TSynthCaptureNode",
      "TSynthCapturedVariablesParameterNode",
      "TSynthCompCapturedVariablesArgumentNode",
      "TSynthCompCapturedVariablesArgumentPostUpdateNode",
      "TSynthDictSplatArgumentNode",
      "TSynthDictSplatParameterNode",
      "TSynthStarArgsElementParameterNode",
      "TSyntheticOrmModelNode",
      "TSyntheticPostUpdateNode",
      "TSyntheticPreUpdateNode"
    ]
  },
  "import semmle.python.security.dataflow.UnsafeShellCommandConstructionCustomizations": {
    "Fields": [
      "call",
      "s",
      "add",
      "fstring",
      "formatCall"
    ],
    "Predicates": [
      "describe",
      "getCommandExecution",
      "getStringConstruction",
      "isUsedAsShellCommand"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "ArrayJoin",
      "ShlexQuoteAsSanitizer",
      "Sink",
      "StringConcatAsSink",
      "StringInterpolationAsSink",
      "TaintedFormatStringAsSink"
    ],
    "Classes": [
      "ArrayJoin",
      "Sanitizer",
      "ShlexQuoteAsSanitizer",
      "Sink",
      "Source",
      "StringConcatAsSink",
      "StringInterpolationAsSink",
      "TaintedFormatStringAsSink"
    ],
    "Aliases": [
      "TypeTracker"
    ],
    "Modules": [
      "UnsafeShellCommandConstruction"
    ]
  },
  "import utils.test.VerifyApiGraphs": {
    "Fields": [
      "expectedKind",
      "expectedLoc",
      "path",
      "polarity"
    ],
    "Predicates": [
      "explainFailure",
      "getEdgeLabel",
      "getPathLength",
      "holds",
      "isNegative",
      "lookup",
      "tryExplainFailure",
      "failed"
    ],
    "Inherited predicates": [
      "getContents",
      "getFollowing",
      "getLocation",
      "getText",
      "toString"
    ],
    "Charpred": [
      "Assertion"
    ],
    "Imports": [
      "ApiGraphs",
      "DataFlow",
      "python"
    ],
    "Classes": [
      "Assertion"
    ]
  },
  "import semmle.python.PrintAst": {
    "Fields": [
      "element",
      "call",
      "func",
      "param",
      "list",
      "i",
      "mapping",
      "node"
    ],
    "Predicates": [
      "getAstNode",
      "getChild",
      "getChildNode",
      "getLocation",
      "getStmtList",
      "toString",
      "getCall",
      "getFunction",
      "edges",
      "graphProperties",
      "nodes",
      "shouldPrint",
      "getAChild",
      "getChildEdgeLabel",
      "getParent",
      "getProperty",
      "getList",
      "maps",
      "getValue"
    ],
    "Inherited predicates": [
      "getAChild",
      "getChildEdgeLabel",
      "getParent",
      "getProperty",
      "getLocation",
      "getAstNode",
      "getChildNode",
      "getStmtList",
      "toString",
      "getChild",
      "getValue"
    ],
    "Charpred": [
      "AstElementNode",
      "CallArgumentsNode",
      "FunctionParamsNode",
      "ParameterNode",
      "StmtListNode",
      "TopLevelPrintAstNode",
      "YamlMappingMapNode",
      "YamlNodeNode"
    ],
    "Inherited fields": [
      "element"
    ],
    "Imports": [
      "RegexTreeView",
      "Yaml",
      "python"
    ],
    "Classes": [
      "AstElementNode",
      "CallArgumentsNode",
      "CallPrintNode",
      "ClassNode",
      "ExceptNode",
      "ForPrintNode",
      "FunctionDefNode",
      "FunctionNode",
      "FunctionParamsNode",
      "IfNode",
      "ParameterNode",
      "PrintAstConfiguration",
      "PrintAstNode",
      "StmtListNode",
      "StringLiteralNode",
      "TopLevelPrintAstNode",
      "TryNode",
      "WhilePrintNode",
      "WithNode",
      "YamlMappingMapNode",
      "YamlMappingNode",
      "YamlNodeNode"
    ],
    "Modules": [
      "PrintYaml"
    ]
  },
  "import semmle.python.AstExtended": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "AliasList",
      "ArgumentsParent",
      "AstNode",
      "BytesOrStr",
      "Comprehension",
      "ComprehensionList",
      "DictItem",
      "DictItemList",
      "DictItemListParent",
      "ExprContextParent",
      "ExprList",
      "ExprListParent",
      "ExprParent",
      "FunctionParent",
      "ParamSpec",
      "ParameterList",
      "PatternList",
      "PatternListParent",
      "PatternParent",
      "StmtListParent",
      "StrListParent",
      "StringList",
      "StringPart",
      "StringPartList",
      "TypeAlias",
      "TypeParameter",
      "TypeParameterList",
      "TypeParameterListParent",
      "TypeVar",
      "TypeVarTuple"
    ]
  },
  "import semmle.python.AstGenerated": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Add_",
      "AliasList_",
      "Alias_",
      "And_",
      "AnnAssign_",
      "ArgumentsParent_",
      "Arguments_",
      "Assert_",
      "AssignExpr_",
      "Assign_",
      "AstNode_",
      "Attribute_",
      "AugAssign_",
      "AugLoad_",
      "AugStore_",
      "Await_",
      "BinaryExpr_",
      "BitAnd_",
      "BitOr_",
      "BitXor_",
      "BoolExpr_",
      "BoolParent_",
      "Boolop_",
      "Break_",
      "BytesOrStr_",
      "Bytes_",
      "Call_",
      "Case_",
      "ClassExpr_",
      "Class_",
      "CmpopList_",
      "Cmpop_",
      "Compare_",
      "ComprehensionList_",
      "Comprehension_",
      "Continue_",
      "Del_",
      "Delete_",
      "DictComp_",
      "DictItemListParent_",
      "DictItemList_",
      "DictItem_",
      "DictUnpacking_",
      "Dict_",
      "Div_",
      "Ellipsis_",
      "Eq_",
      "ExceptGroupStmt_",
      "ExceptStmt_",
      "Exec_",
      "ExprContextParent_",
      "ExprContext_",
      "ExprListParent_",
      "ExprList_",
      "ExprOrStmt_",
      "ExprParent_",
      "ExprStmt_",
      "Expr_",
      "Filter_",
      "FloorDiv_",
      "For_",
      "FormattedValue_",
      "Fstring_",
      "FunctionExpr_",
      "FunctionParent_",
      "Function_",
      "GeneratorExp_",
      "Global_",
      "GtE_",
      "Gt_",
      "Guard_",
      "IfExp_",
      "If_",
      "ImportExpr_",
      "ImportMember_",
      "ImportStar_",
      "Import_",
      "In_",
      "Invert_",
      "IsNot_",
      "Is_",
      "KeyValuePair_",
      "Keyword_",
      "LShift_",
      "Lambda_",
      "ListComp_",
      "List_",
      "Load_",
      "LocationParent_",
      "LtE_",
      "Lt_",
      "MatMult_",
      "MatchAsPattern_",
      "MatchCapturePattern_",
      "MatchClassPattern_",
      "MatchDoubleStarPattern_",
      "MatchKeyValuePattern_",
      "MatchKeywordPattern_",
      "MatchLiteralPattern_",
      "MatchMappingPattern_",
      "MatchOrPattern_",
      "MatchSequencePattern_",
      "MatchStarPattern_",
      "MatchStmt_",
      "MatchValuePattern_",
      "MatchWildcardPattern_",
      "Mod_",
      "Module_",
      "Mult_",
      "Name_",
      "Nonlocal_",
      "NotEq_",
      "NotIn_",
      "Not_",
      "Num_",
      "Operator_",
      "Or_",
      "ParamSpec_",
      "Param_",
      "Parameter_",
      "Pass_",
      "PatternListParent_",
      "PatternList_",
      "PatternParent_",
      "Pattern_",
      "PlaceHolder_",
      "Pow_",
      "Print_",
      "RShift_",
      "Raise_",
      "Repr_",
      "Return_",
      "Scope_",
      "SetComp_",
      "Set_",
      "Slice_",
      "SpecialOperation_",
      "Starred_",
      "StmtListParent_",
      "StmtList_",
      "Stmt_",
      "Store_",
      "StrListParent_",
      "StrParent_",
      "Str_",
      "StringList_",
      "StringPartList_",
      "StringPart_",
      "Sub_",
      "Subscript_",
      "TemplateDottedNotation_",
      "TemplateWrite_",
      "Try_",
      "Tuple_",
      "TypeAlias_",
      "TypeParameterListParent_",
      "TypeParameterList_",
      "TypeParameter_",
      "TypeVarTuple_",
      "TypeVar_",
      "UAdd_",
      "USub_",
      "UnaryExpr_",
      "Unaryop_",
      "VariableParent_",
      "While_",
      "With_",
      "YieldFrom_",
      "Yield_"
    ]
  },
  "import semmle.python.frameworks.PEP249": {
    "Predicates": [
      "toString",
      "instance",
      "connect",
      "execute"
    ],
    "Inherited predicates": [
      "asSink",
      "asSource",
      "getACall",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getLocation",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscript",
      "getSubscriptAt",
      "getUnknownMember",
      "hasLocationInfo",
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getScope",
      "toString",
      "backtrack",
      "flowsTo",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "track"
    ],
    "Classes": [
      "InstanceSource",
      "AsyncDatabaseConnection",
      "AsyncDatabaseCursor",
      "AsyncPEP249ModuleApiNode",
      "DatabaseConnection",
      "DatabaseCursor",
      "PEP249ModuleApiNode"
    ],
    "Modules": [
      "PEP249",
      "Connection",
      "Cursor"
    ]
  },
  "import semmle.python.dataflow.new.internal.Attributes": {
    "Inherited predicates": [
      "accesses",
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getAttributeName",
      "getAttributeNameExpr",
      "getEnclosingCallable",
      "getLocation",
      "getObject",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "mayHaveAttributeName",
      "toString",
      "track",
      "unknownAttribute"
    ],
    "Predicates": [
      "accesses",
      "getAttributeName",
      "getAttributeNameExpr",
      "getObject",
      "mayHaveAttributeName",
      "unknownAttribute",
      "getValue"
    ],
    "Imports": [
      "DataFlowPublic",
      "DataFlowUtil"
    ],
    "Classes": [
      "AttrRead",
      "AttrRef",
      "AttrWrite"
    ]
  },
  "import semmle.python.dataflow.old.Implementation": {
    "Predicates": [
      "extension",
      "fromAttribute",
      "getAttribute",
      "noAttribute",
      "toString",
      "iterable_unpacking_descent",
      "getAttributePath",
      "getCaller",
      "getParameterTaint",
      "isTop",
      "attributeLoadStep",
      "callContexts",
      "callFlowStep",
      "callTaintStep",
      "callWithTaintedArgument",
      "essaFlowStep",
      "flowSource",
      "flowStep",
      "fromImportStep",
      "getattrStep",
      "hasFlowPath",
      "ifExpStep",
      "importStep",
      "instantiationCall",
      "instantiationStep",
      "isPathSink",
      "isPathSource",
      "iterationStep",
      "legacyExtensionStep",
      "moduleAttributeTainted",
      "parameterStep",
      "returnFlowStep",
      "useStep",
      "yieldStep"
    ],
    "Imports": [
      "Legacy",
      "TaintTracking",
      "python"
    ],
    "Classes": [
      "AttributePath",
      "NamedAttributePath",
      "NoAttribute",
      "TaintTrackingContext",
      "TaintTrackingImplementation",
      "TaintTrackingNode"
    ],
    "Datatypes": [
      "TTaintTrackingContext",
      "TTaintTrackingNode"
    ],
    "Modules": [
      "Implementation"
    ],
    "Inherited predicates": [
      "getAttribute",
      "noAttribute",
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim"
    ],
    "Branch types": [
      "TNoParam",
      "TParamContext",
      "TTaintTrackingNode_"
    ],
    "Injectors": [
      "TNoParam",
      "TParamContext",
      "TTaintTrackingNode_"
    ]
  },
  "import semmle.python.pointsto.PointsTo": {
    "Predicates": [
      "definitionAttributePointsTo",
      "pointsTo",
      "variableAttributePointsTo",
      "asCfgNodeOrHere",
      "fix",
      "toCfgNode",
      "toString",
      "fromCfgNode",
      "fromObject",
      "unknown",
      "evaluates",
      "testEvaluates",
      "attributePointsTo",
      "evaluatesTo",
      "getattr_call",
      "pointsToInt",
      "requireHasAttr",
      "requireSubClass",
      "setattr_call",
      "subscriptPartsPointsTo",
      "typeCallPointsTo",
      "call",
      "callWithContext",
      "call_points_to",
      "callsite_calls_function",
      "callsite_points_to",
      "named_argument_transfer",
      "neverReturns",
      "parameter_points_to",
      "positional_argument_points_to",
      "scope_entry_value_transfer",
      "selfMethodCall",
      "varargs_tuple",
      "pointsToAtExit",
      "declaredAttributeVar",
      "attributeRequired",
      "importCtxPointsTo",
      "module_imported_as",
      "pointsToString",
      "reachableBlock",
      "ssa_phi_reachable_from_input",
      "variablePointsTo",
      "base_count",
      "declaredAttribute",
      "failedInference",
      "getBase",
      "getMetaClass",
      "getMro",
      "hasAttr",
      "improperSubclass",
      "isNewStyle",
      "isOldStyle",
      "six_add_metaclass"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "CfgOrigin"
    ],
    "Modules": [
      "AttributePointsTo",
      "CfgOrigin",
      "Conditionals",
      "Expressions",
      "InterProceduralPointsTo",
      "ModuleAttributes",
      "PointsTo",
      "PointsToInternal",
      "Types"
    ]
  },
  "import semmle.python.frameworks.Werkzeug": {
    "Predicates": [
      "instance",
      "classRef"
    ],
    "Classes": [
      "InstanceSource"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Modules": [
      "Werkzeug",
      "Authorization",
      "FileStorage",
      "Headers",
      "MultiDict"
    ]
  },
  "import semmle.python.frameworks.Baize": {
    "Modules": [
      "Baize"
    ],
    "Classes": [
      "BaizeFileResponseCall"
    ],
    "Inherited fields": [
      "callee",
      "node"
    ],
    "Predicates": [
      "getAPathArgument"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAParameter",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKeywordParameter",
      "getKwargs",
      "getLocation",
      "getNode",
      "getNumArgument",
      "getParameter",
      "getReturn",
      "getScope",
      "getSelfParameter",
      "getStarArg",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Charpred": [
      "BaizeFileResponseCall"
    ]
  },
  "import codeql.ssa.Ssa": {
    "Predicates": [
      "getABarrierNode",
      "deadDef",
      "getInconsistencyCounts",
      "nonUniqueDef",
      "nonUniqueDefReachesEndOfBlock",
      "notDominatedByDef",
      "phiReadWithoutTwoPriorRefs",
      "phiWithoutTwoPriorRefs",
      "readWithMultiplePriorRefs",
      "readWithoutDef",
      "readWithoutPriorRef",
      "uselessPhiNode",
      "localFlowStep",
      "localMustFlowStep",
      "definesAt",
      "getBasicBlock",
      "getLocation",
      "getSourceVariable",
      "toString",
      "adjacentDefRead",
      "adjacentDefReadExt",
      "adjacentUseUse",
      "firstUse",
      "lastRef",
      "lastRefExt",
      "lastRefRedef",
      "lastRefRedefExt",
      "phiHasInputFromBlock",
      "phiHasInputFromBlockExt",
      "ssaDefReachesRead",
      "ssaDefReachesReadExt",
      "adjacentRefPhi",
      "adjacentRefRead"
    ],
    "Parameters": [
      "guardChecks",
      "State",
      "guardChecksSsaDef",
      "DfInput",
      "Location",
      "Input"
    ],
    "Classes": [
      "ExprNode",
      "ExprNodePreOrPost",
      "ExprPostUpdateNode",
      "Node",
      "SsaDefinitionExtNode",
      "SsaDefinitionNode",
      "SsaInputNode",
      "SsaNode",
      "SsaSynthReadNode",
      "WriteDefSourceNode",
      "Definition",
      "DefinitionExt",
      "PhiNode",
      "PhiReadNode",
      "UncertainWriteDefinition",
      "WriteDefinition",
      "Ref"
    ],
    "Modules": [
      "BarrierGuard",
      "BarrierGuardDefWithState",
      "BarrierGuardWithState",
      "Consistency",
      "DataFlowIntegration",
      "TestAdjacentRefs",
      "Make"
    ],
    "Predicate signatures": [
      "guardChecksSig"
    ],
    "Type signatures": [
      "StateSig"
    ],
    "Module signatures": [
      "DataFlowIntegrationInputSig",
      "InputSig"
    ],
    "Aliases": [
      "ssaDefReachesEndOfBlock",
      "ssaDefReachesEndOfBlockExt",
      "uncertainWriteDefinitionInput"
    ],
    "Inherited predicates": [
      "asDefinition",
      "getBasicBlock",
      "getDefinitionExt",
      "getIndex",
      "getLocation",
      "getSourceVariable",
      "toString",
      "definesAt"
    ],
    "Charpred": [
      "SsaSynthReadNode",
      "UncertainWriteDefinition",
      "WriteDefinition"
    ]
  },
  "import semmle.python.dataflow.new.BarrierGuards": {
    "Classes": [
      "ConstCompareBarrier"
    ],
    "Aliases": [
      "StringConstCompareBarrier"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "ConstCompareBarrier"
    ]
  },
  "import semmle.python.pointsto.Base": {
    "Imports": [
      "SsaDefinitions",
      "python"
    ],
    "Predicates": [
      "class_declares_attribute",
      "import_from_dot_in_init",
      "test_contains",
      "undefinedVariable",
      "unknownValue"
    ],
    "Modules": [
      "BaseFlow"
    ]
  },
  "import semmle.python.frameworks.Stdlib": {
    "Predicates": [
      "instance",
      "subclassRef",
      "getACall",
      "getACallback",
      "propagatesFlow",
      "field",
      "fieldList",
      "getfirstRef",
      "getfirstResult",
      "getlistRef",
      "getlistResult",
      "getvalueRef",
      "getvalueResult",
      "getAnInput",
      "getInitialization",
      "getAlgorithm",
      "getBlockMode",
      "classRef",
      "getDigestArg",
      "getHostArgument",
      "path",
      "getAPathArgument",
      "join",
      "base64",
      "cgi",
      "compiledRegex",
      "elementTreeClassRef",
      "getHmacConstructorCall",
      "json",
      "os",
      "pathlibPath",
      "pickle",
      "pickle_load",
      "pickle_loads",
      "platform",
      "popen2",
      "saxParserWithFeatureExternalGesTurnedOn",
      "subprocess",
      "getUrl",
      "getSourceType",
      "startResponse",
      "writeFunction",
      "getARoutedParameter",
      "getFramework",
      "isValidated",
      "getBody",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg"
    ],
    "Classes": [
      "HttpRequestHandlerClassDef",
      "InstanceSource",
      "OsOpenCall",
      "CopySummary",
      "DictGetAnySummary",
      "DictGetSummary",
      "DictItems",
      "DictKeys",
      "DictPopSummary",
      "DictPopitemSummary",
      "DictSetdefaultKeySummary",
      "DictSetdefaultSummary",
      "DictSummary",
      "DictValues",
      "EnumerateSummary",
      "FilterSummary",
      "FrozensetSummary",
      "HashlibDataPassedToHashClass",
      "HashlibGenericHashOperation",
      "HashlibHashClassUpdateCall",
      "HashlibNewCall",
      "HashlibNewUpdateCall",
      "HmacCryptographicOperation",
      "HmacDigestCall",
      "HmacNewCall",
      "HmacUpdateCall",
      "IterSummary",
      "ListAppend",
      "ListSummary",
      "LoggerLogCall",
      "MapSummary",
      "NextSummary",
      "OsGetEnv",
      "PopSummary",
      "ReFunctionsSummary",
      "ReMatchMethodsSummary",
      "ReMatchSummary",
      "RePatternSummary",
      "ReplaceSummary",
      "ReversedSummary",
      "SetAdd",
      "SetSummary",
      "SortedSummary",
      "Sqlite3",
      "TupleSummary",
      "UrllibParseUrlsplitCall",
      "ZipSummary",
      "WsgiEnvirontParameter",
      "WsgiServerSubclass",
      "WsgirefSimpleServerApplication",
      "WsgirefSimpleServerApplicationReturn",
      "WsgirefSimpleServerApplicationWriteCall"
    ],
    "Modules": [
      "FieldStorage",
      "OsPath",
      "Stdlib",
      "StdlibPrivate",
      "FileLikeObject",
      "HttpMessage",
      "Logger",
      "Morsel",
      "SplitResult",
      "AsyncIO",
      "BaseHttpRequestHandler",
      "Cgi",
      "HttpConnection",
      "HttpResponse",
      "OS",
      "OsFileSystemAccessModeling",
      "StringIO",
      "WsgirefSimpleServer",
      "XmlParser",
      "Headers"
    ],
    "Inherited predicates": [
      "applyGeneratedModel",
      "applyManualModel",
      "charAt",
      "codePointAt",
      "codePointCount",
      "getACallSimple",
      "hasExactModel",
      "hasGeneratedModel",
      "hasManualModel",
      "hasProvenance",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "propagatesFlow",
      "propagatesFlowExt",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim",
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getAlgorithm",
      "getBlockMode",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "getAnInput",
      "getInitialization",
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getBody",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getSubscript",
      "track",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getNode",
      "getStarArg",
      "asSink",
      "asSource",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscriptAt",
      "getUnknownMember",
      "getThreatModel",
      "getASelfRef",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getAReturnValueFlowNode",
      "getATypeParameter",
      "getAnArg",
      "getArgName",
      "getArgs",
      "getDefinition",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getMaxPositionalArguments",
      "getMinPositionalArguments",
      "getPositionalParameterCount",
      "getTypeParameter",
      "getTypeParameters",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "isAsync",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isProcedure",
      "isSpecialMethod",
      "getMimetype"
    ],
    "Charpred": [
      "CopySummary",
      "DictGetAnySummary",
      "DictGetSummary",
      "DictItems",
      "DictKeys",
      "DictPopSummary",
      "DictPopitemSummary",
      "DictSetdefaultKeySummary",
      "DictSetdefaultSummary",
      "DictSummary",
      "DictValues",
      "EnumerateSummary",
      "FilterSummary",
      "FrozensetSummary",
      "HashlibDataPassedToHashClass",
      "HashlibGenericHashOperation",
      "HashlibHashClassUpdateCall",
      "HashlibNewCall",
      "HashlibNewUpdateCall",
      "HmacDigestCall",
      "HmacNewCall",
      "HmacUpdateCall",
      "HttpRequestHandlerClassDef",
      "IterSummary",
      "ListAppend",
      "ListSummary",
      "LoggerLogCall",
      "MapSummary",
      "NextSummary",
      "OsGetEnv",
      "OsOpenCall",
      "PopSummary",
      "ReFunctionsSummary",
      "ReMatchMethodsSummary",
      "ReMatchSummary",
      "RePatternSummary",
      "ReplaceSummary",
      "ReversedSummary",
      "SetAdd",
      "SetSummary",
      "SortedSummary",
      "Sqlite3",
      "TupleSummary",
      "UrllibParseUrlsplitCall",
      "WsgiEnvirontParameter",
      "WsgiServerSubclass",
      "WsgirefSimpleServerApplication",
      "WsgirefSimpleServerApplicationReturn",
      "WsgirefSimpleServerApplicationWriteCall",
      "ZipSummary"
    ],
    "Fields": [
      "key",
      "hashClass",
      "hashName",
      "init",
      "digestArg",
      "msgIndex",
      "methodName",
      "validator"
    ],
    "Inherited fields": [
      "hashClass",
      "hashName",
      "node"
    ]
  },
  "import semmle.python.frameworks.Pydantic": {
    "Predicates": [
      "instance",
      "subclassRef"
    ],
    "Classes": [
      "InstanceSource"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Modules": [
      "Pydantic",
      "BaseModel"
    ]
  },
  "import codeql.concepts.ConceptsShared": {
    "Predicates": [
      "isWeak",
      "matchesString",
      "getAlgorithm",
      "getAnInput",
      "getBlockMode",
      "getInitialization",
      "disablesCertificateValidation",
      "getAUrlPart",
      "getFramework"
    ],
    "Inherited predicates": [
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim",
      "getLocation"
    ],
    "Charpred": [
      "BlockMode"
    ],
    "Classes": [
      "Request",
      "Range",
      "BlockMode",
      "CryptographicOperation"
    ],
    "Modules": [
      "Request",
      "Cryptography",
      "Http",
      "ConceptsMake",
      "CryptographicOperation",
      "Client"
    ],
    "Parameters": [
      "Location",
      "DataFlowLang"
    ],
    "Aliases": [
      "CryptographicAlgorithm",
      "EncryptionAlgorithm",
      "HashingAlgorithm",
      "PasswordHashingAlgorithm"
    ]
  },
  "import semmle.python.frameworks.Flask": {
    "Predicates": [
      "classRef",
      "instance",
      "request",
      "getARequestHandler",
      "getHeaderArg",
      "getNameArg",
      "getValueArg",
      "getARoutedParameter",
      "getFramework",
      "asViewResult",
      "subclassRef"
    ],
    "Classes": [
      "FlaskMethodViewClass",
      "FlaskResponseDeleteCookieCall",
      "FlaskResponseSetCookieCall",
      "FlaskRouteSetup",
      "FlaskViewClass",
      "InstanceSource"
    ],
    "Modules": [
      "Blueprint",
      "FlaskApp",
      "Response",
      "Views",
      "MethodView",
      "View"
    ],
    "Inherited fields": [
      "api_node",
      "method_lookup",
      "node"
    ],
    "Inherited predicates": [
      "asViewResult",
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getBody",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getLocation",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getScope",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes",
      "toString",
      "asCfgNode",
      "asExpr",
      "backtrack",
      "calls",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getMethodName",
      "getNode",
      "getObject",
      "getStarArg",
      "getSubscript",
      "hasHttpOnlyFlag",
      "hasLocationInfo",
      "hasSameSiteAttribute",
      "hasSecureFlag",
      "track",
      "getARequestHandler",
      "getUrlPattern",
      "getUrlPatternArg",
      "getMimetype",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg"
    ],
    "Charpred": [
      "FlaskMethodViewClass",
      "FlaskResponseDeleteCookieCall",
      "FlaskResponseSetCookieCall",
      "FlaskViewClass"
    ],
    "Fields": [
      "api_node"
    ]
  },
  "import codeql.util.Boolean": {
    "Classes": [
      "Boolean"
    ],
    "Predicates": [
      "toString"
    ],
    "Inherited predicates": [
      "booleanAnd",
      "booleanNot",
      "booleanOr",
      "booleanXor"
    ],
    "Charpred": [
      "Boolean"
    ]
  },
  "import semmle.python.types.Builtins": {
    "Predicates": [
      "floatValue",
      "getBaseClass",
      "getClass",
      "getItem",
      "getMember",
      "getName",
      "inheritsFromType",
      "intValue",
      "isClass",
      "isFunction",
      "isMethod",
      "isModule",
      "strValue",
      "toString",
      "builtin",
      "builtinModule",
      "special",
      "unknown",
      "unknownType"
    ],
    "Charpred": [
      "Builtin"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "Builtin"
    ],
    "Modules": [
      "Builtin"
    ]
  },
  "import semmle.python.objects.Classes": {
    "Predicates": [
      "attributesUnknown",
      "callResult",
      "calleeAndOffset",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getOrigin",
      "introducedAt",
      "lookup",
      "notTestableForEquality",
      "toString",
      "attribute",
      "binds",
      "booleanValue",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getIterNext",
      "getName",
      "hasAttribute",
      "intValue",
      "isClass",
      "isDescriptor",
      "isIterableSubclass",
      "isNotSubscriptedType",
      "isSpecial",
      "length",
      "strValue",
      "subscriptUnknown",
      "useOriginAsLegacyObject",
      "functionAndOffset",
      "getScope",
      "getGeneric",
      "getSpecializer"
    ],
    "Inherited predicates": [
      "attribute",
      "binds",
      "booleanValue",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "functionAndOffset",
      "getIterNext",
      "getName",
      "getSource",
      "hasAttribute",
      "intValue",
      "isBuiltin",
      "isClass",
      "isDescriptor",
      "isIterableSubclass",
      "isNotSubscriptedType",
      "isSpecial",
      "length",
      "strValue",
      "subscriptUnknown",
      "useOriginAsLegacyObject",
      "attributesUnknown",
      "callResult",
      "calleeAndOffset",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getOrigin",
      "introducedAt",
      "notTestableForEquality",
      "toString"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "BuiltinClassObjectInternal",
      "ClassObjectInternal",
      "DynamicallyCreatedClass",
      "PythonClassObjectInternal",
      "SubscriptedTypeInternal",
      "TypeInternal",
      "UnknownClassInternal"
    ]
  },
  "import semmle.python.objects.Callables": {
    "Predicates": [
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "functionAndOffset",
      "getACall",
      "getBuiltin",
      "getClass",
      "getName",
      "getOrigin",
      "getParameter",
      "getParameterByName",
      "getReturnType",
      "getScope",
      "introducedAt",
      "isDescriptor",
      "isNotSubscriptedType",
      "neverReturns",
      "notTestableForEquality",
      "toString",
      "useOriginAsLegacyObject",
      "attribute",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "getClassDeclaration",
      "getIterNext",
      "intValue",
      "isClass",
      "length",
      "strValue",
      "subscriptUnknown"
    ],
    "Inherited predicates": [
      "attribute",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "getACall",
      "getClassDeclaration",
      "getIterNext",
      "getSource",
      "hasAttribute",
      "intValue",
      "isBuiltin",
      "isClass",
      "length",
      "strValue",
      "subscriptUnknown",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "functionAndOffset",
      "getBuiltin",
      "getClass",
      "getName",
      "getOrigin",
      "introducedAt",
      "isDescriptor",
      "isNotSubscriptedType",
      "notTestableForEquality",
      "toString",
      "useOriginAsLegacyObject"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "BoundMethodObjectInternal",
      "BuiltinFunctionObjectInternal",
      "BuiltinMethodObjectInternal",
      "CallableObjectInternal",
      "PythonFunctionObjectInternal"
    ]
  },
  "import semmle.python.objects.ObjectInternal": {
    "Predicates": [
      "attribute",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getIterNext",
      "getName",
      "getOrigin",
      "intValue",
      "introducedAt",
      "isClass",
      "isDescriptor",
      "isNotSubscriptedType",
      "length",
      "notTestableForEquality",
      "strValue",
      "subscriptUnknown",
      "toString",
      "useOriginAsLegacyObject",
      "bounded_toString",
      "maybe",
      "receiver_type",
      "functionAndOffset",
      "getSource",
      "hasAttribute",
      "isBuiltin",
      "bool",
      "boundMethod",
      "builtin",
      "classMethod",
      "classType",
      "emptyTuple",
      "fromBuiltin",
      "fromInt",
      "moduleType",
      "noneType",
      "none_",
      "property",
      "staticMethod",
      "superType",
      "sysModules",
      "type",
      "undefined",
      "unknown",
      "unknownClass"
    ],
    "Inherited predicates": [
      "functionAndOffset",
      "getSource",
      "hasAttribute",
      "isBuiltin"
    ],
    "Imports": [
      "Callables",
      "Classes",
      "Constants",
      "Descriptors",
      "Instances",
      "Modules",
      "Sequences"
    ],
    "Classes": [
      "BuiltinOpaqueObjectInternal",
      "DecoratedFunction",
      "ObjectInternal",
      "UndefinedInternal",
      "UnknownInternal"
    ],
    "Modules": [
      "ObjectInternal"
    ]
  },
  "import semmle.python.objects.Sequences": {
    "Predicates": [
      "getBuiltin",
      "getItem",
      "getOrigin",
      "introducedAt",
      "isNotSubscriptedType",
      "length",
      "useOriginAsLegacyObject",
      "binds",
      "booleanValue",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getIterNext",
      "getName",
      "isDescriptor",
      "attribute",
      "attributesUnknown",
      "callResult",
      "calleeAndOffset",
      "functionAndOffset",
      "getClass",
      "getClassDeclaration",
      "intValue",
      "isClass",
      "notTestableForEquality",
      "strValue",
      "subscriptUnknown",
      "toString"
    ],
    "Inherited predicates": [
      "attribute",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "functionAndOffset",
      "getClass",
      "getClassDeclaration",
      "getIterNext",
      "getName",
      "getSource",
      "hasAttribute",
      "intValue",
      "isBuiltin",
      "isClass",
      "isDescriptor",
      "notTestableForEquality",
      "strValue",
      "subscriptUnknown",
      "toString",
      "getBuiltin",
      "getOrigin",
      "introducedAt",
      "isNotSubscriptedType",
      "length",
      "useOriginAsLegacyObject",
      "getItem"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "BuiltinTupleObjectInternal",
      "PythonTupleObjectInternal",
      "SequenceObjectInternal",
      "SysVersionInfoObjectInternal",
      "TupleObjectInternal",
      "VarargsTupleObjectInternal"
    ]
  },
  "import semmle.python.objects.Constants": {
    "Predicates": [
      "booleanValue",
      "getBuiltin",
      "getClass",
      "getIterNext",
      "getLiteral",
      "intValue",
      "introducedAt",
      "length",
      "strValue",
      "toString",
      "attribute",
      "attributesUnknown",
      "binds",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getClassDeclaration",
      "getName",
      "getOrigin",
      "isClass",
      "isDescriptor",
      "isNotSubscriptedType",
      "notTestableForEquality",
      "subscriptUnknown",
      "useOriginAsLegacyObject",
      "floatValue"
    ],
    "Inherited predicates": [
      "attribute",
      "attributesUnknown",
      "binds",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "functionAndOffset",
      "getClassDeclaration",
      "getName",
      "getOrigin",
      "getSource",
      "hasAttribute",
      "isBuiltin",
      "isClass",
      "isDescriptor",
      "isNotSubscriptedType",
      "notTestableForEquality",
      "subscriptUnknown",
      "useOriginAsLegacyObject",
      "booleanValue",
      "getBuiltin",
      "getClass",
      "getIterNext",
      "intValue",
      "introducedAt",
      "length",
      "strValue",
      "toString"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "BytesObjectInternal",
      "ConstantObjectInternal",
      "FloatObjectInternal",
      "IntObjectInternal",
      "UnicodeObjectInternal"
    ]
  },
  "import semmle.python.pointsto.CallGraph": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "FunctionInvocation"
    ]
  },
  "import utils.test.dataflow.callGraphConfig": {
    "Predicates": [
      "isSink",
      "isSource"
    ],
    "Imports": [
      "DataFlow"
    ],
    "Modules": [
      "CallGraphConfig"
    ],
    "Aliases": [
      "CallGraphFlow"
    ]
  },
  "import semmle.python.dataflow.old.TaintTracking": {
    "Predicates": [
      "asCfgNode",
      "asVariable",
      "getBasicBlock",
      "getLocation",
      "getScope",
      "toString",
      "flowFromMember",
      "flowToMember",
      "getMember",
      "getACalleeSuccessorNode",
      "getAReturnSuccessorNode",
      "getASuccessorNode",
      "getASuccessorVariable",
      "prunedSuccessor",
      "getTaintOfMethodResult",
      "getValue",
      "repr",
      "flowStep",
      "asAstNode",
      "sanitizingCall",
      "sanitizingDefinition",
      "sanitizingEdge",
      "sanitizingNode",
      "sanitizingSingleEdge",
      "getItem",
      "getTaintForFlowStep",
      "getTaintForIteration",
      "itemFlowStep",
      "booleanValue",
      "getTaintOfAttribute",
      "getType",
      "taints",
      "hasLocationInfo",
      "sinks",
      "flowsToSink",
      "getATaintNode",
      "isSourceOf",
      "getSink",
      "getSource"
    ],
    "Inherited predicates": [
      "asAstNode",
      "booleanValue",
      "charAt",
      "codePointAt",
      "codePointCount",
      "flowStep",
      "getTaintForFlowStep",
      "getTaintForIteration",
      "getTaintOfAttribute",
      "getTaintOfMethodResult",
      "getType",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "repr",
      "splitAt",
      "substring",
      "suffix",
      "taints",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim",
      "getASourceUse",
      "getAUse",
      "getDefinition",
      "getLocation",
      "getName",
      "getRepresentation",
      "getScope",
      "getSourceVariable",
      "isMetaVariable",
      "definedBy",
      "getAPrimaryQlClass",
      "getBasicBlock",
      "getDefiningNode",
      "getVariable",
      "reachesEndOfBlock",
      "flowsTo",
      "getASuccessor",
      "getAstNode",
      "getCfgNode",
      "getConfiguration",
      "getContext",
      "getNode",
      "getPath",
      "getTaintKind",
      "isSink",
      "isSource"
    ],
    "Charpred": [
      "CollectionKind",
      "DictKind",
      "Sanitizer",
      "SequenceKind",
      "TaintKind",
      "TaintedPathSink",
      "TaintedPathSource"
    ],
    "Classes": [
      "CfgNode",
      "EssaNode",
      "Node",
      "DataFlowNode",
      "DataFlowVariable",
      "CollectionKind",
      "DictKind",
      "Sanitizer",
      "SequenceKind",
      "TaintKind",
      "TaintSink",
      "TaintSource",
      "TaintedDefinition",
      "TaintedPathSink",
      "TaintedPathSource"
    ],
    "Aliases": [
      "Extension",
      "FlowLabel",
      "TaintedNode"
    ],
    "Fields": [
      "valueKind",
      "itemKind"
    ],
    "Imports": [
      "Configuration",
      "python"
    ],
    "Modules": [
      "DataFlow",
      "DataFlowExtension",
      "DictKind",
      "SequenceKind"
    ]
  },
  "import semmle.python.frameworks.Chameleon": {
    "Modules": [
      "Chameleon"
    ]
  },
  "import codeql.regex.nfa.NfaUtils": {
    "Predicates": [
      "choose",
      "getARelevantChar",
      "matches",
      "concretize",
      "toString",
      "after",
      "delta",
      "deltaClosed",
      "epsilonPred",
      "epsilonSucc",
      "getAnInputSymbolMatching",
      "getCanonicalCharClass",
      "getRoot",
      "getTermLocationString",
      "intersect",
      "isStartState",
      "matchesEpsilon",
      "mkMatch",
      "prefix",
      "prefixLength",
      "hasReDoSResult",
      "isRelevant",
      "getRepr",
      "hasLocationInfo"
    ],
    "Inherited predicates": [
      "toString",
      "getAChild",
      "getChild",
      "getLastChild",
      "getNumChild",
      "getOperand",
      "getParent",
      "getRawValue",
      "getRootTerm",
      "getSuccessor",
      "hasLocationInfo",
      "isRootTerm",
      "isUsedAsRegExp",
      "getRepr"
    ],
    "Parameters": [
      "Impl",
      "TreeImpl",
      "isCandidate"
    ],
    "Charpred": [
      "EmptyPositiveSubPattern",
      "InputSymbol",
      "RegExpRoot",
      "RelevantRegExpTerm",
      "RelevantState",
      "State"
    ],
    "Classes": [
      "CharacterClass",
      "EmptyPositiveSubPattern",
      "InputSymbol",
      "RegExpRoot",
      "RelevantRegExpTerm",
      "State",
      "RelevantState"
    ],
    "Datatypes": [
      "TState"
    ],
    "Modules": [
      "Concretizer",
      "PrefixConstruction",
      "ReDoSPruning",
      "Make"
    ],
    "Predicate signatures": [
      "isCandidateSig"
    ],
    "Module signatures": [
      "CharTree"
    ],
    "Aliases": [
      "Prefix",
      "RelevantState"
    ],
    "Inherited fields": [
      "repr"
    ],
    "Fields": [
      "repr"
    ],
    "Branch types": [
      "Accept",
      "AcceptAnySuffix",
      "Match"
    ],
    "Injectors": [
      "Accept",
      "AcceptAnySuffix",
      "Match"
    ]
  },
  "import semmle.python.frameworks.Chevron": {
    "Modules": [
      "Chevron"
    ]
  },
  "import semmle.python.Class": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Class",
      "ClassDef",
      "ClassExpr"
    ]
  },
  "import semmle.python.objects.TObject": {
    "Predicates": [
      "callReturnsInstance",
      "declaresAttribute",
      "getClass",
      "getName",
      "isAbstractBaseClass",
      "isSpecial",
      "toString",
      "call2",
      "call3",
      "class_method",
      "common_module_name",
      "isType",
      "literal_instantiation",
      "missing_imported_module",
      "static_method",
      "super_instantiation"
    ],
    "Charpred": [
      "ClassDecl"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "ClassDecl"
    ],
    "Datatypes": [
      "TObject"
    ],
    "Branch types": [
      "TAbsentModule",
      "TAbsentModuleAttribute",
      "TBoundMethod",
      "TBuiltinClassObject",
      "TBuiltinFunctionObject",
      "TBuiltinMethodObject",
      "TBuiltinModuleObject",
      "TBuiltinOpaqueObject",
      "TBuiltinTuple",
      "TBytes",
      "TClassMethod",
      "TDecoratedFunction",
      "TDynamicClass",
      "TFalse",
      "TFloat",
      "TInt",
      "TNone",
      "TPackageObject",
      "TProperty",
      "TPropertySetterOrDeleter",
      "TPythonClassObject",
      "TPythonFunctionObject",
      "TPythonModule",
      "TPythonTuple",
      "TSelfInstance",
      "TSpecificInstance",
      "TStaticMethod",
      "TSubscriptedType",
      "TSuperInstance",
      "TSysVersionInfo",
      "TTrue",
      "TType",
      "TUndefined",
      "TUnicode",
      "TUnknown",
      "TUnknownClass",
      "TUnknownInstance",
      "TVarargsTuple"
    ],
    "Injectors": [
      "TAbsentModule",
      "TAbsentModuleAttribute",
      "TBoundMethod",
      "TBuiltinClassObject",
      "TBuiltinFunctionObject",
      "TBuiltinMethodObject",
      "TBuiltinModuleObject",
      "TBuiltinOpaqueObject",
      "TBuiltinTuple",
      "TBytes",
      "TClassMethod",
      "TDecoratedFunction",
      "TDynamicClass",
      "TFalse",
      "TFloat",
      "TInt",
      "TNone",
      "TPackageObject",
      "TProperty",
      "TPropertySetterOrDeleter",
      "TPythonClassObject",
      "TPythonFunctionObject",
      "TPythonModule",
      "TPythonTuple",
      "TSelfInstance",
      "TSpecificInstance",
      "TStaticMethod",
      "TSubscriptedType",
      "TSuperInstance",
      "TSysVersionInfo",
      "TTrue",
      "TType",
      "TUndefined",
      "TUnicode",
      "TUnknown",
      "TUnknownClass",
      "TUnknownInstance",
      "TVarargsTuple"
    ]
  },
  "import modeling.ModelEditor": {
    "Inherited fields": [
      "name",
      "namespace",
      "type"
    ],
    "Predicates": [
      "getClass",
      "getFunctionName",
      "getKind",
      "getParameters",
      "getSupportedStatus",
      "getSupportedType",
      "getFileName",
      "getLocation",
      "getNamespace",
      "toString",
      "hasSummary",
      "isNeutral",
      "isSink",
      "isSource",
      "isSupported"
    ],
    "Inherited predicates": [
      "getFileName",
      "getLocation",
      "getNamespace",
      "toString",
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toUpperCase",
      "trim",
      "getClass",
      "getFunctionName"
    ],
    "Fields": [
      "name",
      "namespace",
      "type"
    ],
    "Charpred": [
      "Endpoint",
      "EndpointKind"
    ],
    "Classes": [
      "ClassEndpoint",
      "Endpoint",
      "EndpointKind",
      "FunctionEndpoint"
    ],
    "Aliases": [
      "FindNeutralModel",
      "FindSinkModel",
      "FindSourceModel",
      "FindSummaryModel"
    ]
  },
  "import semmle.python.frameworks.Fabric": {
    "Inherited predicates": [
      "asSink",
      "asSource",
      "getACall",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getLocation",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscript",
      "getSubscriptAt",
      "getUnknownMember",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "ClassInstantiation",
      "FabricTaskFirstParamConnectionInstance"
    ],
    "Modules": [
      "ConnectionClass",
      "FabricV2",
      "Connection",
      "Group",
      "Tasks",
      "Fabric",
      "GroupClass",
      "SerialGroup",
      "ThreadingGroup"
    ],
    "Predicates": [
      "classRef",
      "instanceRunMethods",
      "connection",
      "group",
      "tasks",
      "fabric",
      "subclassInstance",
      "subclassInstanceRunMethod",
      "toString",
      "task"
    ],
    "Classes": [
      "ClassInstantiation",
      "Instance",
      "FabricTaskFirstParamConnectionInstance",
      "ModeledSubclass"
    ]
  },
  "import semmle.python.pointsto.MRO": {
    "Predicates": [
      "contains",
      "containsSpecial",
      "contents",
      "declares",
      "deduplicate",
      "findDeclaringClass",
      "firstIndex",
      "getAnItem",
      "getHead",
      "getItem",
      "getTail",
      "isEmpty",
      "length",
      "lookup",
      "removeHead",
      "reverse",
      "startingAt",
      "toString",
      "newStyleMro",
      "oldStyleMro"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "ClassList"
    ],
    "Datatypes": [
      "TClassList"
    ],
    "Modules": [
      "Mro"
    ],
    "Branch types": [
      "Cons",
      "Empty"
    ],
    "Injectors": [
      "Cons",
      "Empty"
    ]
  },
  "import semmle.python.objects.Descriptors": {
    "Predicates": [
      "attribute",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "callResult",
      "calleeAndOffset",
      "contextSensitiveCallee",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getFunction",
      "getIterNext",
      "getName",
      "getOrigin",
      "intValue",
      "introducedAt",
      "isClass",
      "isDescriptor",
      "isNotSubscriptedType",
      "length",
      "notTestableForEquality",
      "strValue",
      "subscriptUnknown",
      "toString",
      "useOriginAsLegacyObject",
      "getDeleter",
      "getGetter",
      "getSetter"
    ],
    "Inherited predicates": [
      "functionAndOffset",
      "getSource",
      "hasAttribute",
      "isBuiltin"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "ClassMethodObjectInternal",
      "PropertyInternal",
      "StaticMethodObjectInternal"
    ]
  },
  "import semmle.python.types.ClassObject": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "theAbcMetaClassObject",
      "theAttributeErrorType",
      "theBaseExceptionType",
      "theBoolType",
      "theBoundMethodType",
      "theBuiltinFunctionType",
      "theBuiltinPropertyType",
      "theBytesType",
      "theClassMethodType",
      "theClassType",
      "theComplexType",
      "theDictType",
      "theExceptionType",
      "theFloatType",
      "theGeneratorType",
      "theGetSetDescriptorType",
      "theIOErrorType",
      "theInstanceType",
      "theIntType",
      "theKeyErrorType",
      "theListType",
      "theLongType",
      "theMethodDescriptorType",
      "theModuleType",
      "theNoneType",
      "theNotImplementedErrorType",
      "theObjectType",
      "thePropertyType",
      "thePyFunctionType",
      "theRangeType",
      "theSetType",
      "theStaticMethodType",
      "theStopIterationType",
      "theStrType",
      "theSuperType",
      "theTupleType",
      "theTypeErrorType",
      "theTypeType",
      "theUnicodeType"
    ],
    "Classes": [
      "ClassObject"
    ]
  },
  "import semmle.python.security.dataflow.CleartextLoggingCustomizations": {
    "Classes": [
      "LoggingAsSink",
      "PrintedDataAsSink",
      "Sanitizer",
      "SensitiveDataSourceAsSource",
      "Sink",
      "Source"
    ],
    "Modules": [
      "CleartextLogging"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "LoggingAsSink",
      "PrintedDataAsSink",
      "SensitiveDataSourceAsSource"
    ],
    "Predicates": [
      "getClassification"
    ]
  },
  "import semmle.python.security.dataflow.CleartextLoggingQuery": {
    "Imports": [
      "CleartextLogging"
    ],
    "Aliases": [
      "CleartextLoggingFlow"
    ]
  },
  "import semmle.python.security.dataflow.CleartextStorageCustomizations": {
    "Classes": [
      "CookieWriteAsSink",
      "FileWriteDataAsSink",
      "Sanitizer",
      "SensitiveDataSourceAsSource",
      "Sink",
      "Source"
    ],
    "Modules": [
      "CleartextStorage"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "CookieWriteAsSink",
      "FileWriteDataAsSink",
      "SensitiveDataSourceAsSource"
    ],
    "Predicates": [
      "getClassification"
    ]
  },
  "import semmle.python.security.dataflow.CleartextStorageQuery": {
    "Imports": [
      "CleartextStorage"
    ],
    "Aliases": [
      "CleartextStorageFlow"
    ]
  },
  "import semmle.python.frameworks.ClickhouseDriver": {
    "Inherited predicates": [
      "asSink",
      "asSource",
      "getACall",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getLocation",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscript",
      "getSubscriptAt",
      "getUnknownMember",
      "hasLocationInfo",
      "toString",
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getNode",
      "getScope",
      "getStarArg",
      "track"
    ],
    "Charpred": [
      "ClickHouseDriverPEP249",
      "ClientExecuteCall"
    ],
    "Modules": [
      "ClickhouseDriver",
      "Client"
    ],
    "Predicates": [
      "getExecuteMethodName",
      "instance",
      "subclassRef",
      "getSql"
    ],
    "Classes": [
      "ClickHouseDriverPEP249",
      "ClientExecuteCall"
    ],
    "Inherited fields": [
      "node"
    ]
  },
  "import semmle.python.frameworks.Httpx": {
    "Predicates": [
      "classRef"
    ],
    "Modules": [
      "HttpxModel",
      "Client"
    ]
  },
  "import codeql.dataflow.VariableCapture": {
    "Predicates": [
      "getLocation",
      "toString",
      "closureAliasMustBeInSameScope",
      "closureMustHaveBody",
      "consistencyOverview",
      "localDominator",
      "localSuccessor",
      "uniqueCallableLocation",
      "uniqueCfgNode",
      "uniqueDefiningScope",
      "uniqueDominator",
      "uniqueEnclosingCallable",
      "uniqueLocation",
      "uniqueReadVariable",
      "uniqueToString",
      "uniqueWriteCfgNode",
      "uniqueWriteTarget",
      "variableAccessAstNesting",
      "variableIsCaptured",
      "getExpr",
      "capturePostUpdateNode",
      "clearsContent",
      "heuristicAllowInstanceParameterReturnInSelf",
      "localFlowStep",
      "readStep",
      "storeStep",
      "getParameter",
      "getBasicBlock",
      "getEnclosingCallable",
      "isInstanceAccess",
      "isVariableAccess",
      "getCallable"
    ],
    "Inherited predicates": [
      "getLocation",
      "toString"
    ],
    "Charpred": [
      "ExprNode",
      "ExprPostUpdateNode"
    ],
    "Classes": [
      "ClosureNode",
      "ExprNode",
      "ExprPostUpdateNode",
      "MallocNode",
      "ParameterNode",
      "SourceVariable",
      "SynthesizedCaptureNode",
      "ThisParameterNode",
      "VariableWriteSourceNode"
    ],
    "Modules": [
      "ConsistencyChecks",
      "Flow"
    ],
    "Parameters": [
      "Location",
      "Input"
    ],
    "Module signatures": [
      "InputSig",
      "OutputSig"
    ]
  },
  "import semmle.python.security.dataflow.CodeInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "CodeExecutionAsSink"
    ],
    "Classes": [
      "CodeExecutionAsSink",
      "ConstCompareAsSanitizerGuard",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "CodeInjection"
    ]
  },
  "import semmle.python.security.dataflow.CodeInjectionQuery": {
    "Imports": [
      "CodeInjection",
      "DataFlow",
      "TaintTracking"
    ],
    "Aliases": [
      "CodeInjectionFlow"
    ]
  },
  "import semmle.python.security.dataflow.CommandInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "CommandExecutionAsSink"
    ],
    "Classes": [
      "CommandExecutionAsSink",
      "ConstCompareAsSanitizerGuard",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "CommandInjection"
    ]
  },
  "import semmle.python.security.dataflow.CommandInjectionQuery": {
    "Predicates": [
      "isBarrier",
      "isSink",
      "isSource",
      "observeDiffInformedIncrementalMode"
    ],
    "Imports": [
      "CommandInjection",
      "DataFlow",
      "TaintTracking"
    ],
    "Modules": [
      "CommandInjectionConfig"
    ],
    "Aliases": [
      "CommandInjectionFlow"
    ]
  },
  "import semmle.python.Comment": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Comment",
      "CommentBlock",
      "TypeHintComment"
    ]
  },
  "import semmle.python.Comparisons": {
    "Predicates": [
      "conditional",
      "forOp",
      "invert",
      "repr",
      "reverse",
      "impliesThat",
      "tests",
      "controls",
      "getTest",
      "eq",
      "ge",
      "gt",
      "le",
      "lt",
      "ne"
    ],
    "Inherited predicates": [
      "abs",
      "acos",
      "asin",
      "atan",
      "bitAnd",
      "bitNot",
      "bitOr",
      "bitShiftLeft",
      "bitShiftRight",
      "bitShiftRightSigned",
      "bitXor",
      "ceil",
      "copySign",
      "cos",
      "cosh",
      "exp",
      "floor",
      "gcd",
      "log",
      "log10",
      "log2",
      "maximum",
      "minimum",
      "nextAfter",
      "nextDown",
      "nextUp",
      "pow",
      "signum",
      "sin",
      "sinh",
      "sqrt",
      "tan",
      "tanh",
      "toBigInt",
      "toString",
      "toUnicode",
      "ulp",
      "dominates",
      "getAChild",
      "getAFalseSuccessor",
      "getANormalSuccessor",
      "getAPredecessor",
      "getASuccessor",
      "getATrueSuccessor",
      "getAnExceptionalSuccessor",
      "getBasicBlock",
      "getEnclosingModule",
      "getImmediateDominator",
      "getLocation",
      "getNode",
      "getScope",
      "hasCompletePointsToSet",
      "inferredValue",
      "isAttribute",
      "isAugLoad",
      "isAugStore",
      "isBranch",
      "isCall",
      "isClass",
      "isDelete",
      "isEntryNode",
      "isExceptionalExit",
      "isFunction",
      "isIfExp",
      "isImport",
      "isImportMember",
      "isLiteral",
      "isLoad",
      "isModuleEntry",
      "isNormalExit",
      "isParameter",
      "isStore",
      "isSubscript",
      "pointsTo",
      "refersTo",
      "strictlyDominates",
      "strictlyReaches",
      "unlikelyReachable",
      "alwaysReaches",
      "contains",
      "controls",
      "controlsEdge",
      "dominanceFrontier",
      "getAnUnconditionalSuccessor",
      "getImmediatelyControllingBlock",
      "getLastNode",
      "hasLocationInfo",
      "likelyReachable",
      "reaches",
      "reachesExit",
      "unlikelySuccessor"
    ],
    "Charpred": [
      "CompareOp",
      "Comparison",
      "ComparisonControlBlock"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "CompareOp",
      "Comparison",
      "ComparisonControlBlock"
    ]
  },
  "import semmle.python.Comprehensions": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Comp",
      "DictComp",
      "GeneratorExp",
      "ListComp",
      "SetComp"
    ]
  },
  "import semmle.python.security.dataflow.WeakSensitiveDataHashingCustomizations": {
    "Classes": [
      "PasswordSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source",
      "WeakPasswordHashingOperationInputSink",
      "SensitiveDataSourceAsSource",
      "WeakHashingOperationInputSink"
    ],
    "Predicates": [
      "getClassification",
      "getAlgorithmName",
      "isComputationallyExpensive"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "PasswordSourceAsSource",
      "Source",
      "WeakHashingOperationInputSink",
      "WeakPasswordHashingOperationInputSink"
    ],
    "Fields": [
      "algorithm"
    ],
    "Modules": [
      "ComputationallyExpensiveHashFunction",
      "NormalHashFunction"
    ]
  },
  "import semmle.python.security.dataflow.WeakSensitiveDataHashingQuery": {
    "Imports": [
      "ComputationallyExpensiveHashFunction",
      "NormalHashFunction"
    ],
    "Aliases": [
      "Flow",
      "WeakSensitiveDataHashingFlow"
    ],
    "Predicates": [
      "computationallyExpensiveHashFunctionFlowPath",
      "normalHashFunctionFlowPath"
    ],
    "Modules": [
      "ComputationallyExpensiveHashFunction",
      "NormalHashFunction"
    ]
  },
  "import semmle.python.frameworks.Django": {
    "Modules": [
      "ConfUrls",
      "Models",
      "Django",
      "PrivateDjango",
      "Forms",
      "MultiValueDict",
      "ResolverMatch",
      "UploadedFile",
      "User",
      "Views",
      "Request",
      "Response",
      "Conf",
      "DB",
      "DjangoHttp",
      "Shortcuts",
      "Urls",
      "RawSql",
      "Field",
      "Form",
      "Expressions",
      "FileField",
      "Model",
      "DjangoImpl",
      "DjangoRouteHandler",
      "HttpRequest",
      "FileResponse",
      "HttpResponse",
      "HttpResponseBadRequest",
      "HttpResponseForbidden",
      "HttpResponseGone",
      "HttpResponseNotAllowed",
      "HttpResponseNotFound",
      "HttpResponseNotModified",
      "HttpResponsePermanentRedirect",
      "HttpResponseRedirect",
      "HttpResponseServerError",
      "JsonResponse",
      "StreamingHttpResponse",
      "View"
    ],
    "Predicates": [
      "conf_urls",
      "url",
      "connection",
      "models",
      "request",
      "response",
      "conf",
      "db",
      "http",
      "shortcuts",
      "urls",
      "getHeaderArg",
      "getNameArg",
      "getValueArg",
      "nameAllowsNewline",
      "valueAllowsNewline",
      "getFirstPossibleRoutedParamIndex",
      "getRequestParam",
      "getRequestParamIndex",
      "getARequestHandler",
      "getFramework",
      "getViewArg",
      "asViewRef",
      "asViewResult",
      "getARef",
      "subclassRef",
      "baseClassRef",
      "classRef",
      "instance",
      "getBody",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "getModelClass",
      "isDbFetch",
      "toString",
      "expressions",
      "manager",
      "querySet",
      "querySetReturningMethod",
      "django",
      "write",
      "redirect",
      "path",
      "re_path"
    ],
    "Classes": [
      "DjangoDbConnection",
      "Range",
      "ModeledSubclass",
      "InstanceSource",
      "QuerySetMethodInstanceCollection",
      "QuerySetMethodInstanceDictValue",
      "DjangoFormClass",
      "DjangoFormFieldClass",
      "DjangoRouteHandler",
      "DjangoRouteSetup",
      "DjangoViewClass",
      "DjangoViewClassFromRouteSetup",
      "DjangoViewClassFromSuperClass",
      "DjangoViewClassHelper",
      "DjangoResponseCookieSubscriptWrite",
      "DjangoResponseDeleteCookieCall",
      "DjangoResponseHeaderSubscriptWrite",
      "DjangoResponseSetCookieCall",
      "DjangoResponseSubscriptWrite",
      "HttpResponseWriteCall",
      "UploadedFileFileLikeInstances"
    ],
    "Inherited predicates": [
      "asSink",
      "asSource",
      "getACall",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getLocation",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscript",
      "getSubscriptAt",
      "getUnknownMember",
      "hasLocationInfo",
      "toString",
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getASelfRef",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getBody",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getScope",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes",
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "hasHttpOnlyFlag",
      "hasSameSiteAttribute",
      "hasSecureFlag",
      "backtrack",
      "calls",
      "flowsTo",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getMethodName",
      "getNode",
      "getObject",
      "getStarArg",
      "track",
      "getAKeywordOnlyArg",
      "getAKwonlyarg",
      "getAReturnValueFlowNode",
      "getATypeParameter",
      "getAnArg",
      "getArgName",
      "getArgs",
      "getDefinition",
      "getFunctionObject",
      "getKeywordOnlyArg",
      "getKeywordOnlyParameterCount",
      "getKwarg",
      "getKwonlyarg",
      "getKwonlyargs",
      "getMaxPositionalArguments",
      "getMinPositionalArguments",
      "getPositionalParameterCount",
      "getTypeParameter",
      "getTypeParameters",
      "getVararg",
      "hasKwArg",
      "hasVarArg",
      "isAsync",
      "isGenerator",
      "isInitMethod",
      "isLambda",
      "isMethod",
      "isProcedure",
      "isSpecialMethod",
      "getARoutedParameter",
      "getUrlPattern",
      "getUrlPatternArg",
      "asViewRef",
      "asViewResult",
      "getARef",
      "getARequestHandler",
      "getMimetype",
      "getMimetypeDefault",
      "getMimetypeOrContentTypeArg",
      "getRedirectLocation"
    ],
    "Charpred": [
      "DjangoDbConnection",
      "DjangoFormClass",
      "DjangoFormFieldClass",
      "DjangoResponseCookieSubscriptWrite",
      "DjangoResponseDeleteCookieCall",
      "DjangoResponseHeaderSubscriptWrite",
      "DjangoResponseSetCookieCall",
      "DjangoResponseSubscriptWrite",
      "DjangoViewClassFromRouteSetup",
      "DjangoViewClassFromSuperClass",
      "HttpResponseWriteCall",
      "QuerySetMethodInstanceCollection",
      "QuerySetMethodInstanceDictValue",
      "UploadedFileFileLikeInstances"
    ],
    "Fields": [
      "index",
      "value",
      "instance",
      "methodName",
      "modelClass"
    ],
    "Inherited fields": [
      "method_lookup",
      "node"
    ]
  },
  "import codeql.dataflow.DataFlow": {
    "Imports": [
      "DataFlowImplCommonPublic",
      "PathGraphSigMod",
      "Configs<DataFlowMake::Location, DataFlowMake::Lang>",
      "PathGraph",
      "Impl<DataFlow::DataFlowMake::Global::C, DataFlowImplStage1::MakeImplStage1<DataFlow::DataFlowMake::Location, DataFlow::DataFlowMake::Lang>::ImplStage1<DataFlow::DataFlowMake::Global::C>::Stage1NoState>",
      "PartialFlow",
      "Impl<DataFlow::DataFlowMake::GlobalWithState::C, DataFlowImplStage1::MakeImplStage1<DataFlow::DataFlowMake::Location, DataFlow::DataFlowMake::Lang>::ImplStage1<DataFlow::DataFlowMake::GlobalWithState::C>::Stage1WithState>"
    ],
    "Module signatures": [
      "ConfigSig",
      "StateConfigSig",
      "InputSig",
      "GlobalFlowSig"
    ],
    "Parameters": [
      "Location",
      "Lang",
      "InputPathNode",
      "Graph",
      "Config",
      "PathNode1",
      "PathNode2",
      "Graph1",
      "Graph2",
      "PathNode3",
      "Graph3"
    ],
    "Modules": [
      "Configs",
      "DataFlowMake",
      "DeduplicatePathGraph",
      "Global",
      "GlobalWithState",
      "MergePathGraph",
      "MergePathGraph3",
      "PathGraph"
    ],
    "Predicate signatures": [
      "explorationLimitSig"
    ],
    "Type signatures": [
      "PathNodeSig"
    ],
    "Classes": [
      "PathNode"
    ],
    "Predicates": [
      "edges",
      "nodes",
      "subpaths",
      "getAnOriginalPathNode",
      "getLocation",
      "getNode",
      "toString",
      "asPathNode1",
      "asPathNode2",
      "asPathNode3",
      "hasLocationInfo"
    ]
  },
  "import semmle.python.dataflow.old.Configuration": {
    "Imports": [
      "TaintTracking",
      "python"
    ],
    "Modules": [
      "TaintTracking"
    ],
    "Predicates": [
      "hasFlowPath",
      "hasSimpleFlow",
      "isAdditionalFlowStep",
      "isBarrier",
      "isBarrierEdge",
      "isBarrierTest",
      "isExtension",
      "isSanitizer",
      "isSink",
      "isSource"
    ],
    "Inherited predicates": [
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "Configuration"
    ],
    "Classes": [
      "Configuration"
    ],
    "Aliases": [
      "Extension",
      "PathSink",
      "PathSource",
      "Sink",
      "Source"
    ]
  },
  "import semmle.python.dataflow.Configuration": {
    "Imports": [
      "Configuration"
    ]
  },
  "import semmle.python.frameworks.SqlAlchemy": {
    "Predicates": [
      "classRef",
      "instance",
      "getSql"
    ],
    "Classes": [
      "InstanceSource",
      "TextClauseConstruction"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getNode",
      "getStarArg"
    ],
    "Modules": [
      "SqlAlchemy",
      "Connection",
      "DBApiConnection",
      "Engine",
      "Session",
      "TextClause"
    ],
    "Inherited fields": [
      "node"
    ]
  },
  "import semmle.python.security.dataflow.LdapInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getNode",
      "getStarArg",
      "getSubscript",
      "track"
    ],
    "Inherited fields": [
      "node"
    ],
    "Charpred": [
      "LdapDnEscapingSanitizer",
      "LdapExecutionAsDnSink",
      "LdapExecutionAsFilterSink",
      "LdapFilterEscapingSanitizer"
    ],
    "Classes": [
      "ConstCompareAsDnSanitizerGuard",
      "ConstCompareAsFilterSanitizerGuard",
      "DnSanitizer",
      "DnSink",
      "FilterSanitizer",
      "FilterSink",
      "LdapDnEscapingSanitizer",
      "LdapExecutionAsDnSink",
      "LdapExecutionAsFilterSink",
      "LdapFilterEscapingSanitizer",
      "RemoteFlowSourceAsSource",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsFilterSanitizerGuard",
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "LdapInjection"
    ]
  },
  "import semmle.python.security.dataflow.LogInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getNode",
      "getStarArg",
      "getSubscript",
      "track"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "LoggingAsSink",
      "RemoteFlowSourceAsSource",
      "ReplaceLineBreaksSanitizer",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "LogInjection"
    ],
    "Charpred": [
      "LoggingAsSink",
      "ReplaceLineBreaksSanitizer"
    ],
    "Inherited fields": [
      "node"
    ]
  },
  "import semmle.python.security.dataflow.PathInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "FileSystemAccessAsSink"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "FileSystemAccessAsSink",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "PathInjection"
    ]
  },
  "import semmle.python.security.dataflow.PolynomialReDoSCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "getABacktrackingTerm",
      "getHighlight"
    ],
    "Imports": [
      "Make<RegexTreeView::Impl>"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "RegexExecutionAsSink",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "PolynomialReDoS"
    ],
    "Fields": [
      "t"
    ],
    "Predicates": [
      "getRegExp",
      "getABacktrackingTerm",
      "getHighlight"
    ],
    "Charpred": [
      "RegexExecutionAsSink"
    ]
  },
  "import semmle.python.security.dataflow.ReflectedXSSCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "HtmlEscapingAsSanitizer",
      "ServerHttpResponseBodyAsSink"
    ],
    "Modules": [
      "ReflectedXss"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "HtmlEscapingAsSanitizer",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "ServerHttpResponseBodyAsSink",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ]
  },
  "import semmle.python.security.dataflow.ServerSideRequestForgeryCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Fields": [
      "req"
    ],
    "Predicates": [
      "getRequest"
    ],
    "Charpred": [
      "HttpRequestUrlAsSink",
      "StringConstructionAsFullUrlControlSanitizer"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "FullUrlControlSanitizer",
      "HttpRequestUrlAsSink",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source",
      "StringConstructionAsFullUrlControlSanitizer"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "ServerSideRequestForgery"
    ]
  },
  "import semmle.python.security.dataflow.SqlInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "SqlConstructionAsSink",
      "SqlExecutionAsSink"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source",
      "SqlConstructionAsSink",
      "SqlExecutionAsSink"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "SqlInjection"
    ]
  },
  "import semmle.python.security.dataflow.TemplateInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "TemplateConstructionAsSink"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "Sanitizer",
      "Sink",
      "Source",
      "TemplateConstructionAsSink"
    ],
    "Modules": [
      "TemplateInjection"
    ]
  },
  "import semmle.python.security.dataflow.UnsafeDeserializationCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "InsecureDecodingAsSink"
    ],
    "Classes": [
      "ConstCompareAsSanitizerGuard",
      "InsecureDecodingAsSink",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Aliases": [
      "StringConstCompareAsSanitizerGuard"
    ],
    "Modules": [
      "UnsafeDeserialization"
    ]
  },
  "import semmle.python.Constants": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "major_version",
      "micro_version",
      "minor_version"
    ]
  },
  "import semmle.python.pointsto.Context": {
    "Imports": [
      "python"
    ],
    "Aliases": [
      "Context"
    ]
  },
  "import semmle.python.frameworks.Invoke": {
    "Modules": [
      "ContextClass",
      "Invoke",
      "InvokeModule",
      "Context"
    ],
    "Predicates": [
      "classRef",
      "instance",
      "instanceRunMethods",
      "invoke"
    ]
  },
  "import semmle.python.security.dataflow.CookieInjectionCustomizations": {
    "Classes": [
      "CookieWriteSink",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Modules": [
      "CookieInjection"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "CookieWriteSink"
    ]
  },
  "import semmle.python.security.dataflow.CookieInjectionQuery": {
    "Predicates": [
      "isBarrier",
      "isSink",
      "isSource",
      "observeDiffInformedIncrementalMode"
    ],
    "Imports": [
      "CookieInjection",
      "DataFlow",
      "TaintTracking"
    ],
    "Modules": [
      "CookieInjectionConfig"
    ],
    "Aliases": [
      "CookieInjectionFlow"
    ]
  },
  "import semmle.crypto.Crypto": {
    "Imports": [
      "CryptoAlgorithms"
    ]
  },
  "import semmle.python.concepts.CryptoAlgorithms": {
    "Imports": [
      "CryptoAlgorithms"
    ]
  },
  "import codeql.concepts.CryptoAlgorithms": {
    "Predicates": [
      "getName",
      "isWeak",
      "matchesName",
      "toString",
      "isStreamCipher"
    ],
    "Fields": [
      "isWeak",
      "name"
    ],
    "Inherited predicates": [
      "matchesName",
      "toString"
    ],
    "Charpred": [
      "EncryptionAlgorithm",
      "HashingAlgorithm",
      "PasswordHashingAlgorithm"
    ]
  },
  "import semmle.python.frameworks.Pycurl": {
    "Predicates": [
      "classRef"
    ],
    "Modules": [
      "Pycurl",
      "Curl"
    ]
  },
  "import Customizations": {
    "Imports": [
      "python"
    ]
  },
  "import semmle.python.dataflow.old.DataFlow": {
    "Imports": [
      "TaintTracking"
    ]
  },
  "import semmle.python.dataflow.DataFlow": {
    "Imports": [
      "DataFlow"
    ]
  },
  "import semmle.python.dataflow.new.DataFlow": {
    "Modules": [
      "DataFlow"
    ],
    "Imports": [
      "DataFlowMake<Files::Location, DataFlowImplSpecific::PythonDataFlow>",
      "Public"
    ]
  },
  "import semmle.python.dataflow.new.internal.DataFlowDispatch": {
    "Predicates": [
      "getArgument",
      "getCallable",
      "getEnclosingCallable",
      "getLocation",
      "getNode",
      "getScope",
      "hasLocationInfo",
      "toString",
      "asLibraryCallable",
      "getParameter",
      "getQualifiedName",
      "getACall",
      "getACallSimple",
      "getACallback",
      "isParameterOf"
    ],
    "Inherited predicates": [
      "getArgument",
      "getCallable",
      "getEnclosingCallable",
      "getNode",
      "getScope",
      "hasLocationInfo",
      "toString",
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toUpperCase",
      "trim",
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getLocation"
    ],
    "Charpred": [
      "LibraryCallable"
    ],
    "Branch types": [
      "TComprehensionCall",
      "TNormalCall",
      "TPotentialLibraryCall",
      "TSummaryCall",
      "TFunction",
      "TLibraryCallable",
      "TModule"
    ],
    "Injectors": [
      "TComprehensionCall",
      "TNormalCall",
      "TPotentialLibraryCall",
      "TSummaryCall",
      "TFunction",
      "TLibraryCallable",
      "TModule"
    ]
  },
  "import utils.test.dataflow.DataflowQueryTest": {
    "Predicates": [
      "getARelevantTag",
      "hasActualResult",
      "hasOptionalResult",
      "missingAnnotationOnSink"
    ],
    "Imports": [
      "DataFlow",
      "InlineExpectationsTest",
      "TaintTracking",
      "python",
      "MakeQueryTest<FromDataFlowConfig::Impl>",
      "MakeQueryTest<FromDataFlowStateConfig::Impl>",
      "MakeQueryTest<FromTaintTrackingConfig::Impl>",
      "MakeQueryTest<FromTaintTrackingStateConfig::Impl>",
      "MakeTest<DataflowQueryTest::MakeQueryTest::DataFlowQueryTest>"
    ],
    "Modules": [
      "FromDataFlowConfig",
      "FromDataFlowStateConfig",
      "FromTaintTrackingConfig",
      "FromTaintTrackingStateConfig",
      "MakeQueryTest",
      "Impl",
      "DataFlowQueryTest"
    ],
    "Module signatures": [
      "QueryTestSig"
    ],
    "Parameters": [
      "C",
      "Impl"
    ]
  },
  "import utils.test.dataflow.NormalDataflowTest": {
    "Predicates": [
      "flowTag",
      "relevantFlow",
      "missingAnnotationOnSink"
    ],
    "Imports": [
      "FlowTest",
      "MakeTest<FlowTest::MakeTestSig<NormalDataflowTest::DataFlowTest>>",
      "python",
      "testConfig"
    ],
    "Modules": [
      "DataFlowTest"
    ]
  },
  "import utils.test.dataflow.NormalTaintTrackingTest": {
    "Predicates": [
      "flowTag",
      "relevantFlow",
      "missingAnnotationOnSink"
    ],
    "Imports": [
      "FlowTest",
      "MakeTest<FlowTest::MakeTestSig<NormalTaintTrackingTest::DataFlowTest>>",
      "python",
      "testTaintConfig"
    ],
    "Modules": [
      "DataFlowTest"
    ]
  },
  "import semmle.python.dataflow.new.internal.DataFlowUtil": {
    "Imports": [
      "DataFlowPublic"
    ],
    "Predicates": [
      "localFlow",
      "localFlowStep"
    ]
  },
  "import semmle.python.frameworks.Peewee": {
    "Predicates": [
      "instance",
      "subclassRef",
      "getSql"
    ],
    "Modules": [
      "Peewee",
      "Database"
    ],
    "Classes": [
      "PeeweeDatabaseConnectionCall",
      "PeeweeDatabaseCursorCall",
      "PeeweeDatabaseExecuteSqlCall"
    ],
    "Inherited predicates": [
      "asSink",
      "asSource",
      "getACall",
      "getAMember",
      "getAPredecessor",
      "getASubclass",
      "getASubscript",
      "getASuccessor",
      "getAValueReachableFromSource",
      "getAValueReachingSink",
      "getAnInstance",
      "getAwaited",
      "getDepth",
      "getIndex",
      "getInducingNode",
      "getInstanceFromAnnotation",
      "getKeywordParameter",
      "getLocation",
      "getMember",
      "getNumParameter",
      "getParameter",
      "getPath",
      "getReturn",
      "getSelfParameter",
      "getSubscript",
      "getSubscriptAt",
      "getUnknownMember",
      "hasLocationInfo",
      "toString",
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getEnclosingCallable",
      "getFunction",
      "getKwargs",
      "getNode",
      "getScope",
      "getStarArg",
      "track"
    ],
    "Charpred": [
      "PeeweeDatabaseConnectionCall",
      "PeeweeDatabaseCursorCall",
      "PeeweeDatabaseExecuteSqlCall"
    ],
    "Inherited fields": [
      "node"
    ]
  },
  "import utils.test.dataflow.UnresolvedCalls": {
    "Predicates": [
      "unresolvedCall"
    ],
    "Imports": [
      "MakeTest<UnresolvedCalls::MakeUnresolvedCallExpectations::UnresolvedCallExpectations>",
      "InlineExpectationsTest",
      "python"
    ],
    "Parameters": [
      "Impl"
    ],
    "Modules": [
      "DefaultUnresolvedCallExpectations",
      "MakeUnresolvedCallExpectations"
    ],
    "Module signatures": [
      "UnresolvedCallExpectationsSig"
    ]
  },
  "import analysis.DefinitionTracking": {
    "Imports": [
      "IDEContextual",
      "PointsTo",
      "python"
    ],
    "Predicates": [
      "definitionOf",
      "getADefinition",
      "getUniqueDefinition",
      "ssa_filter_defn",
      "ssa_filter_jump_to_defn_attribute",
      "ssa_variable_jump_to_defn_attribute",
      "uni_edged_phi_defn",
      "hasLocationInfo",
      "toString"
    ],
    "Classes": [
      "Definition",
      "NiceLocationExpr"
    ],
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "defines",
      "getAChildNode",
      "getAFlowNode",
      "getASubExpression",
      "getEnclosingModule",
      "getLocation",
      "getParent",
      "getParentNode",
      "getScope",
      "hasSideEffects",
      "isArtificial",
      "isConstant",
      "isParenthesised",
      "isParenthesized",
      "pointsTo",
      "refersTo"
    ]
  },
  "import semmle.python.essa.Definitions": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "BuiltinVariable",
      "ClassLocalVariable",
      "EscapingAssignmentGlobalVariable",
      "EscapingGlobalVariable",
      "FunctionLocalVariable",
      "ModuleVariable",
      "NonEscapingGlobalVariable",
      "NonLocalVariable",
      "SpecialSsaSourceVariable",
      "SsaSourceVariable"
    ]
  },
  "import semmle.python.dependencies.Dependencies": {
    "Imports": [
      "DependencyKind",
      "python"
    ],
    "Classes": [
      "PythonAttribute",
      "PythonImport",
      "PythonInheritance",
      "PythonUse"
    ],
    "Predicates": [
      "isADependency"
    ],
    "Inherited predicates": [
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "PythonAttribute",
      "PythonImport",
      "PythonInheritance",
      "PythonUse"
    ]
  },
  "import semmle.python.dependencies.DependencyKind": {
    "Imports": [
      "Dependencies"
    ],
    "Classes": [
      "DependencyKind"
    ]
  },
  "import semmle.python.types.Descriptors": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "ClassMethodObject",
      "StaticMethodObject"
    ]
  },
  "import semmle.python.security.dataflow.NoSqlInjectionCustomizations": {
    "Predicates": [
      "toString",
      "getAnInput",
      "getOutput"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "getFormat",
      "mayExecuteInput",
      "getSourceType",
      "getThreatModel"
    ],
    "Charpred": [
      "JsonDecoding",
      "NoSqlDecoding",
      "NoSqlExecutionAsDictSink",
      "NoSqlExecutionAsStringSink"
    ],
    "Classes": [
      "Dict",
      "DictSink",
      "DictSource",
      "FlowState",
      "JsonDecoding",
      "NoSqlDecoding",
      "NoSqlExecutionAsDictSink",
      "NoSqlExecutionAsStringSink",
      "RemoteFlowSourceAsStringSource",
      "String",
      "StringSink",
      "StringSource",
      "StringToDictConversion"
    ],
    "Imports": [
      "Concepts",
      "DataFlow",
      "RemoteFlowSources",
      "python"
    ],
    "Modules": [
      "NoSqlInjection"
    ]
  },
  "import semmle.python.dependencies.TechInventory": {
    "Predicates": [
      "fromSource",
      "getName",
      "getVersion",
      "getAttribute",
      "getPackage",
      "dependency",
      "munge"
    ],
    "Inherited predicates": [
      "asBuiltin",
      "booleanValue",
      "getAnInferredType",
      "getAttribute",
      "getOrigin",
      "getPackage",
      "hasLocationInfo",
      "hasLongName",
      "isBuiltin",
      "isC",
      "maybe",
      "notClass",
      "overrides",
      "simpleClass",
      "toString"
    ],
    "Charpred": [
      "DistPackage"
    ],
    "Imports": [
      "Dependencies",
      "DependencyKind",
      "python"
    ],
    "Classes": [
      "DistPackage",
      "ExternalPackage"
    ]
  },
  "import default": {
    "Imports": [
      "python"
    ]
  },
  "import semmle.python.frameworks.Lxml": {
    "Predicates": [
      "classRef",
      "instance",
      "toString",
      "vulnerableTo",
      "etreeRef",
      "getName",
      "getXPath",
      "instanceVulnerableTo"
    ],
    "Classes": [
      "InstanceSource",
      "XPathCall",
      "XPathEvaluatorCall"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getNode",
      "getStarArg"
    ],
    "Modules": [
      "Lxml",
      "Element",
      "ElementTree",
      "XmlParser"
    ],
    "Inherited fields": [
      "node"
    ],
    "Charpred": [
      "XPathCall",
      "XPathEvaluatorCall"
    ]
  },
  "import semmle.python.frameworks.Jinja2": {
    "Predicates": [
      "classRef",
      "instance"
    ],
    "Modules": [
      "Jinja2",
      "EnvironmentClass"
    ]
  },
  "import semmle.python.essa.Essa": {
    "Imports": [
      "Definitions",
      "python"
    ],
    "Classes": [
      "ArgumentRefinement",
      "AssignmentDefinition",
      "AttributeAssignment",
      "CallsiteRefinement",
      "DeletionDefinition",
      "EssaAttributeDeletion",
      "EssaDefinition",
      "EssaEdgeRefinement",
      "EssaNodeDefinition",
      "EssaNodeRefinement",
      "EssaVariable",
      "ExceptionCapture",
      "ExceptionGroupCapture",
      "ImplicitSubModuleDefinition",
      "ImportStarRefinement",
      "MethodCallsiteRefinement",
      "MultiAssignmentDefinition",
      "ParameterDefinition",
      "PatternAliasDefinition",
      "PatternCaptureDefinition",
      "PhiFunction",
      "PyEdgeRefinement",
      "ScopeEntryDefinition",
      "SelfCallsiteRefinement",
      "SingleSuccessorGuard",
      "WithDefinition"
    ]
  },
  "import semmle.python.security.dataflow.ExceptionInfo": {
    "Imports": [
      "DataFlow",
      "python"
    ],
    "Classes": [
      "ExceptionInfo"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ]
  },
  "import semmle.python.security.dataflow.StackTraceExposureCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "ExceptionInfoAsSource",
      "ServerHttpResponseBodyAsSink"
    ],
    "Classes": [
      "ExceptionInfoAsSource",
      "Sanitizer",
      "ServerHttpResponseBodyAsSink",
      "Sink",
      "Source"
    ],
    "Modules": [
      "StackTraceExposure"
    ]
  },
  "import semmle.python.types.Exceptions": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "scope_raises",
      "scope_raises_objectapi",
      "scope_raises_unknown"
    ],
    "Classes": [
      "ExceptFlowNode",
      "ExceptGroupFlowNode",
      "RaisingNode",
      "ReraisingNode"
    ]
  },
  "import semmle.python.security.dataflow.TarSlipCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "ExcludeTarFilePy",
      "ExtractAllSink",
      "ExtractMembersSink",
      "ExtractSink",
      "TarFileInfoSanitizer",
      "TarfileOpen"
    ],
    "Predicates": [
      "tarFileInfoSanitizer"
    ],
    "Classes": [
      "ExcludeTarFilePy",
      "ExtractAllSink",
      "ExtractMembersSink",
      "ExtractSink",
      "Sanitizer",
      "Sink",
      "Source",
      "TarFileInfoSanitizer",
      "TarfileOpen"
    ],
    "Modules": [
      "TarSlip"
    ]
  },
  "import semmle.python.Exprs": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Annotation",
      "AssignExpr",
      "Attribute",
      "AugLoad",
      "AugStore",
      "Await",
      "BooleanLiteral",
      "Bytes",
      "Call",
      "Del",
      "Dict",
      "Ellipsis",
      "Expr",
      "ExprContext",
      "False",
      "Filter",
      "FloatLiteral",
      "FormattedValue",
      "Fstring",
      "Guard",
      "IfExp",
      "ImaginaryLiteral",
      "ImmutableLiteral",
      "IntegerLiteral",
      "List",
      "Load",
      "Name",
      "NameConstant",
      "NegativeIntegerLiteral",
      "Num",
      "Param",
      "PlaceHolder",
      "Repr",
      "Set",
      "Slice",
      "Starred",
      "Store",
      "StringLiteral",
      "Subscript",
      "True",
      "Tuple",
      "Unicode",
      "Yield",
      "YieldFrom"
    ],
    "Aliases": [
      "Str",
      "StrConst"
    ]
  },
  "import semmle.python.types.Extensions": {
    "Imports": [
      "ObjectInternal",
      "python"
    ],
    "Predicates": [
      "short_flag",
      "pointsTo",
      "toString"
    ],
    "Classes": [
      "PointsToExtension",
      "RangeIterationVariableFact",
      "ReModulePointToExtension"
    ],
    "Inherited predicates": [
      "toString"
    ],
    "Charpred": [
      "RangeIterationVariableFact",
      "ReModulePointToExtension"
    ],
    "Fields": [
      "name"
    ]
  },
  "import semmle.files.FileSystem": {
    "Imports": [
      "Files"
    ]
  },
  "import semmle.python.dataflow.Files": {
    "Imports": [
      "Files"
    ]
  },
  "import semmle.python.Files": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Container",
      "EncodingError",
      "File",
      "Folder",
      "Line",
      "Location",
      "SyntaxError"
    ]
  },
  "import semmle.python.dataflow.old.Files": {
    "Imports": [
      "TaintTracking",
      "python"
    ],
    "Classes": [
      "OpenFile",
      "OpenFileConfiguration"
    ],
    "Predicates": [
      "repr",
      "isSink",
      "isSource"
    ],
    "Inherited predicates": [
      "booleanValue",
      "charAt",
      "codePointAt",
      "codePointCount",
      "flowStep",
      "getTaintForFlowStep",
      "getTaintForIteration",
      "getTaintOfAttribute",
      "getTaintOfMethodResult",
      "getType",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "taints",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim",
      "hasFlowPath",
      "hasSimpleFlow",
      "isAdditionalFlowStep",
      "isBarrier",
      "isBarrierEdge",
      "isBarrierTest",
      "isExtension",
      "isSanitizer",
      "isSink",
      "isSource"
    ],
    "Charpred": [
      "OpenFile",
      "OpenFileConfiguration"
    ]
  },
  "import semmle.python.pointsto.Filters": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "equality_test",
      "hasattr",
      "isinstance"
    ]
  },
  "import semmle.python.pointsto.Final": {
    "Aliases": [
      "P"
    ]
  },
  "import modeling.Util": {
    "Predicates": [
      "hasModel",
      "pathToScope",
      "possibleMemberPathPrefix"
    ],
    "Parameters": [
      "model"
    ],
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getBody",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getLastStatement",
      "getLocation",
      "getName",
      "getReturnNode",
      "getScope",
      "getStmt",
      "inSource",
      "isPublic",
      "isTopLevel",
      "precedes",
      "toString",
      "emptyLine",
      "fromSource",
      "getAChildContainer",
      "getAFile",
      "getAFolder",
      "getAbsolutePath",
      "getBaseName",
      "getChildContainer",
      "getContents",
      "getExtension",
      "getFile",
      "getFolder",
      "getImportRoot",
      "getParent",
      "getParentContainer",
      "getRelativePath",
      "getShortName",
      "getSpecifiedEncoding",
      "getStem",
      "getURL",
      "hasLocationInfo",
      "inStdlib",
      "isImportRoot",
      "isPossibleEntryPoint",
      "isStdLibRoot"
    ],
    "Charpred": [
      "RelevantScope",
      "TestFile"
    ]
  },
  "import semmle.python.Flow": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "nested_sequence_assign"
    ],
    "Classes": [
      "AssignmentExprNode",
      "AttrNode",
      "BasicBlock",
      "BinaryExprNode",
      "BoolExprNode",
      "CallNode",
      "CompareNode",
      "ControlFlowNode",
      "DefinitionNode",
      "DeletionNode",
      "DictNode",
      "ForNode",
      "IfExprNode",
      "ImportExprNode",
      "ImportMemberNode",
      "ImportStarNode",
      "IterableNode",
      "ListNode",
      "NameConstantNode",
      "NameNode",
      "RaiseStmtNode",
      "SequenceNode",
      "SetNode",
      "StarredNode",
      "SubscriptNode",
      "TupleNode",
      "UnaryExprNode"
    ]
  },
  "import semmle.python.dataflow.new.FlowSummary": {
    "Classes": [
      "SummarizedCallable"
    ],
    "Aliases": [
      "RequiredSummaryComponentStack",
      "SummaryComponent",
      "SummaryComponentStack"
    ],
    "Predicates": [
      "propagatesFlow",
      "propagatesFlowExt"
    ],
    "Inherited predicates": [
      "applyGeneratedModel",
      "applyManualModel",
      "charAt",
      "codePointAt",
      "codePointCount",
      "getACall",
      "getACallSimple",
      "getACallback",
      "hasExactModel",
      "hasGeneratedModel",
      "hasManualModel",
      "hasProvenance",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "SummarizedCallable"
    ]
  },
  "import utils.test.dataflow.FlowTest": {
    "Imports": [
      "DataFlow",
      "InlineExpectationsTest",
      "python"
    ],
    "Modules": [
      "MakeTestSig"
    ],
    "Module signatures": [
      "FlowTestSig"
    ],
    "Predicates": [
      "getARelevantTag",
      "hasActualResult"
    ],
    "Parameters": [
      "Impl"
    ]
  },
  "import semmle.python.Function": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Arguments",
      "CallableExpr",
      "FastLocalsFunction",
      "Function",
      "FunctionDef",
      "FunctionExpr",
      "Lambda",
      "Parameter"
    ]
  },
  "import semmle.python.types.FunctionObject": {
    "Imports": [
      "Exceptions",
      "python"
    ],
    "Classes": [
      "BuiltinCallable",
      "BuiltinFunctionObject",
      "BuiltinMethodObject",
      "FunctionObject",
      "PyFunctionObject"
    ]
  },
  "import semmle.python.filters.GeneratedCode": {
    "Imports": [
      "Templates",
      "python"
    ],
    "Predicates": [
      "from_mako_import",
      "getTool"
    ],
    "Classes": [
      "GeneratedFile",
      "GenericGeneratedFile",
      "MakoGeneratedFile",
      "ProtobufGeneratedFile",
      "PyxlGeneratedFile",
      "SpecificGeneratedFile",
      "SpitfireGeneratedFile"
    ],
    "Inherited predicates": [
      "emptyLine",
      "fromSource",
      "getAChildContainer",
      "getAFile",
      "getAFolder",
      "getAbsolutePath",
      "getBaseName",
      "getChildContainer",
      "getContents",
      "getExtension",
      "getFile",
      "getFolder",
      "getImportRoot",
      "getParent",
      "getParentContainer",
      "getRelativePath",
      "getShortName",
      "getSpecifiedEncoding",
      "getStem",
      "getURL",
      "hasLocationInfo",
      "inStdlib",
      "isImportRoot",
      "isPossibleEntryPoint",
      "isStdLibRoot",
      "toString",
      "getTool"
    ],
    "Charpred": [
      "GenericGeneratedFile",
      "MakoGeneratedFile",
      "ProtobufGeneratedFile",
      "PyxlGeneratedFile",
      "SpitfireGeneratedFile"
    ]
  },
  "import semmle.python.frameworks.Genshi": {
    "Modules": [
      "Genshi"
    ]
  },
  "import codeql.dataflow.TaintTracking": {
    "Imports": [
      "Impl<TaintTracking::TaintFlowMake::Global::C, DataFlowImplStage1::MakeImplStage1<TaintTracking::TaintFlowMake::Location, TaintTracking::TaintFlowMake::DataFlowLang>::ImplStage1<TaintTracking::TaintFlowMake::Global::C>::Stage1NoState>",
      "PartialFlow",
      "Impl<TaintTracking::TaintFlowMake::GlobalWithState::C, DataFlowImplStage1::MakeImplStage1<TaintTracking::TaintFlowMake::Location, TaintTracking::TaintFlowMake::DataFlowLang>::ImplStage1<TaintTracking::TaintFlowMake::GlobalWithState::C>::Stage1WithState>",
      "Impl<TaintTracking::TaintFlowMake::SpeculativeGlobal::C, DataFlowImplStage1::MakeImplStage1<TaintTracking::TaintFlowMake::Location, TaintTracking::TaintFlowMake::DataFlowLang>::ImplStage1<TaintTracking::TaintFlowMake::SpeculativeGlobal::C>::Stage1WithState>",
      "Impl<TaintTracking::TaintFlowMake::SpeculativeGlobalWithState::C, DataFlowImplStage1::MakeImplStage1<TaintTracking::TaintFlowMake::Location, TaintTracking::TaintFlowMake::DataFlowLang>::ImplStage1<TaintTracking::TaintFlowMake::SpeculativeGlobalWithState::C>::Stage1WithState>"
    ],
    "Parameters": [
      "Config",
      "speculationLimit",
      "Location",
      "DataFlowLang",
      "TaintTrackingLang"
    ],
    "Modules": [
      "Global",
      "GlobalWithState",
      "SpeculativeGlobal",
      "SpeculativeGlobalWithState"
    ],
    "Predicate signatures": [
      "speculationLimitSig"
    ]
  },
  "import semmle.python.frameworks.Gradio": {
    "Imports": [
      "ApiGraphs",
      "RemoteFlowSources",
      "TaintTracking",
      "python"
    ],
    "Modules": [
      "Gradio"
    ]
  },
  "import semmle.python.GuardedControlFlow": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "ConditionBlock"
    ]
  },
  "import semmle.python.security.dataflow.HttpHeaderInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKwargs",
      "getNode",
      "getStarArg",
      "getSubscript",
      "track"
    ],
    "Charpred": [
      "HeaderWriteAsSink",
      "ReplaceLineBreaksSanitizer"
    ],
    "Classes": [
      "HeaderWriteAsSink",
      "RemoteFlowSourceAsSource",
      "ReplaceLineBreaksSanitizer",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Imports": [
      "python"
    ],
    "Modules": [
      "HttpHeaderInjection"
    ],
    "Inherited fields": [
      "node"
    ]
  },
  "import semmle.python.security.regexp.HostnameRegex": {
    "Imports": [
      "Make<RegexTreeView::Impl, HostnameRegex::Impl>"
    ]
  },
  "import codeql.regex.HostnameRegexp": {
    "Modules": [
      "Make",
      "Utils"
    ],
    "Module signatures": [
      "HostnameRegexpSig"
    ],
    "Imports": [
      "Utils"
    ],
    "Predicates": [
      "alwaysMatchesHostname",
      "alwaysMatchesHostnameAlt",
      "hasConsecutiveDots",
      "hasTopLevelDomainEnding",
      "incompleteHostnameRegExp",
      "isConstantInvalidInsideOrigin",
      "isDotConstant",
      "isDotLike",
      "isInsideChoiceOrSubPattern",
      "isLeftArmTerm",
      "isLikelyCaptureGroup",
      "isRightArmTerm",
      "matchesBeginningOfString",
      "getACommonTld"
    ],
    "Parameters": [
      "TreeImpl",
      "Specific"
    ]
  },
  "import semmle.python.security.dataflow.HttpHeaderInjectionQuery": {
    "Imports": [
      "python"
    ],
    "Aliases": [
      "HeaderInjectionFlow"
    ]
  },
  "import analysis.IDEContextual": {
    "Imports": [
      "FileSystem"
    ],
    "Predicates": [
      "getFileBySourceArchiveName"
    ]
  },
  "import semmle.python.regexp.RegexTreeView": {
    "Predicates": [
      "isDotAll",
      "isEscapeClass",
      "isExcluded",
      "isIgnoreCase",
      "isPossessive",
      "matchesAnyPrefix",
      "matchesAnySuffix",
      "getChild",
      "getPrimaryQLClass",
      "getGroup",
      "getName",
      "getNumber",
      "isRange",
      "getValue",
      "isCharacter",
      "getUnescaped",
      "isIdentityEscape",
      "isCapture",
      "isNamed",
      "getFlags",
      "getRegex",
      "getAChild",
      "getLastChild",
      "getNumChild",
      "toString",
      "getQualifier",
      "mayRepeatForever",
      "getLower",
      "getLowerBound",
      "getUpper",
      "getUpperBound",
      "nextElement",
      "previousElement",
      "getChar",
      "getOperand",
      "getEnd",
      "getFile",
      "getLiteral",
      "getLocation",
      "getParent",
      "getPart",
      "getPredecessor",
      "getRawValue",
      "getRootTerm",
      "getStart",
      "getSuccessor",
      "hasLocationInfo",
      "isRootTerm",
      "isUsedAsRegExp",
      "getParsedRegExp"
    ],
    "Classes": [
      "InfiniteRepetitionQuantifier",
      "RegExpAlt",
      "RegExpAnchor",
      "RegExpBackRef",
      "RegExpCaret",
      "RegExpCharacterClass",
      "RegExpCharacterClassEscape",
      "RegExpCharacterRange",
      "RegExpConstant",
      "RegExpDollar",
      "RegExpDot",
      "RegExpEscape",
      "RegExpGroup",
      "RegExpLiteral",
      "RegExpLookahead",
      "RegExpLookbehind",
      "RegExpNegativeLookahead",
      "RegExpNegativeLookbehind",
      "RegExpNonWordBoundary",
      "RegExpNormalChar",
      "RegExpOpt",
      "RegExpParent",
      "RegExpPlus",
      "RegExpPositiveLookahead",
      "RegExpPositiveLookbehind",
      "RegExpQuantifier",
      "RegExpRange",
      "RegExpSequence",
      "RegExpSpecialChar",
      "RegExpStar",
      "RegExpSubPattern",
      "RegExpTerm",
      "RegExpWordBoundary",
      "RegExpZeroWidthMatch"
    ],
    "Aliases": [
      "RegExpCharEscape",
      "Top",
      "RegexTreeView"
    ],
    "Inherited fields": [
      "end",
      "may_repeat_forever",
      "part_end",
      "re",
      "start",
      "char"
    ],
    "Inherited predicates": [
      "getAChild",
      "getChild",
      "getEnd",
      "getFile",
      "getLastChild",
      "getLiteral",
      "getLocation",
      "getNumChild",
      "getParent",
      "getPart",
      "getPredecessor",
      "getPrimaryQLClass",
      "getQualifier",
      "getRawValue",
      "getRegex",
      "getRootTerm",
      "getStart",
      "getSuccessor",
      "hasLocationInfo",
      "isRootTerm",
      "isUsedAsRegExp",
      "mayRepeatForever",
      "toString",
      "getChar",
      "isCharacter",
      "getUnescaped",
      "getValue",
      "isIdentityEscape",
      "getName",
      "getNumber",
      "getOperand",
      "isCapture",
      "isNamed"
    ],
    "Charpred": [
      "InfiniteRepetitionQuantifier",
      "RegExpAlt",
      "RegExpAnchor",
      "RegExpBackRef",
      "RegExpCaret",
      "RegExpCharacterClassEscape",
      "RegExpCharacterRange",
      "RegExpConstant",
      "RegExpDollar",
      "RegExpDot",
      "RegExpEscape",
      "RegExpGroup",
      "RegExpLiteral",
      "RegExpNegativeLookahead",
      "RegExpNegativeLookbehind",
      "RegExpNonWordBoundary",
      "RegExpNormalChar",
      "RegExpOpt",
      "RegExpPlus",
      "RegExpPositiveLookahead",
      "RegExpPositiveLookbehind",
      "RegExpQuantifier",
      "RegExpRange",
      "RegExpSequence",
      "RegExpSpecialChar",
      "RegExpStar",
      "RegExpSubPattern",
      "RegExpTerm",
      "RegExpWordBoundary",
      "RegExpZeroWidthMatch"
    ],
    "Fields": [
      "lower_end",
      "upper_start",
      "value",
      "re",
      "may_repeat_forever",
      "part_end",
      "lower",
      "upper",
      "char",
      "end",
      "start"
    ],
    "Imports": [
      "Impl",
      "python"
    ],
    "Modules": [
      "Impl"
    ]
  },
  "import semmle.python.dataflow.Implementation": {
    "Imports": [
      "Implementation"
    ]
  },
  "import semmle.python.Import": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Alias",
      "Import",
      "ImportExpr",
      "ImportMember",
      "ImportStar",
      "ImportingStmt"
    ]
  },
  "import semmle.python.types.ImportTime": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "ImportTimeScope"
    ]
  },
  "import utils.test.InlineExpectationsTest": {
    "Imports": [
      "Make<InlineExpectationsTestImpl::Impl>"
    ]
  },
  "import semmle.python.objects.Instances": {
    "Predicates": [
      "attribute",
      "contextSensitiveCallee",
      "getIterNext",
      "getName",
      "initializer",
      "isNotSubscriptedType",
      "attributesUnknown",
      "binds",
      "booleanValue",
      "callResult",
      "calleeAndOffset",
      "descriptorGetClass",
      "descriptorGetInstance",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getOrigin",
      "getParameter",
      "intValue",
      "introducedAt",
      "isClass",
      "isDescriptor",
      "length",
      "notTestableForEquality",
      "parameterAndContext",
      "strValue",
      "subscriptUnknown",
      "toString",
      "useOriginAsLegacyObject",
      "getSelf",
      "getStartClass"
    ],
    "Inherited predicates": [
      "attributesUnknown",
      "binds",
      "booleanValue",
      "callResult",
      "calleeAndOffset",
      "descriptorGetClass",
      "descriptorGetInstance",
      "functionAndOffset",
      "getBuiltin",
      "getClass",
      "getClassDeclaration",
      "getOrigin",
      "getSource",
      "hasAttribute",
      "intValue",
      "introducedAt",
      "isBuiltin",
      "isClass",
      "isDescriptor",
      "length",
      "notTestableForEquality",
      "strValue",
      "subscriptUnknown",
      "toString",
      "useOriginAsLegacyObject",
      "attribute",
      "contextSensitiveCallee",
      "getIterNext",
      "getName",
      "isNotSubscriptedType"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "InstanceObject",
      "SelfInstanceInternal",
      "SpecificInstanceInternal",
      "SuperInstance",
      "UnknownInstanceInternal"
    ]
  },
  "import semmle.python.frameworks.MarkupSafe": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track",
      "getNode"
    ],
    "Predicates": [
      "classRef",
      "instance"
    ],
    "Classes": [
      "InstanceSource",
      "PercentStringFormat",
      "StringConcat",
      "StringFormat"
    ],
    "Modules": [
      "MarkupSafeModel",
      "Markup"
    ],
    "Fields": [
      "node"
    ],
    "Charpred": [
      "PercentStringFormat",
      "StringConcat"
    ]
  },
  "import semmle.python.frameworks.Multidict": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Predicates": [
      "classRef",
      "instance"
    ],
    "Classes": [
      "InstanceSource"
    ],
    "Modules": [
      "Multidict",
      "MultiDictProxy"
    ]
  },
  "import semmle.python.frameworks.Requests": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Modules": [
      "Requests",
      "Response"
    ],
    "Predicates": [
      "classRef",
      "instance"
    ],
    "Classes": [
      "InstanceSource"
    ]
  },
  "import semmle.python.frameworks.Yarl": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "backtrack",
      "flowsTo",
      "getACall",
      "getALocalSource",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSubscript",
      "hasLocationInfo",
      "toString",
      "track"
    ],
    "Predicates": [
      "instance"
    ],
    "Classes": [
      "InstanceSource",
      "YarlUrlMultiDictProxyInstance"
    ],
    "Modules": [
      "Yarl",
      "Url"
    ],
    "Charpred": [
      "YarlUrlMultiDictProxyInstance"
    ]
  },
  "import semmle.python.Keywords": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "DictDisplayItem",
      "DictUnpacking",
      "DictUnpackingOrKeyword",
      "KeyValuePair",
      "Keyword"
    ]
  },
  "import codeql.mad.ModelValidation": {
    "Predicates": [
      "getInvalidModelKind"
    ],
    "Parameters": [
      "Config"
    ],
    "Modules": [
      "KindValidation"
    ],
    "Module signatures": [
      "KindValidationConfigSig"
    ]
  },
  "import semmle.python.security.dataflow.LdapInjectionQuery": {
    "Imports": [
      "Concepts",
      "DataFlow",
      "LdapInjection",
      "RemoteFlowSources",
      "TaintTracking",
      "python"
    ],
    "Aliases": [
      "LdapInjectionDnFlow",
      "LdapInjectionFilterFlow",
      "LdapInjectionFlow"
    ]
  },
  "import semmle.python.dataflow.old.Legacy": {
    "Imports": [
      "Implementation",
      "TaintTracking"
    ]
  },
  "import semmle.python.dataflow.Legacy": {
    "Imports": [
      "Legacy"
    ]
  },
  "import utils.test.dataflow.LocalFlowStepTest": {
    "Imports": [
      "DataFlow",
      "FlowTest",
      "MakeTest<FlowTest::MakeTestSig<LocalFlowStepTest::LocalFlowStepTest>>",
      "python"
    ],
    "Modules": [
      "LocalFlowStepTest"
    ],
    "Predicates": [
      "flowTag",
      "relevantFlow"
    ]
  },
  "import semmle.python.dataflow.new.internal.LocalSources": {
    "Predicates": [
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getSubscript",
      "track"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getSubscript",
      "track"
    ],
    "Charpred": [
      "LocalSourceNode",
      "LocalSourceNodeNotModuleVariableNode"
    ],
    "Imports": [
      "DataFlowPublic"
    ],
    "Classes": [
      "LocalSourceNode",
      "LocalSourceNodeNotModuleVariableNode"
    ],
    "Aliases": [
      "TypeTrackingNode"
    ]
  },
  "import codeql.util.Location": {
    "Type signatures": [
      "LocationSig"
    ]
  },
  "import semmle.python.security.dataflow.LogInjectionQuery": {
    "Imports": [
      "DataFlow",
      "LogInjection",
      "TaintTracking",
      "python"
    ],
    "Aliases": [
      "LogInjectionFlow"
    ]
  },
  "import codeql.regex.nfa.SuperlinearBackTracking": {
    "Imports": [
      "Make<SuperlinearBackTracking::Make::TreeImpl>"
    ],
    "Predicates": [
      "delta",
      "distBackFromEnd",
      "getAThreewayIntersect",
      "getAnEndTuple",
      "getReasonString",
      "isEndTuple",
      "isPumpable",
      "isReDoSCandidate",
      "isStartLoops",
      "minAndMaxIntersect",
      "polynomialReDoS",
      "step",
      "tupleDeltaBackwards",
      "getPrefixMessage",
      "getPreviousLoop",
      "getPumpString",
      "getReason",
      "isAtEndLine",
      "isTuple",
      "toString"
    ],
    "Classes": [
      "PolynomialBackTrackingTerm",
      "StateTuple",
      "Trace"
    ],
    "Parameters": [
      "TreeImpl"
    ],
    "Fields": [
      "prefixMsg",
      "prev",
      "pump",
      "reason",
      "q1",
      "q2",
      "q3"
    ],
    "Inherited predicates": [
      "getAChild",
      "getChild",
      "getLastChild",
      "getNumChild",
      "getParent",
      "getRawValue",
      "getRootTerm",
      "getSuccessor",
      "hasLocationInfo",
      "isRootTerm",
      "isUsedAsRegExp",
      "toString"
    ],
    "Charpred": [
      "PolynomialBackTrackingTerm",
      "StateTuple"
    ],
    "Modules": [
      "Make"
    ]
  },
  "import codeql.xml.Xml": {
    "Classes": [
      "XmlAttribute",
      "XmlCharacters",
      "XmlComment",
      "XmlDtd",
      "XmlElement",
      "XmlFile",
      "XmlLocatable",
      "XmlNamespace",
      "XmlParent"
    ],
    "Parameters": [
      "File",
      "Location",
      "Input"
    ]
  },
  "import codeql.yaml.Yaml": {
    "Classes": [
      "YamlAliasNode",
      "YamlBool",
      "YamlCollection",
      "YamlDocument",
      "YamlFloat",
      "YamlInclude",
      "YamlInteger",
      "YamlMapping",
      "YamlMappingLikeNode",
      "YamlMergeKey",
      "YamlNode",
      "YamlNull",
      "YamlParseError",
      "YamlScalar",
      "YamlSequence",
      "YamlString",
      "YamlTimestamp",
      "YamlValue"
    ],
    "Parameters": [
      "Input"
    ],
    "Modules": [
      "Make"
    ],
    "Module signatures": [
      "InputSig"
    ],
    "Predicates": [
      "eval",
      "getAPrimaryQlClass",
      "getTarget",
      "getBoolValue",
      "getFloatValue",
      "getIntValue",
      "getKey",
      "getKeyNode",
      "getValue",
      "getValueNode",
      "lookup",
      "maps",
      "getElementCount",
      "getNode",
      "getAChild",
      "getAChildNode",
      "getAnchor",
      "getChild",
      "getChildNode",
      "getDocument",
      "getFile",
      "getLocation",
      "getNumChild",
      "getParentNode",
      "getTag",
      "hasStandardTypeTag",
      "toString",
      "getMessage",
      "getStyle",
      "getElement",
      "getElementNode",
      "getDateValue"
    ],
    "Inherited predicates": [
      "getAChild",
      "getAChildNode",
      "getAnchor",
      "getChild",
      "getChildNode",
      "getDocument",
      "getFile",
      "getLocation",
      "getNumChild",
      "getParentNode",
      "getTag",
      "hasStandardTypeTag",
      "toString",
      "eval",
      "getAPrimaryQlClass",
      "getStyle",
      "getValue"
    ],
    "Charpred": [
      "YamlBool",
      "YamlFloat",
      "YamlInclude",
      "YamlInteger",
      "YamlMappingLikeNode",
      "YamlMergeKey",
      "YamlNull",
      "YamlString",
      "YamlTimestamp"
    ]
  },
  "import utils.test.dataflow.RoutingTest": {
    "Predicates": [
      "getARelevantTag",
      "hasActualResult"
    ],
    "Parameters": [
      "Impl"
    ],
    "Imports": [
      "DataFlow",
      "InlineExpectationsTest",
      "python"
    ],
    "Modules": [
      "MakeTestSig"
    ],
    "Module signatures": [
      "RoutingTestSig"
    ]
  },
  "import semmle.python.frameworks.Mako": {
    "Modules": [
      "Mako"
    ]
  },
  "import utils.test.dataflow.MaximalFlowTest": {
    "Imports": [
      "DataFlow",
      "FlowTest",
      "MakeTest<FlowTest::MakeTestSig<MaximalFlowTest::MaximalFlowTest>>",
      "python"
    ],
    "Modules": [
      "MaximalFlowTest",
      "MaximalFlowsConfig"
    ],
    "Aliases": [
      "MaximalFlows"
    ],
    "Predicates": [
      "flowTag",
      "relevantFlow",
      "isSink",
      "isSource"
    ]
  },
  "import semmle.python.Metrics": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "non_coupling_method",
      "unique_root_method"
    ],
    "Classes": [
      "ClassMetrics",
      "FunctionMetrics",
      "ModuleMetrics"
    ]
  },
  "import semmle.python.frameworks.data.internal.ApiGraphModels": {
    "Classes": [
      "SinkModelCsv",
      "SourceModelCsv",
      "SummaryModelCsv",
      "TypeModel",
      "TypeModelCsv",
      "TypeVariableModelCsv"
    ],
    "Imports": [
      "Cached",
      "ModelOutputSpecific"
    ],
    "Predicates": [
      "getASinkNode",
      "getASourceNode",
      "getAWarning",
      "row",
      "getASink",
      "getASource",
      "getAnApiNode",
      "isTypeUsed"
    ],
    "Inherited predicates": [
      "toString"
    ]
  },
  "import semmle.python.frameworks.data.ModelsAsData": {
    "Aliases": [
      "ModelInput",
      "ModelOutput"
    ]
  },
  "import semmle.python.Module": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "isPreferredModuleForName",
      "legalShortName",
      "moduleNameFromFile"
    ],
    "Classes": [
      "Module"
    ]
  },
  "import semmle.python.types.ModuleKind": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "getKindForModule"
    ]
  },
  "import semmle.python.types.ModuleObject": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "object_for_string"
    ],
    "Classes": [
      "BuiltinModuleObject",
      "ModuleObject",
      "PackageObject",
      "PythonModuleObject"
    ],
    "Modules": [
      "ModuleObject"
    ]
  },
  "import semmle.python.security.dataflow.NoSqlInjectionQuery": {
    "Predicates": [
      "isAdditionalFlowStep",
      "isBarrier",
      "isSink",
      "isSource",
      "observeDiffInformedIncrementalMode"
    ],
    "Aliases": [
      "FlowState",
      "NoSqlInjectionFlow"
    ],
    "Imports": [
      "Concepts",
      "DataFlow",
      "TaintTracking",
      "python"
    ],
    "Modules": [
      "NoSqlInjectionConfig"
    ]
  },
  "import codeql.util.Option": {
    "Inherited predicates": [
      "asSome",
      "isNone",
      "toString"
    ],
    "Modules": [
      "Option"
    ],
    "Predicates": [
      "some",
      "asSome",
      "isNone",
      "toString"
    ],
    "Classes": [
      "Option",
      "Some"
    ],
    "Parameters": [
      "T"
    ]
  },
  "import semmle.python.security.dataflow.PathInjectionQuery": {
    "Inherited predicates": [
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "NormalizedUnchecked",
      "NotNormalized"
    ],
    "Predicates": [
      "isAdditionalFlowStep",
      "isBarrier",
      "isSink",
      "isSource",
      "observeDiffInformedIncrementalMode"
    ],
    "Imports": [
      "DataFlow",
      "PathInjection",
      "TaintTracking"
    ],
    "Classes": [
      "FlowState",
      "NormalizedUnchecked",
      "NotNormalized"
    ],
    "Modules": [
      "PathInjectionConfig"
    ],
    "Aliases": [
      "PathInjectionFlow"
    ]
  },
  "import semmle.python.filters.Tests": {
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getBody",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getLastStatement",
      "getLocation",
      "getName",
      "getReturnNode",
      "getScope",
      "getStmt",
      "inSource",
      "isPublic",
      "isTopLevel",
      "precedes",
      "toString",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getBase",
      "getClassObject",
      "getInitMethod",
      "getMetaClass",
      "getMetrics",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "hasSideEffects",
      "isArtificial",
      "isProbableMixin"
    ],
    "Charpred": [
      "NoseTestFunction",
      "PyTestFunction",
      "UnitTestClass",
      "UnitTestFunction",
      "UnknownTestFunction"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "NoseTestFunction",
      "PyTestFunction",
      "Test",
      "TestScope",
      "UnitTestClass",
      "UnitTestFunction",
      "UnknownTestFunction"
    ]
  },
  "import codeql.util.Numbers": {
    "Predicates": [
      "parseBinaryInt",
      "parseHexInt",
      "parseOctalInt",
      "to4digitHex",
      "toHex"
    ]
  },
  "import semmle.python.types.Object": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "theBuiltinModuleObject",
      "theFalseObject",
      "theIndexErrorType",
      "theLookupErrorType",
      "theNameErrorType",
      "theNoneObject",
      "theStandardErrorType",
      "theSysModuleObject",
      "theTrueObject",
      "theUnknownType"
    ],
    "Classes": [
      "ListObject",
      "NonEmptyTupleObject",
      "NumericObject",
      "Object",
      "SequenceObject",
      "StringObject",
      "SuperBoundMethod",
      "TupleObject"
    ],
    "Modules": [
      "Object",
      "TupleObject"
    ]
  },
  "import semmle.python.objects.ObjectAPI": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "BoundMethodValue",
      "BuiltinFunctionValue",
      "BuiltinMethodValue",
      "CallableValue",
      "ClassValue",
      "FunctionValue",
      "MRO",
      "ModuleValue",
      "NumericValue",
      "PropertyValue",
      "PythonFunctionValue",
      "SequenceValue",
      "StringValue",
      "TupleValue",
      "Value"
    ],
    "Modules": [
      "ClassValue",
      "Module",
      "Value"
    ],
    "Aliases": [
      "ClassScope",
      "FunctionScope",
      "ModuleScope",
      "ObjectSource"
    ]
  },
  "import semmle.python.Operations": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Add",
      "And",
      "BinaryExpr",
      "BitAnd",
      "BitOr",
      "BitXor",
      "BoolExpr",
      "Boolop",
      "Cmpop",
      "CmpopList",
      "Compare",
      "Div",
      "Eq",
      "FloorDiv",
      "Gt",
      "GtE",
      "In",
      "Invert",
      "Is",
      "IsNot",
      "LShift",
      "Lt",
      "LtE",
      "MatMult",
      "Mod",
      "Mult",
      "Not",
      "NotEq",
      "NotIn",
      "Operator",
      "Or",
      "Pow",
      "RShift",
      "Sub",
      "UAdd",
      "USub",
      "UnaryExpr",
      "Unaryop"
    ]
  },
  "import semmle.python.security.dataflow.PamAuthorizationCustomizations": {
    "Imports": [
      "ApiGraphs",
      "Concepts",
      "RemoteFlowSources",
      "TaintTracking",
      "python"
    ],
    "Modules": [
      "PamAuthorizationCustomizations"
    ],
    "Predicates": [
      "libPam"
    ],
    "Classes": [
      "RemoteFlowSourceAsSource",
      "Sink",
      "Source",
      "VulnPamAuthCall"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString",
      "backtrack",
      "flowsTo",
      "getACall",
      "getAMethodCall",
      "getAParameter",
      "getAnAnnotatedInstance",
      "getAnAttributeRead",
      "getAnAttributeReference",
      "getAnAttributeWrite",
      "getAnAwaited",
      "getArg",
      "getArgByName",
      "getFunction",
      "getKeywordParameter",
      "getKwargs",
      "getNode",
      "getNumArgument",
      "getParameter",
      "getReturn",
      "getSelfParameter",
      "getStarArg",
      "getSubscript",
      "track"
    ],
    "Inherited fields": [
      "callee",
      "node"
    ],
    "Charpred": [
      "VulnPamAuthCall"
    ]
  },
  "import semmle.python.security.dataflow.PamAuthorizationQuery": {
    "Imports": [
      "ApiGraphs",
      "PamAuthorizationCustomizations",
      "TaintTracking",
      "python"
    ],
    "Aliases": [
      "PamAuthorizationFlow"
    ]
  },
  "import semmle.python.regexp.internal.ParseRegExp": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "RegExp"
    ],
    "Fields": [
      "use"
    ],
    "Predicates": [
      "alternation",
      "alternationOption",
      "backreference",
      "charRange",
      "charSet",
      "char_set_child",
      "char_set_delimiter",
      "char_set_start",
      "character",
      "emptyGroup",
      "escapedCharacter",
      "escapingChar",
      "failedToParse",
      "firstItem",
      "getAMode",
      "getAUse",
      "getBackrefName",
      "getBackrefNumber",
      "getChar",
      "getGroupName",
      "getGroupNumber",
      "getModeFromPrefix",
      "getPrefix",
      "getText",
      "group",
      "groupContents",
      "inCharSet",
      "item",
      "lastItem",
      "multiples",
      "negativeLookaheadAssertionGroup",
      "negativeLookbehindAssertionGroup",
      "nonEscapedCharAt",
      "normalCharacter",
      "normalCharacterSequence",
      "positiveLookaheadAssertionGroup",
      "positiveLookbehindAssertionGroup",
      "qualifiedItem",
      "qualifiedPart",
      "sequence",
      "specialCharacter",
      "zeroWidthMatch"
    ],
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "defines",
      "getAChildNode",
      "getAFlowNode",
      "getASubExpression",
      "getEnclosingModule",
      "getLocation",
      "getParent",
      "getParentNode",
      "getScope",
      "hasSideEffects",
      "isArtificial",
      "isConstant",
      "isParenthesised",
      "isParenthesized",
      "pointsTo",
      "refersTo",
      "toString"
    ],
    "Charpred": [
      "RegExp"
    ]
  },
  "import semmle.python.Patterns": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "MatchAsPattern",
      "MatchCapturePattern",
      "MatchClassPattern",
      "MatchDoubleStarPattern",
      "MatchKeyValuePattern",
      "MatchKeywordPattern",
      "MatchLiteralPattern",
      "MatchMappingPattern",
      "MatchOrPattern",
      "MatchSequencePattern",
      "MatchStarPattern",
      "MatchValuePattern",
      "MatchWildcardPattern",
      "Pattern"
    ]
  },
  "import semmle.python.pointsto.PointsToContext": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "executes_in_runtime_context",
      "super_method_call",
      "appliesTo",
      "appliesToScope",
      "fromCall",
      "fromRuntime",
      "getAVersion",
      "getCall",
      "getCost",
      "getDepth",
      "getOuter",
      "getRootCall",
      "isCall",
      "isImport",
      "isMain",
      "isRuntime",
      "toString",
      "untrackableCall"
    ],
    "Classes": [
      "PointsToContext"
    ]
  },
  "import semmle.python.security.dataflow.PolynomialReDoSQuery": {
    "Imports": [
      "DataFlow",
      "PolynomialReDoS",
      "TaintTracking"
    ],
    "Aliases": [
      "PolynomialReDoSFlow"
    ]
  },
  "import semmle.python.frameworks.Urllib3": {
    "Predicates": [
      "classRef"
    ],
    "Modules": [
      "Urllib3",
      "PoolManager"
    ]
  },
  "import semmle.python.SpecialMethods": {
    "Predicates": [
      "getArg",
      "getSelf",
      "getSpecialMethodName",
      "getResolvedSpecialMethod"
    ],
    "Inherited predicates": [
      "dominates",
      "getAChild",
      "getAFalseSuccessor",
      "getANormalSuccessor",
      "getAPredecessor",
      "getASuccessor",
      "getATrueSuccessor",
      "getAnExceptionalSuccessor",
      "getBasicBlock",
      "getEnclosingModule",
      "getImmediateDominator",
      "getLocation",
      "getNode",
      "getScope",
      "hasCompletePointsToSet",
      "inferredValue",
      "isAttribute",
      "isAugLoad",
      "isAugStore",
      "isBranch",
      "isCall",
      "isClass",
      "isDelete",
      "isEntryNode",
      "isExceptionalExit",
      "isFunction",
      "isIfExp",
      "isImport",
      "isImportMember",
      "isLiteral",
      "isLoad",
      "isModuleEntry",
      "isNormalExit",
      "isParameter",
      "isStore",
      "isSubscript",
      "pointsTo",
      "refersTo",
      "strictlyDominates",
      "strictlyReaches",
      "toString",
      "unlikelyReachable",
      "getAnOperand",
      "getLeft",
      "getOp",
      "getRight",
      "getSelf",
      "operands",
      "getArg",
      "getIndex",
      "getObject",
      "getSpecialMethodName"
    ],
    "Fields": [
      "operator",
      "resolvedSpecialMethod"
    ],
    "Charpred": [
      "SpecialBinOp",
      "SpecialDelItem",
      "SpecialGetItem",
      "SpecialMethodCallNode",
      "SpecialSetItem"
    ],
    "Classes": [
      "Potential",
      "SpecialBinOp",
      "SpecialDelItem",
      "SpecialGetItem",
      "SpecialSetItem",
      "SpecialSubscript",
      "PotentialSpecialMethodCallNode",
      "SpecialMethodCallNode"
    ],
    "Modules": [
      "SpecialMethod"
    ]
  },
  "import semmle.python.types.Properties": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "BuiltinPropertyObject",
      "PropertyObject",
      "PythonPropertyObject"
    ]
  },
  "import semmle.python.dataflow.new.internal.DataFlowImplSpecific": {
    "Imports": [
      "DataFlowPublic",
      "DataFlowUtil"
    ]
  },
  "import semmle.python.templates.PyxlTags": {
    "Predicates": [
      "getEnclosedNode",
      "getTagName",
      "getText",
      "getValue",
      "getEnclosedPythonCode",
      "getPyxlTagName"
    ],
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "defines",
      "getAChildNode",
      "getAFlowNode",
      "getAKeyword",
      "getANamedArg",
      "getANamedArgumentName",
      "getAPositionalArg",
      "getASubExpression",
      "getAnArg",
      "getArg",
      "getEnclosedPythonCode",
      "getEnclosingModule",
      "getFunc",
      "getKeyword",
      "getKwargs",
      "getLocation",
      "getNamedArg",
      "getNamedArgs",
      "getParent",
      "getParentNode",
      "getPositionalArg",
      "getPositionalArgs",
      "getPositionalArgumentCount",
      "getPyxlTagName",
      "getScope",
      "getStarArg",
      "getStarargs",
      "hasSideEffects",
      "isArtificial",
      "isConstant",
      "isParenthesised",
      "isParenthesized",
      "pointsTo",
      "refersTo",
      "toString"
    ],
    "Charpred": [
      "PyxlEndIfTag",
      "PyxlHtmlTag",
      "PyxlIfTag",
      "PyxlRawHtml",
      "PyxlTag"
    ],
    "Imports": [
      "python"
    ],
    "Classes": [
      "PyxlEndIfTag",
      "PyxlHtmlTag",
      "PyxlIfTag",
      "PyxlRawHtml",
      "PyxlTag"
    ]
  },
  "import semmle.python.templates.Templates": {
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "declaredInAll",
      "getAChildNode",
      "getAFlowNode",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getAnExport",
      "getAnImportedModuleName",
      "getBody",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getFile",
      "getHash",
      "getInitModule",
      "getKind",
      "getLastStatement",
      "getLoadPath",
      "getLocation",
      "getMetrics",
      "getName",
      "getPackage",
      "getPackageName",
      "getParentNode",
      "getPath",
      "getReturnNode",
      "getScope",
      "getShortName",
      "getStmt",
      "getSubModule",
      "hasFromFuture",
      "inSource",
      "inStdLib",
      "isArtificial",
      "isPackage",
      "isPackageInit",
      "isPublic",
      "isTopLevel",
      "precedes",
      "toString"
    ],
    "Charpred": [
      "PyxlModule",
      "SpitfireTemplate"
    ]
  },
  "import semmle.python.dataflow.new.RemoteFlowSources": {
    "Predicates": [
      "getThreatModel"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "getSourceType",
      "hasLocationInfo",
      "toString",
      "getThreatModel"
    ],
    "Classes": [
      "Range",
      "RemoteFlowSource"
    ],
    "Modules": [
      "RemoteFlowSource"
    ]
  },
  "import semmle.python.dataflow.new.SensitiveDataSources": {
    "Predicates": [
      "getClassification"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "SensitiveDataSource"
    ],
    "Classes": [
      "Range",
      "SensitiveDataSource"
    ],
    "Modules": [
      "SensitiveDataSource"
    ],
    "Aliases": [
      "SensitiveDataClassification",
      "sensitiveDataExtraStepForCalls"
    ]
  },
  "import semmle.python.security.dataflow.ReflectedXssQuery": {
    "Imports": [
      "DataFlow",
      "ReflectedXss",
      "TaintTracking"
    ],
    "Aliases": [
      "ReflectedXssFlow"
    ]
  },
  "import semmle.python.dataflow.new.Regexp": {
    "Inherited fields": [
      "node"
    ],
    "Predicates": [
      "getAParse",
      "getRegExpTerm"
    ],
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getNode",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "RegExpPatternSource"
    ],
    "Classes": [
      "RegExpPatternSource"
    ]
  },
  "import semmle.python.regexp.internal.RegExpTracking": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "RegExpSink"
    ]
  },
  "import semmle.python.security.dataflow.RegexInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "RegexEscapingAsSanitizer",
      "Sink"
    ],
    "Classes": [
      "RegexEscapingAsSanitizer",
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source"
    ],
    "Modules": [
      "RegexInjection"
    ],
    "Fields": [
      "regexExecution"
    ],
    "Predicates": [
      "getRegexExecution"
    ]
  },
  "import semmle.python.security.dataflow.RegexInjectionQuery": {
    "Imports": [
      "DataFlow",
      "RegexInjection",
      "TaintTracking"
    ],
    "Aliases": [
      "RegexInjectionFlow"
    ]
  },
  "import codeql.regex.RegexTreeView": {
    "Module signatures": [
      "RegexTreeViewSig"
    ]
  },
  "import semmle.python.security.dataflow.XmlBombCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Classes": [
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source",
      "XmlParsingVulnerableToXmlBomb"
    ],
    "Modules": [
      "XmlBomb"
    ],
    "Charpred": [
      "XmlParsingVulnerableToXmlBomb"
    ]
  },
  "import semmle.python.security.dataflow.XxeCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "XmlEscapingAsSanitizer",
      "XmlParsingVulnerableToXxe"
    ],
    "Classes": [
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source",
      "XmlEscapingAsSanitizer",
      "XmlParsingVulnerableToXxe"
    ],
    "Modules": [
      "Xxe"
    ]
  },
  "import semmle.python.regex": {
    "Imports": [
      "ParseRegExp",
      "python"
    ],
    "Predicates": [
      "getTermForExecution"
    ]
  },
  "import semmle.dataflow.SSA": {
    "Imports": [
      "Essa"
    ]
  },
  "import semmle.python.SSA": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "globallyDefinedName"
    ],
    "Classes": [
      "GlobalSsaVariable",
      "SsaVariable"
    ]
  },
  "import semmle.python.security.dataflow.XpathInjectionCustomizations": {
    "Inherited predicates": [
      "asCfgNode",
      "asExpr",
      "getALocalSource",
      "getEnclosingCallable",
      "getLocation",
      "getScope",
      "hasLocationInfo",
      "toString"
    ],
    "Charpred": [
      "XPathExecutionArg"
    ],
    "Classes": [
      "RemoteFlowSourceAsSource",
      "Sanitizer",
      "Sink",
      "Source",
      "XPathConstructionArg",
      "XPathExecutionArg"
    ],
    "Modules": [
      "XpathInjection"
    ]
  },
  "import semmle.python.Scope": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Scope"
    ]
  },
  "import semmle.python.SelfAttribute": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "attribute_assigned_in_method"
    ],
    "Classes": [
      "SelfAttribute",
      "SelfAttributeRead",
      "SelfAttributeStore"
    ]
  },
  "import semmle.python.frameworks.internal.SelfRefMixin": {
    "Predicates": [
      "getASelfRef"
    ],
    "Inherited predicates": [
      "contains",
      "containsInScope",
      "getABase",
      "getAChildNode",
      "getADecorator",
      "getAFlowNode",
      "getAMethod",
      "getANormalExit",
      "getAStmt",
      "getAnExitNode",
      "getBase",
      "getBody",
      "getClassObject",
      "getDocString",
      "getEnclosingModule",
      "getEnclosingScope",
      "getEntryNode",
      "getEvaluatingScope",
      "getFallthroughNode",
      "getInitMethod",
      "getLastStatement",
      "getLocation",
      "getMetaClass",
      "getMetrics",
      "getName",
      "getParent",
      "getParentNode",
      "getQualifiedName",
      "getReturnNode",
      "getScope",
      "getStmt",
      "hasSideEffects",
      "inSource",
      "isArtificial",
      "isProbableMixin",
      "isPublic",
      "isTopLevel",
      "precedes",
      "toString"
    ]
  },
  "import codeql.concepts.internal.SensitiveDataHeuristics": {
    "Predicates": [
      "certificate",
      "id",
      "password",
      "private",
      "secret"
    ]
  },
  "import codeql.serverless.ServerLess": {
    "Modules": [
      "ServerLess"
    ],
    "Module signatures": [
      "Input"
    ],
    "Imports": [
      "I"
    ],
    "Predicates": [
      "hasServerlessHandler",
      "splitHandler"
    ],
    "Parameters": [
      "I"
    ]
  },
  "import semmle.python.frameworks.ServerLess": {
    "Imports": [
      "DataFlow",
      "RemoteFlowSources",
      "python"
    ],
    "Aliases": [
      "SL"
    ]
  },
  "import semmle.python.security.dataflow.ServerSideRequestForgeryQuery": {
    "Imports": [
      "Concepts",
      "DataFlow",
      "ServerSideRequestForgery",
      "TaintTracking"
    ],
    "Predicates": [
      "fullyControlledRequest"
    ],
    "Aliases": [
      "FullServerSideRequestForgeryFlow",
      "PartialServerSideRequestForgeryFlow"
    ]
  },
  "import semmle.python.frameworks.Setuptools": {
    "Modules": [
      "Setuptools"
    ],
    "Predicates": [
      "getALibraryInput"
    ]
  },
  "import semmle.python.security.dataflow.SqlInjectionQuery": {
    "Imports": [
      "DataFlow",
      "SqlInjection",
      "TaintTracking"
    ],
    "Aliases": [
      "SqlInjectionFlow"
    ]
  },
  "import semmle.python.essa.SsaCompute": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "phiIndex",
      "piIndex"
    ],
    "Aliases": [
      "AdjacentUses",
      "EssaDefinitions",
      "Liveness",
      "SsaDefinitions"
    ]
  },
  "import semmle.python.essa.SsaDefinitions": {
    "Imports": [
      "python"
    ],
    "Modules": [
      "SsaSource"
    ]
  },
  "import semmle.python.security.dataflow.StackTraceExposureQuery": {
    "Imports": [
      "DataFlow",
      "StackTraceExposure",
      "TaintTracking"
    ],
    "Aliases": [
      "StackTraceExposureFlow"
    ]
  },
  "import semmle.python.dataflow.StateTracking": {
    "Imports": [
      "StateTracking"
    ]
  },
  "import semmle.python.dataflow.old.StateTracking": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "TrackableState"
    ],
    "Modules": [
      "StateTracking"
    ],
    "Predicates": [
      "appliesToNode",
      "appliesTo",
      "endsAt",
      "mayNotApplyTo",
      "startsAt",
      "testsFor"
    ],
    "Inherited predicates": [
      "charAt",
      "codePointAt",
      "codePointCount",
      "indexOf",
      "isLowercase",
      "isUppercase",
      "length",
      "matches",
      "prefix",
      "regexpCapture",
      "regexpFind",
      "regexpMatch",
      "regexpReplaceAll",
      "replaceAll",
      "splitAt",
      "substring",
      "suffix",
      "toBigInt",
      "toDate",
      "toFloat",
      "toInt",
      "toLowerCase",
      "toString",
      "toUpperCase",
      "trim"
    ],
    "Charpred": [
      "TrackableState"
    ]
  },
  "import semmle.python.Stmts": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "AnnAssign",
      "Assert",
      "Assign",
      "AssignStmt",
      "AsyncFor",
      "AsyncWith",
      "AugAssign",
      "Break",
      "Case",
      "Continue",
      "Delete",
      "ExceptGroupStmt",
      "ExceptStmt",
      "ExceptionHandler",
      "Exec",
      "ExprStmt",
      "For",
      "Global",
      "If",
      "MatchStmt",
      "Nonlocal",
      "Pass",
      "Print",
      "Raise",
      "Return",
      "Stmt",
      "StmtList",
      "TemplateWrite",
      "Try",
      "While",
      "With"
    ]
  },
  "import semmle.python.frameworks.Streamlit": {
    "Imports": [
      "ApiGraphs",
      "Concepts",
      "RemoteFlowSources",
      "TaintTracking",
      "python"
    ],
    "Modules": [
      "Streamlit"
    ]
  },
  "import semmle.python.values.StringAttributes": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "open_file",
      "sequence_for_iterator",
      "string_attribute_all",
      "string_attribute_any",
      "tracked_call_step",
      "tracked_object",
      "tracked_object_all",
      "tracked_object_any"
    ]
  },
  "import codeql.util.Strings": {
    "Predicates": [
      "asciiPrintable",
      "escape",
      "getACodepoint",
      "getCodepointAt",
      "getCodepointLength"
    ]
  },
  "import semmle.python.strings": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "format_items",
      "format_string",
      "illegal_conversion_specifier",
      "mapping_format",
      "repr"
    ]
  },
  "import semmle.python.frameworks.TRender": {
    "Modules": [
      "TRender"
    ]
  },
  "import semmle.python.dataflow.new.TaintTracking": {
    "Modules": [
      "TaintTracking"
    ],
    "Imports": [
      "TaintFlowMake<Files::Location, DataFlowImplSpecific::PythonDataFlow, TaintTrackingImplSpecific::PythonTaintTracking>",
      "TaintTrackingPublic"
    ]
  },
  "import semmle.python.security.TaintTracking": {
    "Imports": [
      "TaintTracking"
    ]
  },
  "import semmle.python.dataflow.TaintTracking": {
    "Imports": [
      "TaintTracking"
    ]
  },
  "import semmle.python.security.dataflow.TarSlipQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking",
      "TarSlip"
    ],
    "Aliases": [
      "TarSlipFlow"
    ]
  },
  "import semmle.python.security.dataflow.TemplateInjectionQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking",
      "TemplateInjection"
    ],
    "Aliases": [
      "TemplateInjectionFlow"
    ]
  },
  "import utils.test.dataflow.testConfig": {
    "Predicates": [
      "isBarrierIn",
      "isSink",
      "isSource"
    ],
    "Imports": [
      "DataFlow"
    ],
    "Modules": [
      "TestConfig"
    ],
    "Aliases": [
      "TestFlow"
    ]
  },
  "import utils.test.dataflow.testTaintConfig": {
    "Predicates": [
      "isBarrierIn",
      "isSink",
      "isSource"
    ],
    "Imports": [
      "DataFlow",
      "TaintTracking"
    ],
    "Modules": [
      "TestConfig"
    ],
    "Aliases": [
      "TestFlow"
    ]
  },
  "import semmle.python.TestUtils": {
    "Imports": [
      "python"
    ],
    "Predicates": [
      "compact_location",
      "remove_library_prefix",
      "remove_prefix_before_substring"
    ]
  },
  "import codeql.threatmodels.ThreatModels": {
    "Predicates": [
      "currentThreatModel",
      "knownThreatModel",
      "threatModelConfiguration"
    ]
  },
  "import codeql.typetracking.TypeTracking": {
    "Imports": [
      "TypeTrack<TypeTracking::TypeTracking::TypeTrack::source>"
    ],
    "Parameters": [
      "source",
      "Location",
      "I"
    ],
    "Modules": [
      "TypeTracking",
      "TypeTrack"
    ],
    "Module signatures": [
      "TypeTrackingInput"
    ],
    "Predicate signatures": [
      "endpoint"
    ],
    "Aliases": [
      "TypeBackTracker",
      "TypeTracker"
    ]
  },
  "import semmle.python.dataflow.new.TypeTracking": {
    "Predicates": [
      "getAttr",
      "startInAttr"
    ],
    "Inherited predicates": [
      "call",
      "continue",
      "end",
      "getContent",
      "smallstep",
      "start",
      "startInContent",
      "step",
      "toString"
    ],
    "Imports": [
      "TypeTracking<Files::Location, TypeTrackingImpl::TypeTrackingInput>"
    ],
    "Classes": [
      "TypeTracker"
    ],
    "Aliases": [
      "AttributeName"
    ]
  },
  "import codeql.util.Unit": {
    "Classes": [
      "Unit"
    ]
  },
  "import semmle.python.Unit": {
    "Imports": [
      "Unit"
    ]
  },
  "import semmle.python.security.dataflow.UnsafeDeserializationQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking",
      "UnsafeDeserialization"
    ],
    "Aliases": [
      "UnsafeDeserializationFlow"
    ]
  },
  "import semmle.python.security.dataflow.UnsafeShellCommandConstructionQuery": {
    "Predicates": [
      "getAFeature",
      "getASelectedSinkLocation",
      "isBarrier",
      "isSink",
      "isSource",
      "observeDiffInformedIncrementalMode"
    ],
    "Imports": [
      "DataFlow",
      "UnsafeShellCommandConstruction",
      "python"
    ],
    "Modules": [
      "UnsafeShellCommandConstructionConfig"
    ],
    "Aliases": [
      "UnsafeShellCommandConstructionFlow"
    ]
  },
  "import semmle.python.security.dataflow.UrlRedirectQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking"
    ],
    "Aliases": [
      "UrlRedirect",
      "UrlRedirectFlow"
    ]
  },
  "import semmle.python.Variables": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "FastLocalVariable",
      "GlobalVariable",
      "LocalVariable",
      "NameLocalVariable",
      "Variable"
    ]
  },
  "import semmle.python.types.Version": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "Version"
    ]
  },
  "import codeql.util.Void": {
    "Classes": [
      "Void"
    ],
    "Predicates": [
      "toString"
    ]
  },
  "import semmle.python.xml.XML": {
    "Imports": [
      "FileSystem",
      "Make<Files::File, Files::Location, XML::Input>"
    ]
  },
  "import semmle.python.security.dataflow.XmlBombQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking",
      "XmlBomb",
      "python"
    ],
    "Aliases": [
      "XmlBombFlow"
    ]
  },
  "import semmle.python.security.dataflow.XpathInjectionQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking",
      "XpathInjection"
    ],
    "Aliases": [
      "XpathInjectionFlow"
    ]
  },
  "import semmle.python.security.dataflow.XxeQuery": {
    "Imports": [
      "DataFlow",
      "TaintTracking",
      "Xxe",
      "python"
    ],
    "Aliases": [
      "XxeFlow"
    ]
  },
  "import semmle.python.Yaml": {
    "Imports": [
      "Make<Yaml::YamlSig>"
    ]
  },
  "import semmle.python.libraries.Zope": {
    "Imports": [
      "python"
    ],
    "Classes": [
      "ZopeInterfaceMethodValue"
    ],
    "Predicates": [
      "maxParameters",
      "minParameters"
    ],
    "Inherited predicates": [
      "attr",
      "descriptiveString",
      "getABooleanValue",
      "getACall",
      "getAFunctionCall",
      "getAMethodCall",
      "getARaisedType",
      "getAReference",
      "getAReturnedNode",
      "getAnInferredReturnType",
      "getArgumentForCall",
      "getClass",
      "getDefiniteBooleanValue",
      "getName",
      "getNamedArgumentForCall",
      "getOrigin",
      "getParameter",
      "getParameterByName",
      "getQualifiedName",
      "getScope",
      "hasAttribute",
      "hasLocationInfo",
      "isAbsent",
      "isBuiltin",
      "isLambda",
      "isLegalArgumentName",
      "isNormalMethod",
      "isOverriddenMethod",
      "isOverridingMethod",
      "neverReturns",
      "overrides",
      "toString"
    ],
    "Charpred": [
      "ZopeInterfaceMethodValue"
    ]
  }
}