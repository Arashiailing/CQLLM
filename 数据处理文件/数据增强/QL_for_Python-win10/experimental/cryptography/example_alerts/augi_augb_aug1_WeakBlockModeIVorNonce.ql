/**
 * @name Weak block mode IV or nonce
 * @description Identifies cryptographic operations using block modes with weak initialization vectors (IVs) or nonces.
 *              This query flags cases where IVs/nonces are either missing or not generated by os.urandom.
 *              For analysis efficiency, any IV/nonce not verifiably sourced from os.urandom is considered weak.
 *              Fernet operations are excluded since they handle IV generation internally.
 *              Note: Functions that infer both mode and IV may produce false positives requiring manual review.
 * @id py/weak-block-mode-iv-or-nonce
 * @kind problem
 * @problem.severity error
 * @precision high
 */

import python
import experimental.cryptography.Concepts

from BlockMode cipherOperation, string diagnosticMsg, DataFlow::Node flaggedIvSource
where
  // Exclude Fernet operations (handles IV generation internally)
  not cipherOperation instanceof CryptographyModule::Encryption::SymmetricEncryption::Fernet::CryptographyFernet and
  // Check for missing IV/nonce or non-os.urandom source
  (
    not cipherOperation.hasIVorNonce() or
    not API::moduleImport("os").getMember("urandom").getACall() = cipherOperation.getIVorNonce()
  ) and
  // Determine flagged node based on IV presence
  (
    if not cipherOperation.hasIVorNonce()
    then (
      flaggedIvSource = cipherOperation and 
      diagnosticMsg = "Block mode is missing IV/Nonce initialization."
    )
    else (
      flaggedIvSource = cipherOperation.getIVorNonce()
    )
  ) and
  // Finalize diagnostic message with weak initialization details
  diagnosticMsg = "Block mode is not using an accepted IV/Nonce initialization: $@"

select cipherOperation, diagnosticMsg, flaggedIvSource, flaggedIvSource.toString()