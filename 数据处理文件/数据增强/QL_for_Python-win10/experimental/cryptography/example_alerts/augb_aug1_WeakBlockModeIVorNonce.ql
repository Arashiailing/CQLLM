/**
 * @name Weak block mode IV or nonce
 * @description Detects cryptographic operations using block modes with weak initialization vectors (IVs) or nonces.
 *              Specifically identifies cases where IVs/nonces are missing or not generated by
 *              os.urandom. For analysis simplicity, any IV/nonce not verifiably from os.urandom
 *              is flagged. Nuanced considerations (e.g., proper nonce usage in GCM mode) are
 *              handled by separate queries. Fernet is excluded as it properly uses os.urandom internally.
 *              Functions inferring both mode and IV may trigger false positives requiring user suppression.
 * @id py/weak-block-mode-iv-or-nonce
 * @kind problem
 * @problem.severity error
 * @precision high
 */

import python
import experimental.cryptography.Concepts

from BlockMode cryptoOperation, string alertMessage, DataFlow::Node flaggedNode
where
  // Exclude Fernet as it properly handles IV generation internally
  not cryptoOperation instanceof CryptographyModule::Encryption::SymmetricEncryption::Fernet::CryptographyFernet and
  (
    // Check for missing IV/nonce or non-os.urandom source
    not cryptoOperation.hasIVorNonce() or
    not API::moduleImport("os").getMember("urandom").getACall() = cryptoOperation.getIVorNonce()
  ) and
  // Determine flagged node based on IV presence
  (
    if not cryptoOperation.hasIVorNonce()
    then (
      flaggedNode = cryptoOperation and 
      alertMessage = "Block mode is missing IV/Nonce initialization."
    )
    else (
      flaggedNode = cryptoOperation.getIVorNonce()
    )
  ) and
  // Finalize alert message with weak initialization details
  alertMessage = "Block mode is not using an accepted IV/Nonce initialization: $@"
select cryptoOperation, alertMessage, flaggedNode, flaggedNode.toString()