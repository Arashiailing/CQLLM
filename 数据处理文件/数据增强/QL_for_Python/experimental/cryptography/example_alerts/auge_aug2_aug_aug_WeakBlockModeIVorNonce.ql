/**
 * @name Weak block mode IV or nonce
 * @description Identifies weak initialization vectors (IVs) or nonces in block cipher operations.
 *              This query flags cases where IVs/nonces are either missing or not generated by os.urandom.
 *              Fernet is excluded as it handles IV generation internally. Complex cases may require
 *              manual review.
 *
 * @id py/weak-block-mode-iv-or-nonce
 * @kind problem
 * @problem.severity error
 * @precision high
 * @tags security
 *       cryptography
 */

import python
import experimental.cryptography.Concepts

// Find block mode operations with weak IV/nonce configurations
from BlockMode cipherOperation, string diagnosticMessage, DataFlow::Node weakInitializationVector
where
  // Exclude Fernet which handles IV generation internally
  not cipherOperation instanceof CryptographyModule::Encryption::SymmetricEncryption::Fernet::CryptographyFernet and
  (
    // Identify cases with missing IV/nonce or IV/nonce not from os.urandom
    not cipherOperation.hasIVorNonce() or
    not API::moduleImport("os").getMember("urandom").getACall() = cipherOperation.getIVorNonce()
  ) and
  // Set the weak source and diagnostic message based on the IV/nonce presence
  (
    if not cipherOperation.hasIVorNonce()
    then (
      // Case when IV/nonce is missing
      weakInitializationVector = cipherOperation and 
      diagnosticMessage = "Block mode is missing IV/Nonce initialization."
    )
    else (
      // Case when IV/nonce is from an insecure source
      weakInitializationVector = cipherOperation.getIVorNonce()
    )
  ) and
  // Finalize the diagnostic message
  diagnosticMessage = "Block mode is not using an accepted IV/Nonce initialization: $@"
select cipherOperation, diagnosticMessage, weakInitializationVector, weakInitializationVector.toString()