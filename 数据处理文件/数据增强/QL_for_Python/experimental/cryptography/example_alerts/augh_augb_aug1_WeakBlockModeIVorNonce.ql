/**
 * @name Weak block mode IV or nonce
 * @description Identifies cryptographic operations using block modes with weak initialization vectors (IVs) or nonces.
 *              Specifically flags cases where IVs/nonces are missing or not generated by os.urandom.
 *              For analysis simplicity, any IV/nonce not verifiably from os.urandom is considered weak.
 *              Nuanced cases (e.g., proper nonce usage in GCM mode) are handled by separate queries.
 *              Fernet is excluded as it internally uses os.urandom correctly.
 *              Functions inferring both mode and IV may generate false positives requiring manual review.
 * @id py/weak-block-mode-iv-or-nonce
 * @kind problem
 * @problem.severity error
 * @precision high
 */

import python
import experimental.cryptography.Concepts

from BlockMode cipherOperation, string warningMessage, DataFlow::Node vulnerableNode
where
  // Exclude Fernet due to proper internal IV handling
  not cipherOperation instanceof CryptographyModule::Encryption::SymmetricEncryption::Fernet::CryptographyFernet and
  
  // Identify IV/nonce issues: missing or non-os.urandom source
  (
    not cipherOperation.hasIVorNonce() or
    not API::moduleImport("os").getMember("urandom").getACall() = cipherOperation.getIVorNonce()
  ) and
  
  // Determine vulnerable node based on IV presence
  (
    if not cipherOperation.hasIVorNonce()
    then vulnerableNode = cipherOperation  // Flag the operation itself when IV is missing
    else vulnerableNode = cipherOperation.getIVorNonce()  // Flag the IV source when present
  ) and
  
  // Construct unified warning message
  warningMessage = "Block mode is not using an accepted IV/Nonce initialization: $@"

select cipherOperation, warningMessage, vulnerableNode, vulnerableNode.toString()