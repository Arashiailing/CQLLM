/**
 * @name Weak block mode IV or nonce
 * @description Identifies vulnerable initialization vectors (IVs) or nonces in block cipher operations.
 *              Detects cases where IVs/nonces are either absent or not generated by os.urandom.
 *              Fernet is excluded as it manages IV generation internally. Complex scenarios may
 *              require manual verification.
 *
 * @id py/weak-block-mode-iv-or-nonce
 * @kind problem
 * @problem.severity error
 * @precision high
 * @tags security
 *       cryptography
 */

import python
import experimental.cryptography.Concepts

// Identify block cipher operations with vulnerable IV/nonce configurations
from BlockMode blockModeOperation, string alertMessage, DataFlow::Node vulnerabilitySource
where
  // Exclude Fernet as it manages IV generation internally
  not blockModeOperation instanceof CryptographyModule::Encryption::SymmetricEncryption::Fernet::CryptographyFernet and
  (
    // Case 1: Missing IV/nonce
    not blockModeOperation.hasIVorNonce() and
    vulnerabilitySource = blockModeOperation and
    alertMessage = "Block mode is missing IV/Nonce initialization."
    or
    // Case 2: IV/nonce from insecure source (not os.urandom)
    blockModeOperation.hasIVorNonce() and
    not API::moduleImport("os").getMember("urandom").getACall() = blockModeOperation.getIVorNonce() and
    vulnerabilitySource = blockModeOperation.getIVorNonce() and
    alertMessage = "Block mode is not using an accepted IV/Nonce initialization: $@"
  )
select blockModeOperation, alertMessage, vulnerabilitySource, vulnerabilitySource.toString()